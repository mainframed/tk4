         TITLE 'ICBVDM00 MSVC DEMOUNT SERVICE MODULE V1.0              *
                        '
ICBVDM00 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICBVDM00  77.355'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @11,4095(,@12)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@11                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*                                      DEMOUNT REQ BLK       @G24LB23*/
*                                                                  0118
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION OF VARIABLES                           @Y30LB11*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0118
*   RPLVPTR=REG1;                   /* SET RPLV BASE         @Y30LB11*/
         LR    RPLVPTR,REG1                                        0118
*   ARGNUM=0;                       /* ZERO GROUP KEY ARG    @Y30LB11*/
         MVI   ARGNUM,X'00'                                        0119
*   CPU=''B;                        /* ZERO CPUID ELEMENT    @Y30LB11*/
         XC    CPU(2),CPU                                          0120
*   LSPFOUND=OFF;                   /* INIT LSP TABLE SW OFF @Y30LB11*/
         NI    LSPFOUND,B'01111111'                                0121
*   MSGRQ=''B;                      /* ZERO MACRO LIST       @Y30LB11*/
         XC    MSGRQ(32),MSGRQ                                     0122
*   MSGRPLV=RPLVPTR;                /* MSVC RPLV ADDR        @Y30LB11*/
         ST    RPLVPTR,MSGRPLV                                     0123
*   SAVRETC=RPLVRETC;               /* SAVE RC               @Y30LB11*/
         MVC   SAVRETC(2),RPLVRETC(RPLVPTR)                        0124
*   RPLVRETC=''B;                   /* ZERO RC               @Y30LB11*/
         XC    RPLVRETC(2,RPLVPTR),RPLVRETC(RPLVPTR)               0125
*   VVIPTR=RPLVVICB;                /* BASE MSVC CB          @Y30LB11*/
         L     VVIPTR,RPLVVICB(,RPLVPTR)                           0126
*   Z5=''B;                         /* ZERO 5 CHARACTERS     @Y30LB11*/
         XC    Z5(5),Z5                                            0127
*   RESPECIFY                       /*                       @Y30LB11*/
*     ICBDMLST BASED(ADDR(RPLVUTIL));/* BASE DEMOUNT LIST    @Y30LB11*/
*                                                                  0128
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSVC IS DISABLED OR VOLID IS BINARY ZEROES, THEN   @VS32185*/
*   /* RETURN IMMEDIATELY                                    @VS32185*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0129
*   IF VVIFLG0=ON×DMVOL=ZEROVOL THEN/* DISABLED OR ZERO      @VS32185
*                                      VOLID                 @VS32185*/
         TM    VVIFLG0(VVIPTR),B'10000000'                         0129
         BO    @RT00129                                            0129
         CLC   DMVOL+132(6,RPLVPTR),ZEROVOL                        0129
         BE    @RT00129                                            0129
*     RETURN;                       /* YES, RETURN TO VCR    @Y30LB11*/
*                                                                  0131
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RPLFTIME IS OFF THEN PERFORM THE FIRST CALL RTN    @Y30LB11*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0131
*   IF RPLFTIME=OFF THEN            /* IS THIS CALL 1?       @Y30LB11*/
         TM    RPLFTIME(RPLVPTR),B'10000000'                       0131
         BNZ   @RF00131                                            0131
*     DO;                           /* YES                   @Y30LB11*/
*       IF VVIUCB=0 THEN            /* WAS VVIUCB SET?       @Y30LB11*/
         L     @14,VVIUCB(,VVIPTR)                                 0133
         LTR   @14,@14                                             0133
         BZ    @RT00133                                            0133
*         RETURN;                   /* NO, RETURN TO VCR     @Y30LB11*/
*       UCBPR1=VVIUCB;              /* BASE UCB              @Y30LB11*/
*                                                                  0135
         LR    UCBPR1,@14                                          0135
*       /*************************************************************/
*       /*                                                           */
*       /* LOOK THROUGH THE UCB ADDRESS TABLE TO FIND THE VOLUME     */
*       /* WHICH IS TO BE DEMOUNTED. WHEN FOUND SET REGS FOR LSPACE. */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0136
*       DO WHILE UCBPR2>FOXES;      /* END OF TABLE?         @Y30LB11*/
         B     @DE00136                                            0136
@DL00136 DS    0H                                                  0137
*         IF UCBVOLI=DMVOL THEN     /* SAME VOLID?           @Y30LB11*/
         L     @14,UCBPTR(,UCBPR1)                                 0137
         CLC   UCBVOLI(6,@14),DMVOL+132(RPLVPTR)                   0137
         BNE   @RF00137                                            0137
*           DO;                     /* YES                   @Y30LB11*/
*             REG0=UCBPR2;          /* SET REG0 FOR SVC78    @Y30LB11*/
         L     REG0,UCBPR2(,UCBPR1)                                0139
*             REG1=ADDR(LSPOUT);    /* SET REG1 FOR SVC78    @Y30LB11*/
         LA    REG1,LSPOUT                                         0140
*             SVC(LSPACE);          /* LSPACE MACRO          @Y30LB11*/
*                                                                  0141
         SVC   78                                                  0141
*             /*******************************************************/
*             /*                                                     */
*             /* IF LSPACE RETURNED OKAY THEN PERFORM THE GETMAIN FOR*/
*             /* THE LSPACE TABLE SEGMENT.                   @Y30LB11*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0142
*             IF RETCOD=0 THEN      /* LSPACE OKAY?          @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0142
         BNZ   @RF00142                                            0142
*               DO;                 /* YES                   @Y30LB11*/
*                 CALL GETCORE;     /* GETMAIN               @Y30LB11*/
*                                                                  0144
         BAL   @14,GETCORE                                         0144
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF THE GETMAIN RETURNED OKAY THEN CHAIN THE     */
*                 /* TABLE BETWEEN THE MSVC CONTROL BLOCK AND ANY    */
*                 /* OTHER LSPACE TABLE SEGMENTS.            @Y30LB11*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0145
*                 IF RETCOD=0 THEN  /* GETMAIN OKAY?         @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0145
         BNZ   @RF00145                                            0145
*                   DO;             /* YES                   @Y30LB11*/
*                     LSPQPTR=VVIQLSPL;/* SET CHAIN PTR      @Y30LB11*/
         L     @14,LSPTPTR                                         0147
         L     @10,VVIQLSPL(,VVIPTR)                               0147
         ST    @10,LSPQPTR(,@14)                                   0147
*                     VVIQLSPL=LSPTPTR;/* SET MSVC PTR       @Y30LB11*/
         ST    @14,VVIQLSPL(,VVIPTR)                               0148
*                     LSPVOLID=DMVOL;/* SET VOLID            @Y30LB11*/
         MVC   LSPVOLID(6,@14),DMVOL+132(RPLVPTR)                  0149
*                     PACK(TEMP,FREFRESP);/* PACK EBCDIC     @Y30LB11*/
         PACK  TEMP(4),FREFRESP(4)                                 0150
*                     CVB(LSPFRESP,TEMP);/* BINARY AREA      @Y30LB11*/
         XC    @TS00001(8),@TS00001                                0151
         MVC   @TS00001+4(4),TEMP                                  0151
         CVB   @10,@TS00001                                        0151
         ST    @10,LSPFRESP(,@14)                                  0151
*                     PACK(TEMP,FREFREXT);/* PACK EBCDIC     @Y30LB11*/
         PACK  TEMP(4),FREFREXT(4)                                 0152
*                     CVB(LSPFREXT,TEMP);/* BINARY CYLS      @Y30LB11*/
         XC    @TS00001(8),@TS00001                                0153
         MVC   @TS00001+4(4),TEMP                                  0153
         CVB   @10,@TS00001                                        0153
         ST    @10,LSPFREXT(,@14)                                  0153
*                     PACK(TEMP,FRELEXT);/* PACK EBCDIC      @Y30LB11*/
         PACK  TEMP(4),FRELEXT(4)                                  0154
*                     CVB(LSPLEXT,TEMP);/* BINARY EXTENTS    @Y30LB11*/
         XC    @TS00001(8),@TS00001                                0155
         MVC   @TS00001+4(4),TEMP                                  0155
         CVB   @10,@TS00001                                        0155
         ST    @10,LSPLEXT(,@14)                                   0155
*                     RETURN;       /* RET TO ICBVCR00       @Y30LB11*/
@EL00001 L     @13,4(,@13)                                         0156
@EF00001 DS    0H                                                  0156
@ER00001 LM    @14,@12,12(@13)                                     0156
         BR    @14                                                 0156
*                   END;            /*                       @Y30LB11*/
*                 ELSE              /* OTHERWISE             @Y30LB11*/
*                   DO;             /*                       @Y30LB11*/
@RF00145 DS    0H                                                  0159
*                     MSGID=M409;   /* GETMAIN FAILURE       @Y30LB11*/
         MVC   MSGID(4),@CF00078                                   0159
*                     REG1=ADDR(MSGRQ);/* REG1 PARAMETER     @Y30LB11*/
         LA    REG1,MSGRQ                                          0160
*                     CALL ICBVOP00;/* OPER/LIB ROUTINE      @Y30LB11*/
         L     @15,@CV00055                                        0161
         BALR  @14,@15                                             0161
*                     RPLVRETC=Z2;  /* RESET RC ZERO         @Y30LB11*/
         MVC   RPLVRETC(2,RPLVPTR),Z2                              0162
*                     RETURN;       /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0163
*                   END;            /*                       @Y30LB11*/
*               END;                /*                       @Y30LB11*/
*             ELSE                  /* OTHERWISE             @Y30LB11*/
*               DO;                 /* SET UP MSG            @Y30LB11*/
@RF00142 DS    0H                                                  0167
*                 IF UCBNRY=OFF&    /* IS THE UCB READY      @ZM30726*/
*                     UCBMOUNT=OFF THEN/* IS THERE NO MOUNT  @ZM30726
*                                      PENDING               @ZM30726*/
         L     @14,UCBPTR(,UCBPR1)                                 0167
         TM    UCBNRY(@14),B'01000000'                             0167
         BNZ   @RF00167                                            0167
         TM    UCBMOUNT(@14),B'10000000'                           0167
         BNZ   @RF00167                                            0167
*                   DO;             /*                       @ZM30726*/
*                     MSGID=M401;   /* LSPACE FAILURE        @Y30LB11*/
         MVC   MSGID(4),@CF00068                                   0169
*                     MSGLEN1=SIX;  /* VOLID LENGTH          @Y30LB11*/
         MVI   MSGLEN1,X'06'                                       0170
*                     MSGTEXT1=ADDR(DMVOL);/* VOLID LOCATION @Y30LB11*/
         LA    @14,DMVOL+132(,RPLVPTR)                             0171
         STCM  @14,7,MSGTEXT1                                      0171
*                     TEMP1=RETCOD; /* PLACE RC IN TEMP      @Y30LB11*/
         LR    TEMP1,RETCOD                                        0172
*                     CVD(TEMP1,TEMP0);/* CONVERT TO DECIMAL @Y30LB11*/
         CVD   TEMP1,@TS00001                                      0173
         MVC   TEMP0(4),@TS00001+4                                 0173
*                     UNPK(TEMP2,TEMP0);/* UNPACK RETURN CODE      0174
*                                                            @Y30LB11*/
         UNPK  TEMP2(7),TEMP0(4)                                   0174
*                     T1=T1×ORBITS; /* LAST BYTE NUMERIC     @Y30LB11*/
         OC    T1(2),@CB00099                                      0175
*                     MSGLEN2=TWO;  /* RETURN CODE LENGTH    @Y30LB11*/
         MVI   MSGLEN2,X'02'                                       0176
*                     MSGTEXT2=ADDR(T1);/* RETURN CODE LOCATION    0177
*                                                            @Y30LB11*/
         LA    @14,T1                                              0177
         STCM  @14,7,MSGTEXT2                                      0177
*                     REG1=ADDR(MSGRQ);/* REG1 PARAMETER     @Y30LB11*/
         LA    REG1,MSGRQ                                          0178
*                     CALL ICBVOP00;/* OPER/LIB ROUTINE      @Y30LB11*/
         L     @15,@CV00055                                        0179
         BALR  @14,@15                                             0179
*                   END;            /*                       @ZM30726*/
*                 RPLVRETC=Z2;      /* RESET RC ZERO         @Y30LB11*/
@RF00167 MVC   RPLVRETC(2,RPLVPTR),Z2                              0181
*                 RETURN;           /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0182
*               END;                /*                       @Y30LB11*/
*           END;                    /*                       @Y30LB11*/
*         ELSE                      /* OTHERWISE             @Y30LB11*/
*           UCBPR1=UCBPR1+4;        /* GET NEXT VIRTUAL UCB  @Y30LB11*/
@RF00137 AL    UCBPR1,@CF00115                                     0185
*       END;                        /*                       @Y30LB11*/
@DE00136 L     @14,UCBPR2(,UCBPR1)                                 0186
         LTR   @14,@14                                             0186
         BNM   @DL00136                                            0186
*       MSGID=M400;                 /* UCB NOT FOUND         @Y30LB11*/
         MVC   MSGID(4),@CF00066                                   0187
*       MSGLEN1=SIX;                /* VOLID LENGTH          @Y30LB11*/
         MVI   MSGLEN1,X'06'                                       0188
*       MSGTEXT1=ADDR(DMVOL);       /* VOLID ADDR            @Y30LB11*/
         LA    @14,DMVOL+132(,RPLVPTR)                             0189
         STCM  @14,7,MSGTEXT1                                      0189
*       REG1=ADDR(MSGRQ);           /* REG1 PARAMETER        @Y30LB11*/
         LA    REG1,MSGRQ                                          0190
*       CALL ICBVOP00;              /* OPER/LIB ROUTINE      @Y30LB11*/
         L     @15,@CV00055                                        0191
         BALR  @14,@15                                             0191
*       RPLVRETC=Z2;                /* RESET RC ZERO         @Y30LB11*/
         MVC   RPLVRETC(2,RPLVPTR),Z2                              0192
*       RETURN;                     /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0193
*     END;                          /*                       @Y30LB11*/
*                                                                  0195
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION OF CODE IS EXECUTED FOR SECOND CALLS AFTER THE   */
*   /* MSC HAS EXECUTED THE DEMOUNT ORDER.                   @Y30LB11*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0195
*   ELSE                            /*                       @Y30LB11*/
*     DO;                           /*                       @Y30LB11*/
*                                                                  0195
@RF00131 DS    0H                                                  0196
*       /*************************************************************/
*       /*                                                           */
*       /* IF NOT A RECOVERY REQUEST, FIND THE LSPACE TABLE  @G24LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0196
*       IF RPLJRCVY=OFF THEN        /*                       @G24LB23*/
         TM    RPLJRCVY(RPLVPTR),B'00000010'                       0196
         BNZ   @RF00196                                            0196
*         DO;                       /*                       @G24LB23*/
*           LASTLSPT=ADDR(VVIQLSPL);/* ADDR FOR FREEMAIN     @Y30LB11*/
         LA    @14,VVIQLSPL(,VVIPTR)                               0198
         ST    @14,LASTLSPT                                        0198
*           LSPTPTR=VVIQLSPL;       /* INITIALIZE POINTER    @Y30LB11*/
         L     @14,VVIQLSPL(,VVIPTR)                               0199
         ST    @14,LSPTPTR                                         0199
*           LSPTSAV=LSPTPTR;        /* SAVE LSPTPTR          @Y30LB11*/
         LR    LSPTSAV,@14                                         0200
*           FWDCHAIN=LSPQPTR;       /* CHAIN AHEAD POINTER   @Y30LB11*/
         L     @14,LSPQPTR(,@14)                                   0201
         ST    @14,FWDCHAIN                                        0201
*           DO WHILE LSPTSAV^=0;    /* END OF TABLE?         @Y30LB11*/
         B     @DE00202                                            0202
@DL00202 DS    0H                                                  0203
*             IF DMVOL=LSPVOLID THEN/* LSPTABLE FOUND?       @Y30LB11*/
         L     @14,LSPTPTR                                         0203
         CLC   DMVOL+132(6,RPLVPTR),LSPVOLID(@14)                  0203
         BNE   @RF00203                                            0203
*               DO;                 /* YES                           */
*                 LSPFOUND=ON;      /* LSPACE TABLE FOUND    @Y30LB11*/
         OI    LSPFOUND,B'10000000'                                0205
*                 IF SAVRETC^=Z2 THEN/* MSC FAILURE?         @Y30LB11*/
         CLC   SAVRETC(2),Z2                                       0206
         BE    @RF00206                                            0206
*                   DO;             /* YES                   @Y30LB11*/
*                     CALL FREECORE;/* FREE LSPTABLE         @Y30LB11*/
         BAL   @14,FREECORE                                        0208
*                     RETURN;       /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0209
*                   END;            /*                       @Y30LB11*/
*               END;                /*                       @Y30LB11*/
@RF00206 DS    0H                                                  0212
*             IF LSPFOUND=ON THEN   /* CONTINUE LOOPING?     @Y30LB11*/
@RF00203 TM    LSPFOUND,B'10000000'                                0212
         BNO   @RF00212                                            0212
*               LSPTSAV=0;          /* NO, IF LSPTABLE FOUND @Y30LB11*/
         SLR   LSPTSAV,LSPTSAV                                     0213
*             ELSE                  /* OTHERWISE             @Y30LB11*/
*               DO;                 /* RESET                 @Y30LB11*/
         B     @RC00212                                            0214
@RF00212 DS    0H                                                  0215
*                 LASTLSPT=LSPTPTR; /* LAST LSP ELEMENT      @Y30LB11*/
         L     @14,LSPTPTR                                         0215
         ST    @14,LASTLSPT                                        0215
*                 LSPTPTR=LSPQPTR;  /* RESET BASE            @Y30LB11*/
         L     @14,LSPQPTR(,@14)                                   0216
         ST    @14,LSPTPTR                                         0216
*                 LSPTSAV=LSPTPTR;  /* RESET PTR             @Y30LB11*/
         LR    LSPTSAV,@14                                         0217
*                 FWDCHAIN=LSPQPTR; /* CHAIN AHEAD POINTER   @Y30LB11*/
         L     @14,LSPQPTR(,@14)                                   0218
         ST    @14,FWDCHAIN                                        0218
*               END;                /*                       @Y30LB11*/
*           END;                    /*                       @Y30LB11*/
*                                                                  0220
@RC00212 DS    0H                                                  0220
@DE00202 LTR   LSPTSAV,LSPTSAV                                     0220
         BNZ   @DL00202                                            0220
*           /*********************************************************/
*           /*                                                       */
*           /* IF DEMOUNT NOT SUCCESSFUL, RETURN             @G24LB23*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0221
*           IF SAVRETC^=Z2 THEN     /*                       @G24LB23*/
         CLC   SAVRETC(2),Z2                                       0221
         BNE   @RT00221                                            0221
*             RETURN;               /*                       @G24LB23*/
*                                                                  0222
*           /*********************************************************/
*           /*                                                       */
*           /* JOURNAL THE LSPACE INFORMATION                @G24LB23*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0223
*           DMLSAV=ICBDMLST;        /* SAVE DEMOUNT REQUEST  @G24LB23*/
         LA    @14,132                                             0223
         LR    @10,RPLVPTR                                         0223
         ALR   @10,@14                                             0223
         MVC   DMLSAV(28),ICBDMLST(@10)                            0223
*           JRNLEN=LENGTH(JRNDMT);  /* LENGTH OF JOURNAL REQUEST     */
         LA    @06,18                                              0224
         ST    @06,JRNLEN(,@10)                                    0224
*           RPLVTLEN=LENGTH(RPLV)+JRNLEN;/* LENGTH OF RPLV   @G24LB23
*                                      PLUS JOURNAL          @G24LB23
*                                      ELEMENT               @G24LB23*/
         ALR   @06,@14                                             0225
         STH   @06,RPLVTLEN(,RPLVPTR)                              0225
*           JRNFLGS=''B;            /* ZERO FLAGS FIELD      @G24LB23*/
*                                                                  0226
         MVI   JRNFLGS(@10),X'00'                                  0226
*           /*********************************************************/
*           /*                                                       */
*           /* IF LSPACE TABLE FOUND, USE LSPACE VALUES.     @G24LB23*/
*           /* OTHERWISE INDICATE EMPTY LSPACE ELEMENT       @G24LB23*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0227
*           IF LSPFOUND=ON THEN     /*                       @G24LB23*/
         TM    LSPFOUND,B'10000000'                                0227
         BNO   @RF00227                                            0227
*             DO;                   /*                       @G24LB23*/
*               JRNFREXT=LSPFREXT;  /* NUMBER FREE EXTENTS   @G24LB23*/
         L     @14,LSPTPTR                                         0229
         L     @06,LSPFREXT(,@14)                                  0229
         STH   @06,JRNFREXT(,@10)                                  0229
*               JRNFRESP=LSPFRESP;  /* TOTAL FREE SPACE      @G24LB23*/
         L     @06,LSPFRESP(,@14)                                  0230
         STH   @06,JRNFRESP(,@10)                                  0230
*               JRNLEXT=LSPLEXT;    /* LARGEST FREE EXTENT   @G24LB23*/
         L     @14,LSPLEXT(,@14)                                   0231
         STH   @14,JRNLEXT(,@10)                                   0231
*             END;                  /*                       @G24LB23*/
*           ELSE                                                   0233
*             DO;                   /*                       @G24LB23*/
         B     @RC00227                                            0233
@RF00227 DS    0H                                                  0234
*               JRNFREXT=0;         /* ZERO FREE EXTENTS     @G24LB23*/
         SLR   @14,@14                                             0234
         LA    @10,132                                             0234
         ALR   @10,RPLVPTR                                         0234
         STH   @14,JRNFREXT(,@10)                                  0234
*               JRNFRESP=0;         /* ZERO FREE SPACE       @G24LB23*/
         STH   @14,JRNFRESP(,@10)                                  0235
*               JRNLEXT=0;          /* ZERO LARGEST FREE     @G24LB23
*                                      EXTENT                @G24LB23*/
         STH   @14,JRNLEXT(,@10)                                   0236
*               JRNEMPTY=ON;        /*                       @G24LB23*/
         OI    JRNEMPTY(@10),B'10000000'                           0237
*             END;                  /*                       @G24LB23*/
*           REG0=RESEXJL;           /* RESERVE THE JOURNAL   @G24LB23*/
@RC00227 LA    REG0,17                                             0239
*           REG1=RPLVPTR;           /* PARM REG              @G24LB23*/
         LR    REG1,RPLVPTR                                        0240
*           CALL ICBVRR00;          /* CALL RESERVE RELEASE  @G24LB23*/
         L     @15,@CV00056                                        0241
         BALR  @14,@15                                             0241
*           CALL ICBVJL00;          /* JOURNAL LSPACE VALUES @G24LB23*/
         L     @15,@CV00057                                        0242
         BALR  @14,@15                                             0242
*           REG0=DEQJL;             /* DEQ THE JOURNAL       @G24LB23*/
         LA    REG0,16                                             0243
*           CALL ICBVRR00;          /* CALL RESERVE RELEASE  @G24LB23*/
         L     @15,@CV00056                                        0244
         BALR  @14,@15                                             0244
*           ICBDMLST=DMLSAV;        /* RESTORE DEMOUNT       @G24LB23
*                                      REQUEST               @G24LB23*/
         MVC   ICBDMLST+132(28,RPLVPTR),DMLSAV                     0245
*           RPLVTLEN=LENGTH(ICBDMLST)+LENGTH(RPLV);/* LENGTH @G24LB23
*                                      OF RPLV PLUS          @G24LB23
*                                      DEMOUNT REQUEST       @G24LB23*/
         MVC   RPLVTLEN(2,RPLVPTR),@CH01659                        0246
*         END;                      /*                       @G24LB23*/
*                                                                  0247
*       /*************************************************************/
*       /*                                                           */
*       /* RESERVE THE MSVC INVENTORY EXCLUSIVELY.           @Y30LB11*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0248
*       REG0=ONE;                   /* MSVC EXCLUSIVE        @Y30LB11*/
@RF00196 LA    REG0,1                                              0248
*       REG1=RPLVPTR;               /* RPLV ADDRESS          @Y30LB11*/
         LR    REG1,RPLVPTR                                        0249
*       CALL ICBVRR00;              /* RESERVE MSVC INVENTRY @Y30LB11*/
         L     @15,@CV00056                                        0250
         BALR  @14,@15                                             0250
*       RPLVBLN=LENGTH(GVSNE);      /* SET BUFFER LENGTH     @ZM31134*/
         MVC   RPLVBLN(4,RPLVPTR),@CF01660                         0251
*       RPLVBUF=ADDR(GVSBUFR);      /* INITIALIZE GVSNE PTR  @ZM31134*/
         LA    @14,GVSBUFR                                         0252
         ST    @14,RPLVBUF(,RPLVPTR)                               0252
*       RPLVTYP=RPLVREAD;           /* READ RECORD           @ZM31134*/
         MVI   RPLVTYP(RPLVPTR),X'00'                              0253
*       RPLVDIR=ON;                 /* READ DIRECT           @ZM31134*/
*       RPLVKGE=OFF;                /* >= OFF                @ZM31134*/
*                                                                  0255
         OI    RPLVDIR(RPLVPTR),B'01000000'                        0255
         NI    RPLVKGE(RPLVPTR),B'11111011'                        0255
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION OF CODE PICKS THE CPU ASSOCIATION BIT MASK   */
*       /* CORRESPONDING TO THE HOST. IF THE MASK IN THE MSVC CONTROL*/
*       /* BLOCK DOES NOT CORRESPOND TO THE HOST OR IS ZERO, THEN THE*/
*       /* CPUID RECORD IS READ AND THE MASK ASSOCIATED WITH THE HOST*/
*       /* IS USED. THIS SECTION OF CODE IS EXECUTED ONLY IF THE     */
*       /* REQUEST IS NOT A RECOVERY REQUEST.                @G24LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0256
*       IF RPLJRCVY=OFF THEN        /*                       @G24LB23*/
         TM    RPLJRCVY(RPLVPTR),B'00000010'                       0256
         BNZ   @RF00256                                            0256
*         DO;                       /*                       @G24LB23*/
*           IF ICBCPUID=DMHOST×     /* IF CPUID = HOST OR    @G24LB05*/
*               DMHOST=Z5 THEN      /* DMHOST = 0            @Y30LB11*/
         L     @14,CVTPTR                                          0258
         L     @14,CVTEXT2(,@14)                                   0258
         L     @14,CVTICB(,@14)                                    0258
         LA    @10,132                                             0258
         ALR   @10,RPLVPTR                                         0258
         CLC   ICBCPUID(5,@14),DMHOST(@10)                         0258
         BE    @RT00258                                            0258
         CLC   DMHOST(5,@10),Z5                                    0258
         BNE   @RF00258                                            0258
@RT00258 DS    0H                                                  0259
*             CPU=VVICPUID;         /* SET MSVC ASSOC MASK   @Y30LB11*/
         MVC   CPU(2),VVICPUID(VVIPTR)                             0259
*           ELSE                    /* OTHERWISE             @Y30LB11*/
*             DO;                   /* SET CPUID ASSOC MASK  @Y30LB11*/
         B     @RC00258                                            0260
@RF00258 DS    0H                                                  0261
*               RPLVLOC=ON;         /* LOCATE MODE           @Y30LB11*/
         OI    RPLVLOC(RPLVPTR),B'10000000'                        0261
*               RPLVTYP=RPLVREAD;   /* READ CPUID RECORD     @Y30LB11*/
         MVI   RPLVTYP(RPLVPTR),X'00'                              0262
*               RPLVKEY=ADDR(ARGCPU);/* ADDR 13-BYTE KEY     @Y30LB11*/
         LA    @14,ARGCPU                                          0263
         ST    @14,RPLVKEY(,RPLVPTR)                               0263
*               MSGID=M410;         /* CPUID RECORD NOT READ @Y30LB11*/
         MVC   MSGID(4),@CF00080                                   0264
*               CALL COMONRTN;      /* GET CPUID RECORD      @Y30LB11*/
         BAL   @14,COMONRTN                                        0265
*               IF RETCOD^=0 THEN   /* RESERVE MSVC EXCL?    @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0266
         BZ    @RF00266                                            0266
*                 DO;               /* NO                    @Y30LB11*/
*                   CALL FREECORE;  /* TERMINATE DEMOUNT     @Y30LB11*/
         BAL   @14,FREECORE                                        0268
*                   RETURN;         /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0269
*                 END;              /*                       @Y30LB11*/
*               DO I=1 TO SIXTEEN;  /* SEARCH THRU CPUID     @Y30LB11*/
@RF00266 LA    @14,1                                               0271
         STH   @14,I                                               0271
@DL00271 DS    0H                                                  0272
*                 IF DMHOST=CPUIDREC(I) THEN/* HOSTS MATCH?  @Y30LB11*/
         SLA   @14,3                                               0272
         L     @10,CPUIDPTR(,RPLVPTR)                              0272
         ST    @14,@TF00001                                        0272
         ALR   @14,@10                                             0272
         CLC   DMHOST+132(5,RPLVPTR),CPUIDREC-8(@14)               0272
         BNE   @RF00272                                            0272
*                   CPU=CPUMASK(I); /* SET CPUID MASK        @Y30LB11*/
         AL    @10,@TF00001                                        0273
         MVC   CPU(2),CPUMASK-8(@10)                               0273
*               END;                /* MSG?                  @Y30LB11*/
@RF00272 LA    @14,1                                               0274
         AH    @14,I                                               0274
         STH   @14,I                                               0274
         C     @14,@CF00086                                        0274
         BNH   @DL00271                                            0274
*               IF CPU=Z2 THEN      /* CPUID FOUND?          @Y30LB11*/
         CLC   CPU(2),Z2                                           0275
         BNE   @RF00275                                            0275
*                 DO;               /* NO                    @Y30LB11*/
*                   MSGID=M404;     /* CPUID MESSAGE         @Y30LB11*/
         MVC   MSGID(4),@CF00074                                   0277
*                   REG1=ADDR(MSGRQ);/* REG1 PARAMETER       @Y30LB11*/
         LA    REG1,MSGRQ                                          0278
*                   CALL ICBVOP00;  /* OPER/LIB ROUTINE      @Y30LB11*/
         L     @15,@CV00055                                        0279
         BALR  @14,@15                                             0279
*                   RPLVRETC=Z2;    /* RESET RC ZERO         @Y30LB11*/
         MVC   RPLVRETC(2,RPLVPTR),Z2                              0280
*                   CALL FREECORE;  /* TERMINATE DEMOUNT     @Y30LB11*/
         BAL   @14,FREECORE                                        0281
*                   RETURN;         /* RETURN TO VCR         @Y30LB11*/
         B     @EL00001                                            0282
*                 END;              /*                       @Y30LB11*/
*               RPLVLOC=OFF;        /* MOVE MODE RESTORE     @Y30LB11*/
@RF00275 NI    RPLVLOC(RPLVPTR),B'01111111'                        0284
*               RPLVBLN=LENGTH(GVSNE);/* RSTR BUFF LENG      @Y30LB11*/
         MVC   RPLVBLN(4,RPLVPTR),@CF01660                         0285
*               RPLVBUF=ADDR(GVSBUFR);/* RSTR BUFF LENG      @Y30LB11*/
         LA    @14,GVSBUFR                                         0286
         ST    @14,RPLVBUF(,RPLVPTR)                               0286
*             END;                  /*                       @Y30LB11*/
*         END;                      /*                       @G24LB23*/
@RC00258 DS    0H                                                  0289
*                                                                  0289
*       /*************************************************************/
*       /*                                                           */
*       /* NOW PREPARATION IS MADE TO READ THE BASE VOLUME RECORD. IF*/
*       /* AN ERROR OCCURS IN ICBVIO00, AN ERROR MESSAGE IS SENT TO  */
*       /* THE LIBRARIAN, AND THE RUN IS TERMINATED.         @Y30LB11*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0289
*       ARGVOL=DMVOL;               /* KEY VOLUME RECORD     @Y30LB11*/
@RF00256 LA    @14,132                                             0289
         ALR   @14,RPLVPTR                                         0289
         MVC   ARGVOL(6),DMVOL(@14)                                0289
*       RPLVKEY=ADDR(ARGV);         /* ADDR OF 13-BYTE KEY   @Y30LB11*/
         LA    @10,ARGV                                            0290
         ST    @10,RPLVKEY(,RPLVPTR)                               0290
*       RPLVTYP=RPLVREAD;           /* SET VIO READ SW ON    @Y30LB11*/
         MVI   RPLVTYP(RPLVPTR),X'00'                              0291
*       RPLVUPD=ON;                 /* UPDATE RECORD         @Y30LB11*/
         OI    RPLVUPD(RPLVPTR),B'00000010'                        0292
*       RPLVDIR=ON;                 /* READ DIRECT           @Y30LB11*/
         OI    RPLVDIR(RPLVPTR),B'01000000'                        0293
*       MSGTEXT1=ADDR(DMVOL);       /* INSERT TEXT           @Y30LB11*/
         LA    @14,DMVOL(,@14)                                     0294
         STCM  @14,7,MSGTEXT1                                      0294
*       MSGLEN1=SIX;                /* INSERT LENGTH         @Y30LB11*/
         MVI   MSGLEN1,X'06'                                       0295
*       MSGID=M402;                 /* BASEV NOT FND         @Y30LB11*/
         MVC   MSGID(4),@CF00070                                   0296
*       CALL COMONRTN;              /* READ BASE VOL RECORD  @Y30LB11*/
         BAL   @14,COMONRTN                                        0297
*       IF RETCOD^=0 THEN           /* RESERVE MSVC EXCL?    @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0298
         BZ    @RF00298                                            0298
*         DO;                       /* NO                    @Y30LB11*/
*           CALL FREECORE;          /* TERMINATE DEMOUNT     @Y30LB11*/
         BAL   @14,FREECORE                                        0300
*           RETURN;                 /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0301
*         END;                      /*                       @Y30LB11*/
*                                                                  0302
*       /*************************************************************/
*       /*                                                           */
*       /* UPDATE THE BASE VOLUME RECORD.                    @Y30LB11*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0303
*       IF RPLJRCVY=ON THEN         /*                       @G24LB23*/
@RF00298 TM    RPLJRCVY(RPLVPTR),B'00000010'                       0303
         BNO   @RF00303                                            0303
*         BASCPUID=''B;             /* DURING RECOVERY       @G24LB23
*                                      MARK DEMOUNTED TO ALL @G24LB23
*                                      HOSTS                 @G24LB23*/
         L     @14,BASEVPTR(,RPLVPTR)                              0304
         XC    BASCPUID(2,@14),BASCPUID(@14)                       0304
*       ELSE                                                       0305
*         BASCPUID=BASCPUID&(CPU&&COMPLMT2);/*               @ZM30726
*                                      SET CPUID MASK        @ZM30726*/
         B     @RC00303                                            0305
@RF00303 L     @14,BASEVPTR(,RPLVPTR)                              0305
         MVC   @TS00001(2),CPU                                     0305
         XC    @TS00001(2),@CB00089                                0305
         NC    BASCPUID(2,@14),@TS00001                            0305
*       IF BASDLSF=ON THEN          /* DOWN LEVEL SPACE ON?  @Y30LB11*/
@RC00303 L     @14,BASEVPTR(,RPLVPTR)                              0306
         TM    BASDLSF(@14),B'10000000'                            0306
         BNO   @RF00306                                            0306
*         SAVDLSF=ON;               /* SAVE DOWN LEVEL FLAG  @Y30LB11*/
         OI    SAVDLSF,B'10000000'                                 0307
*       ELSE                        /* ELSE                  @Y30LB11*/
*         SAVDLSF=OFF;              /* SAVE DOWN LEVEL FLAG  @Y30LB11*/
         B     @RC00306                                            0308
@RF00306 NI    SAVDLSF,B'01111111'                                 0308
*       SAVFRESP=BASFRESP;          /* SAVE FREE SPACE       @Y30LB11*/
@RC00306 L     @14,BASEVPTR(,RPLVPTR)                              0309
         LH    SAVFRESP,BASFRESP(,@14)                             0309
         N     SAVFRESP,@CF01669                                   0309
*       SAVFREXT=BASFREXT;          /* SAVE # OF FREE EXTS   @Y30LB11*/
         L     SAVFREXT,BASFREXT(,@14)                             0310
*       SAVLEXT=BASLEXT;            /* SAVE LARGEST EXTENT   @Y30LB11*/
*                                                                  0311
         LH    SAVLEXT,BASLEXT(,@14)                               0311
         N     SAVLEXT,@CF01669                                    0311
*       /*************************************************************/
*       /*                                                           */
*       /* IF DURING RECOVERY, UPDATE SPACE PARAMETERS       @G24LB23*/
*       /* FROM THE JOURNALED LSPACE ELEMENT                 @G24LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0312
*       IF RPLJRCVY=ON THEN         /*                       @G24LB23*/
         TM    RPLJRCVY(RPLVPTR),B'00000010'                       0312
         BNO   @RF00312                                            0312
*         DO;                       /*                       @G24LB23*/
*                                                                  0313
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK FOR EMPTY JOURNAL ELEMENT               @G24LB23*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0314
*           IF JRNEMPTY=ON THEN                                    0314
         TM    JRNEMPTY+132(RPLVPTR),B'10000000'                   0314
         BNO   @RF00314                                            0314
*             BASDLSF=ON;           /* DOWN LEVEL BIT ON     @G24LB23*/
         OI    BASDLSF(@14),B'10000000'                            0315
*           ELSE                                                   0316
*             DO;                   /*                       @G24LB23*/
         B     @RC00314                                            0316
@RF00314 DS    0H                                                  0317
*               BASDLSF=OFF;        /* DOWN LEVEL BIT OFF    @G24LB23*/
         L     @14,BASEVPTR(,RPLVPTR)                              0317
         NI    BASDLSF(@14),B'01111111'                            0317
*               BASFREXT=JRNFREXT;  /* NUMBER FREE ELEMENTS  @G24LB23*/
         LA    @10,132                                             0318
         ALR   @10,RPLVPTR                                         0318
         LH    @06,JRNFREXT(,@10)                                  0318
         N     @06,@CF01669                                        0318
         ST    @06,BASFREXT(,@14)                                  0318
*               BASLEXT=JRNLEXT;    /* LARGEST FREE EXTENT   @G24LB23*/
         LH    @06,JRNLEXT(,@10)                                   0319
         N     @06,@CF01669                                        0319
         STH   @06,BASLEXT(,@14)                                   0319
*               BASFRESP=JRNFRESP;  /* TOTAL FREE SPACE      @G24LB23*/
         LH    @10,JRNFRESP(,@10)                                  0320
         N     @10,@CF01669                                        0320
         STH   @10,BASFRESP(,@14)                                  0320
*             END;                  /*                       @G24LB23*/
*         END;                      /*                       @G24LB23*/
*       ELSE                                                       0323
*         DO;                       /*                       @G24LB23*/
*                                                                  0323
         B     @RC00312                                            0323
@RF00312 DS    0H                                                  0324
*           /*********************************************************/
*           /*                                                       */
*           /* IF THE LSPACE TABLE SEGMENT WAS FOUND, THE SPACE      */
*           /* PARAMETERS WILL BE USED TO UPDATE THE MSVC DATA SET.  */
*           /*                                               @Y30LB11*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0324
*           IF LSPFOUND=ON THEN                                    0324
         TM    LSPFOUND,B'10000000'                                0324
         BNO   @RF00324                                            0324
*             DO;                   /*                       @Y30LB11*/
*               BASDLSF=OFF;        /* DOWN LEVEL BIT OFF    @Y30LB11*/
         L     @14,BASEVPTR(,RPLVPTR)                              0326
         NI    BASDLSF(@14),B'01111111'                            0326
*               BASFREXT=LSPFREXT;  /* # OF FREE EXTENTS     @Y30LB11*/
         L     @10,LSPTPTR                                         0327
         L     @06,LSPFREXT(,@10)                                  0327
         ST    @06,BASFREXT(,@14)                                  0327
*               BASLEXT=LSPLEXT;    /* LARGEST FREE EXTENT   @Y30LB11*/
         L     @06,LSPLEXT(,@10)                                   0328
         STH   @06,BASLEXT(,@14)                                   0328
*               BASFRESP=LSPFRESP;  /* TOTAL FREE SPACE      @Y30LB11*/
         L     @10,LSPFRESP(,@10)                                  0329
         STH   @10,BASFRESP(,@14)                                  0329
*             END;                  /*                       @Y30LB11*/
*           ELSE                                                   0331
*             BASDLSF=ON;           /*                       @Y30LB11*/
         B     @RC00324                                            0331
@RF00324 L     @14,BASEVPTR(,RPLVPTR)                              0331
         OI    BASDLSF(@14),B'10000000'                            0331
*         END;                      /*                       @G24LB23*/
@RC00324 DS    0H                                                  0333
*       RPLVTYP=RPLVPUT;            /* SET VIO PUT SW ON     @Y30LB11*/
@RC00312 MVI   RPLVTYP(RPLVPTR),X'01'                              0333
*       CALL COMONRTN;              /* PUT BASE VOL RECORD   @Y30LB11*/
*                                                                  0334
         BAL   @14,COMONRTN                                        0334
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE I/0 WAS NOT SUCCESSFUL, PROCESSING TERMINATES AND  */
*       /* RETURN IS MADE TO ICBVCR00. OTHERWISE, I/O IS MADE TO GET */
*       /* THE GROUP RECORD PROVIDED THE VOLUME IS A GENERAL USE TYPE*/
*       /* VOLUME.                                           @Y30LB11*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0335
*       IF RETCOD^=0 THEN           /* IO ERROR?             @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0335
         BZ    @RF00335                                            0335
*         DO;                       /* YES                   @Y30LB11*/
*           CALL FREECORE;          /* TERMINATE PROCESSING  @Y30LB11*/
         BAL   @14,FREECORE                                        0337
*           RETURN;                 /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0338
*         END;                      /*                       @Y30LB11*/
*                                                                  0340
*       /*************************************************************/
*       /*                                                           */
*       /* IF GENERAL USE TYPE VOLUME SET GROUP RECORD KEY OTHERWISE */
*       /* TERMINATE AND RETURN TO ICBVCR00.                 @Y30LB11*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0340
*       IF BASGENUS=ON&BASINAC=OFF THEN/*                    @G24LB23
*                                      GENERAL USE TYPE?     @G24LB23*/
@RF00335 L     @14,BASEVPTR(,RPLVPTR)                              0340
         TM    BASGENUS(@14),B'00010000'                           0340
         BNO   @RF00340                                            0340
         TM    BASINAC(@14),B'00000100'                            0340
         BNZ   @RF00340                                            0340
*         ARGGP=BASGROUP;           /* SET GROUP KEY         @G24LB23*/
         MVC   ARGGP(8),BASGROUP(@14)                              0341
*       ELSE                        /* OTHERWISE             @Y30LB11*/
*         DO;                       /*                       @Y30LB11*/
         B     @RC00340                                            0342
@RF00340 DS    0H                                                  0343
*           CALL FREECORE;          /* TERMINATE ICBVDM00    @Y30LB11*/
         BAL   @14,FREECORE                                        0343
*           RETURN;                 /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0344
*         END;                      /*                       @Y30LB11*/
*                                                                  0345
*       /*************************************************************/
*       /*                                                           */
*       /* ONLY IF THE LSPACE TABLE SEGMENT IS FOUND         @G24LB23*/
*       /* OR A RECOVERY REQUEST IS BEING PROCESSED          @G24LB23*/
*       /* WILL THE GROUP RECORD BE UPDATED.                 @G24LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0346
*       IF LSPFOUND=ON×(RPLJRCVY=ON&JRNEMPTY=OFF)/*          @G24LB23*/
*         THEN                                                     0346
@RC00340 TM    LSPFOUND,B'10000000'                                0346
         BO    @RT00346                                            0346
         TM    RPLJRCVY(RPLVPTR),B'00000010'                       0346
         BNO   @RF00346                                            0346
         TM    JRNEMPTY+132(RPLVPTR),B'10000000'                   0346
         BNZ   @RF00346                                            0346
@RT00346 DS    0H                                                  0347
*         DO;                       /*                       @G24LB23*/
*           RPLVKEY=ADDR(ARGGR);    /* ADDRESS OF KEY        @Y30LB11*/
         LA    @14,ARGGR                                           0348
         ST    @14,RPLVKEY(,RPLVPTR)                               0348
*           RPLVTYP=RPLVREAD;       /* VIO READ SW ON        @Y30LB11*/
         MVI   RPLVTYP(RPLVPTR),X'00'                              0349
*           MSGTEXT1=ADDR(ARGGP);   /* TEXT INSERT           @Y30LB11*/
         LA    @14,ARGGP                                           0350
         STCM  @14,7,MSGTEXT1                                      0350
*           MSGLEN1=EIGHT;          /* INSERT LENGTH         @Y30LB11*/
         MVI   MSGLEN1,X'08'                                       0351
*           MSGTEXT2=ADDR(DMVOL);   /* TEXT INSERT           @Y30LB11*/
         LA    @14,DMVOL+132(,RPLVPTR)                             0352
         STCM  @14,7,MSGTEXT2                                      0352
*           MSGLEN2=SIX;            /* INSERT LENGTH         @Y30LB11*/
         MVI   MSGLEN2,X'06'                                       0353
*           MSGID=M403;             /* GROUP NOT FND         @Y30LB11*/
         MVC   MSGID(4),@CF00072                                   0354
*           CALL COMONRTN;          /* READ GROUP RECORD     @Y30LB11*/
*                                                                  0355
         BAL   @14,COMONRTN                                        0355
*           /*********************************************************/
*           /*                                                       */
*           /* IF I/O FAILS, THE PROGRAM ISSUES A MESSAGE TO THE     */
*           /* EFFECT, RESTORES THE BASE VOLUME RECORD AND RETURNS TO*/
*           /* ICBVCR00.                                     @Y30LB11*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0356
*           IF RETCOD^=0 THEN       /* RECORD READ?          @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0356
         BZ    @RF00356                                            0356
*             DO;                   /* NO                    @Y30LB11*/
*               CALL VOLRSTR;       /* RESTORE BASE VOL RCD  @Y30LB11*/
         BAL   @14,VOLRSTR                                         0358
*               CALL FREECORE;      /* TERMINATE ICBVDM00    @Y30LB11*/
         BAL   @14,FREECORE                                        0359
*               RETURN;             /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0360
*             END;                  /*                       @Y30LB11*/
*                                                                  0361
*           /*********************************************************/
*           /*                                                       */
*           /* UPDATE GROUP RECORD.                          @G24LB23*/
*           /* IF DURING RECOVERY, UPDATE SPACE PARAMETERS   @G24LB23*/
*           /* FROM THE JOURNALED LSPACE ELEMENT             @G24LB23*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0362
*           IF RPLJRCVY=ON THEN     /*                       @G24LB23*/
@RF00356 TM    RPLJRCVY(RPLVPTR),B'00000010'                       0362
         BNO   @RF00362                                            0362
*             DO;                   /*                       @G24LB23*/
*               TEMP1=SAVFRESP-JRNFRESP;/* FREE SPACE        @G24LB23
*                                      DIFFERENCE            @G24LB23*/
         LA    @14,132                                             0364
         ALR   @14,RPLVPTR                                         0364
         LR    TEMP1,SAVFRESP                                      0364
         LH    @10,JRNFRESP(,@14)                                  0364
         N     @10,@CF01669                                        0364
         SLR   TEMP1,@10                                           0364
*               GROFRESP=GROFRESP-TEMP1;/* NEW GROUP FREE    @G24LB23
*                                      SPACE                 @G24LB23*/
         L     @10,GROUPPTR(,RPLVPTR)                              0365
         L     @06,GROFRESP(,@10)                                  0365
         SLR   @06,TEMP1                                           0365
         ST    @06,GROFRESP(,@10)                                  0365
*               TEMP1=SAVFREXT-JRNFREXT;/* FREE EXTENTS      @G24LB23
*                                      DIFFERENCE            @G24LB23*/
         LR    TEMP1,SAVFREXT                                      0366
         LH    @14,JRNFREXT(,@14)                                  0366
         N     @14,@CF01669                                        0366
         SLR   TEMP1,@14                                           0366
*               GROFREXT=GROFREXT-TEMP1;/* NEW GROUP FREE    @G24LB23
*                                      EXTENTS               @G24LB23*/
         L     @14,GROFREXT(,@10)                                  0367
         SLR   @14,TEMP1                                           0367
         ST    @14,GROFREXT(,@10)                                  0367
*             END;                  /*                       @G24LB23*/
*           ELSE                                                   0369
*             DO;                   /*                       @G24LB23*/
         B     @RC00362                                            0369
@RF00362 DS    0H                                                  0370
*               TEMP1=SAVFRESP-LSPFRESP;/* NEW FREE SPACE    @Y30LB11*/
         L     @14,LSPTPTR                                         0370
         LR    TEMP1,SAVFRESP                                      0370
         SL    TEMP1,LSPFRESP(,@14)                                0370
*               GROFRESP=GROFRESP-TEMP1;/* NEW GP FREE SP    @Y30LB11*/
         L     @10,GROUPPTR(,RPLVPTR)                              0371
         L     @06,GROFRESP(,@10)                                  0371
         SLR   @06,TEMP1                                           0371
         ST    @06,GROFRESP(,@10)                                  0371
*               TEMP1=SAVFREXT-LSPFREXT;/* NEW FREE EXTENT   @Y30LB11*/
         LR    TEMP1,SAVFREXT                                      0372
         SL    TEMP1,LSPFREXT(,@14)                                0372
*               GROFREXT=GROFREXT-TEMP1;/* NEW GP FREE EXT   @Y30LB11*/
         L     @14,GROFREXT(,@10)                                  0373
         SLR   @14,TEMP1                                           0373
         ST    @14,GROFREXT(,@10)                                  0373
*               IF GROPCENT>0 THEN  /* GP THRESHOLD % > 0?   @Y30LB11*/
         CLI   GROPCENT(@10),0                                     0374
         BNH   @RF00374                                            0374
*                 DO;               /* YES                   @Y30LB11*/
*                   IF GROSTRSH>=GROFRESP THEN/* THRESHOLD >=?     0376
*                                                            @Y30LB11*/
         C     @06,GROSTRSH(,@10)                                  0376
         BH    @RF00376                                            0376
*                     DO;           /* YES                   @Y30LB11*/
*                       IF GROERRDT^=CVTDATE/* GROUP DATES ^=      0378
*                                                            @Y30LB11*/
*                           ×GROMSG1=OFF THEN/* OR MSG FLG OFF?    0378
*                                                            @Y30LB11*/
         L     @14,CVTPTR                                          0378
         CLC   GROERRDT(4,@10),CVTDATE(@14)                        0378
         BNE   @RT00378                                            0378
         TM    GROMSG1(@10),B'00000010'                            0378
         BNZ   @RF00378                                            0378
@RT00378 DS    0H                                                  0379
*                         DO;       /* YES                   @Y30LB11*/
*                           GROMSG1=ON;/* SET MSG FLG ON     @Y30LB11*/
         L     @14,GROUPPTR(,RPLVPTR)                              0380
         OI    GROMSG1(@14),B'00000010'                            0380
*                           GROERRDT=CVTDATE;/* SET DATE     @Y30LB11*/
         L     @10,CVTPTR                                          0381
         MVC   GROERRDT(4,@14),CVTDATE(@10)                        0381
*                           MSGID=M408;/* THRSH EXCEEDED     @Y30LB11*/
         MVC   MSGID(4),@CF00076                                   0382
*                           MSGLEN1=EIGHT;/* GROUP LENGTH    @Y30LB11*/
         MVI   MSGLEN1,X'08'                                       0383
*                           MSGTEXT1=ADDR(ARGGP);/* GRP ADDR @Y30LB11*/
         LA    @14,ARGGP                                           0384
         STCM  @14,7,MSGTEXT1                                      0384
*                           MSGLEN2=0;/* ZERO LENGTH 2       @Y30LB11*/
         MVI   MSGLEN2,X'00'                                       0385
*                           MSGTEXT2=0;/* ZERO TEXT 2        @Y30LB11*/
         SLR   @14,@14                                             0386
         STCM  @14,7,MSGTEXT2                                      0386
*                           REG1=ADDR(MSGRQ);/* REG1 PARM    @Y30LB11*/
         LA    REG1,MSGRQ                                          0387
*                           CALL ICBVOP00;/* PUT OUT MSG     @Y30LB11*/
         L     @15,@CV00055                                        0388
         BALR  @14,@15                                             0388
*                         END;      /*                       @Y30LB11*/
*                     END;          /*                       @Y30LB11*/
*                   ELSE            /* OTHERWISE             @Y30LB11*/
*                     GROMSG1=OFF;  /* SET MSG FLAG OFF      @Y30LB11*/
         B     @RC00376                                            0391
@RF00376 L     @14,GROUPPTR(,RPLVPTR)                              0391
         NI    GROMSG1(@14),B'11111101'                            0391
*                 END;              /*                       @Y30LB11*/
@RC00376 DS    0H                                                  0393
*             END;                  /*                       @G24LB23*/
@RF00374 DS    0H                                                  0394
*           RPLVTYP=RPLVPUT;        /* VIO PUT SW ON         @Y30LB11*/
@RC00362 MVI   RPLVTYP(RPLVPTR),X'01'                              0394
*           RPLVKEY=ADDR(ARGGR);    /* KEY ADDRESS           @Y30LB11*/
         LA    @14,ARGGR                                           0395
         ST    @14,RPLVKEY(,RPLVPTR)                               0395
*           CALL COMONRTN;          /* PUT GROUP RECORD      @Y30LB11*/
*                                                                  0396
         BAL   @14,COMONRTN                                        0396
*           /*********************************************************/
*           /*                                                       */
*           /* IF THE I/0 WAS NOT SUCCESSFUL, THE VOLUME RECORD IS   */
*           /* RESTORED AND RETURN IS MADE TO ICBVCR00. OTHERWISE,   */
*           /* I/O IS MADE TO GET THE GVSNE RECORD.          @Y30LB11*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0397
*           IF RETCOD^=0 THEN       /* IO ERROR?             @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0397
         BZ    @RF00397                                            0397
*             DO;                   /* YES                   @Y30LB11*/
*               CALL VOLRSTR;       /* RESTORE BASE VOL RCD  @Y30LB11*/
         BAL   @14,VOLRSTR                                         0399
*               CALL FREECORE;      /* TERMINATE ICBVDM00    @Y30LB11*/
         BAL   @14,FREECORE                                        0400
*               RETURN;             /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0401
*             END;                  /*                       @Y30LB11*/
*         END;                      /*                       @Y30LB11*/
@RF00397 DS    0H                                                  0404
*                                                                  0404
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP TO READ GVSNE RECORDS                      @Y30LB11*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0404
*       ARGNUM=1;                   /* SET FOR FIRST GVSNE   @Y30LB11*/
@RF00346 MVI   ARGNUM,X'01'                                        0404
*       RPLVKEY=ADDR(ARGGR);        /* RESET 13-BYTE KEY     @Y30LB11*/
         LA    @14,ARGGR                                           0405
         ST    @14,RPLVKEY(,RPLVPTR)                               0405
*       RPLVTYP=RPLVREAD;           /* VIO READ SW ON        @Y30LB11*/
         MVI   RPLVTYP(RPLVPTR),X'00'                              0406
*       RPLVKGE=ON;                 /* READ KEY >= ON        @Y30LB11*/
         OI    RPLVKGE(RPLVPTR),B'00000100'                        0407
*       MSGTEXT1=ADDR(ARGGP);       /* INSERT TEXT           @Y30LB11*/
         LA    @14,ARGGP                                           0408
         STCM  @14,7,MSGTEXT1                                      0408
*       MSGLEN1=EIGHT;              /* INSERT LENGTH         @Y30LB11*/
         MVI   MSGLEN1,X'08'                                       0409
*       MSGTEXT2=ADDR(DMVOL);       /* INSERT TEXT           @Y30LB11*/
         LA    @14,DMVOL+132(,RPLVPTR)                             0410
         STCM  @14,7,MSGTEXT2                                      0410
*       MSGLEN2=SIX;                /* INSERT LENGTH         @Y30LB11*/
         MVI   MSGLEN2,X'06'                                       0411
*       MSGID=M403;                 /* GVSNE NOT FOUND       @Y30LB11*/
         MVC   MSGID(4),@CF00072                                   0412
*       CALL GVSNEREC;              /* GET 1ST GVSNE         @Y30LB11*/
         BAL   @14,GVSNEREC                                        0413
*       IF RETCOD=0 THEN            /* RECORD READ?          @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0414
         BNZ   @RF00414                                            0414
*         CALL GVSCODE;             /* READ RECORD(S)        @Y30LB11*/
         BAL   @14,GVSCODE                                         0415
*       CALL FREECORE;              /* TERMINATE             @Y30LB11*/
@RF00414 BAL   @14,FREECORE                                        0416
*       RETURN;                     /* RETURN TO ICBVCR00    @Y30LB11*/
         B     @EL00001                                            0417
*     END;                          /*                       @Y30LB11*/
*                                                                  0419
*/*  START OF SPECIFICATIONS ****                            @Y30LB11
*                                                                  0419
*01*  NAME = COMONRTN                                        @Y30LB11
*                                                                  0419
*01*  FUNCTION = THIS SUBROUTINE IS CALLED IF A RECORD NEEDS TO    0419
*                BE RETRIEVED OR PUT OUT.  THE ORIGINAL CALLING    0419
*                SUBROUTINE MUST SET UP THE CALL FOR VSAM.   @Y30LB11
*                                                                  0419
*02*    INPUT = VSAM PARAMETERS                              @Y30LB11
*                                                                  0419
*02*    OUTPUT = DESIRED RECORD IN LOCATE OR MOVE MODE       @Y30LB11
*                ERROR MESSAGES                              @Y30LB11
*                                                                  0419
**** END OF SPECIFICATIONS **                                        */
*                                                                  0419
*COMONRTN:                          /* COMONRTN ROUTINE      @Y30LB11*/
*   PROCEDURE;                      /*                       @Y30LB11*/
COMONRTN STM   @14,@12,@SA00002                                    0419
*   REG1=RPLVPTR;                   /* REG1 PARAMETER        @Y30LB11*/
         LR    REG1,RPLVPTR                                        0420
*   CALL ICBVIO00;                  /* GET RECORD            @Y30LB11*/
         L     @15,@CV00054                                        0421
         BALR  @14,@15                                             0421
*   IF RPLVRETC^=Z2 THEN            /* RECORD HANDLED?       @Y30LB11*/
         CLC   RPLVRETC(2,RPLVPTR),Z2                              0422
         BE    @RF00422                                            0422
*     DO;                           /* NO                    @Y30LB11*/
*       IF RPLVTYP=RPLVREAD THEN    /* RECORD FOUND?         @Y30LB11*/
         CLI   RPLVTYP(RPLVPTR),0                                  0424
         BNE   @RF00424                                            0424
*         DO;                       /* NO                    @Y30LB11*/
*           REG1=ADDR(MSGRQ);       /* REG1 PARM             @Y30LB11*/
         LA    REG1,MSGRQ                                          0426
*           CALL ICBVOP00;          /* OPER/LIB ROUTINE      @Y30LB11*/
         L     @15,@CV00055                                        0427
         BALR  @14,@15                                             0427
*         END;                      /*                       @Y30LB11*/
*       RETURN CODE(4);             /* RETURN TO CALLER      @Y30LB11*/
@RF00424 LA    @15,4                                               0429
         L     @14,@SA00002                                        0429
         LM    @00,@12,@SA00002+8                                  0429
         BR    @14                                                 0429
*     END;                          /*                       @Y30LB11*/
*   RETURN CODE(0);                 /* RETURN TO CALLER      #Y30LB11*/
@RF00422 SLR   @15,@15                                             0431
         L     @14,@SA00002                                        0431
         LM    @00,@12,@SA00002+8                                  0431
         BR    @14                                                 0431
*   END COMONRTN;                   /*                       #Y30LB11*/
*                                                                  0433
*/*  START OF SPECIFICATIONS ****                            @Y30LB11
*                                                                  0433
*01*  NAME = GETCORE                                         @Y30LB11
*                                                                  0433
*01*  FUNCTION = THIS SUBROUTINE IS CALLED WHENEVER MAIN STORAGE   0433
*                IS REQUIRED.                                @Y30LB11
*                                                                  0433
*02*    INPUT = NONE                                         @Y30LB11
*                                                                  0433
*02*    OUTPUT = REGISTER 1 CONTAINS THE ADDRESS OF THE CORE       0433
*                OBTAINED.                                   @Y30LB11
*                                                                  0433
**** END OF SPECIFICATIONS **                                        */
*                                                                  0433
*GETCORE:                                                          0433
*   PROCEDURE OPTIONS(NOSAVE(1));   /*                       @Y30LB11*/
GETCORE  STM   @14,@00,@SA00003                                    0433
         STM   @02,@12,@SA00003+12                                 0433
*   RESPECIFY                                                      0434
*    (REG2,                                                        0434
*     REG3) RSTD;                   /* RESTRICT REGS 2 AND 3 @Y30LB11*/
*   REG2=LENGTH(LSPTABLE);          /* SET GETMAIN REG 2     @Y30LB11*/
         LA    REG2,22                                             0435
*   REG3=ADDR(LSPTPTR);             /* INIT GETMAIN PTR      @Y30LB11*/
         LA    REG3,LSPTPTR                                        0436
*LGET1:                                                            0437
*   GEN(GETMAIN EC,LV=(REG2),A=(REG3),SP=241);/* GETMAIN SP 241      */
LGET1    GETMAIN EC,LV=(REG2),A=(REG3),SP=241
*   RESPECIFY                                                      0438
*    (REG2,                                                        0438
*     REG3) UNRSTD;                 /* UNRESTRICT REGS 2 AND 3     0438
*                                                            @Y30LB11*/
*   IF RETCOD=0 THEN                /* CORE GOTTEN?          @Y30LB11*/
         SLR   @14,@14                                             0439
         CR    RETCOD,@14                                          0439
         BNE   @RF00439                                            0439
*     RETURN CODE(0);               /* GOOD RETURN CODE      @Y30LB11*/
         LR    @15,@14                                             0440
         L     @14,@SA00003                                        0440
         L     @00,@SA00003+8                                      0440
         LM    @02,@12,@SA00003+12                                 0440
         BR    @14                                                 0440
*   ELSE                            /* OTHERWISE             @Y30LB11*/
*     RETURN CODE(4);               /* BAD RETURN CODE       @Y30LB11*/
@RF00439 LA    @15,4                                               0441
         L     @14,@SA00003                                        0441
         L     @00,@SA00003+8                                      0441
         LM    @02,@12,@SA00003+12                                 0441
         BR    @14                                                 0441
*   END GETCORE;                    /* END GETMAIN PROC      @Y30LB11*/
*                                                                  0443
*/*  START OF SPECIFICATIONS ****                            @Y30LB11
*                                                                  0443
*01*  NAME = GVSCODE                                         @Y30LB11
*                                                                  0443
*01*  FUNCTION = THIS SUBROUTINE IS CALLED TO LOOP THROUGH THE     0443
*                SLOTS IN THE GVSNE LOOKING FOR A MATCH ON THE     0443
*                VOLID IN ORDER TO UPDATE FREE SPACE VALUES.       0443
*                FOR ANY SUCCESSFULLY DEMOUNTED GENERAL USE  @G24LB04
*                VOLUME WHICH IS NO LONGER MARKED MOUNTED    @G24LB04
*                TO ANY HOST, THE HOST SHARABILITY STATUS    @G24LB04
*                IS SET TO NOT-MOUNTED-NON-SHARABLE AND      @G24LB04
*                FOR SUCH VOLUMES THAT ALSO HAVE AN LSPACE   @G24LB04
*                ENTRY, THE RUNNING COUNT OF FREE SPACE IS   @G24LB04
*                UPDATED.                                          0443
*                IT CALLS ICBVTP00 IF AN LSPACE ENTRY IS     @G24LB04
*                FOUND, TO ASCERTAIN KNOWN TABLE SPACE       @G24LB04
*                COMMITMENTS FOR THAT VOLUME.                @G24LB04
*                IT CALLS GVSNEREC TO GET SUCCESSIVE EXTENSION     0443
*                RECORDS.  IF THE APPROPRIATE SLOT IS NOT FOUND,   0443
*                RETURN IS MADE TO THE MAIN PROGRAM AND THEN TO    0443
*                THE USER.                                   @Y30LB11
*                                                                  0443
*02*    INPUT = RPLV                                         @Y30LB11
*                                                                  0443
*02*    OUTPUT = UPDATED GVSNE                               @Y30LB11
*                                                                  0443
**** END OF SPECIFICATIONS **                                        */
*                                                                  0443
*GVSCODE:                                                          0443
*   PROCEDURE;                      /*                       @Y30LB11*/
GVSCODE  STM   @14,@12,@SA00004                                    0443
*   DO WHILE I=I;                   /* LOOPING PROCEDURE     @Y30LB11*/
         B     @DE00444                                            0444
@DL00444 DS    0H                                                  0445
*     DO I=1 TO LAST;               /* ITERATE THRU SLOTS    @Y30LB11*/
         LA    @14,1                                               0445
         B     @DE00445                                            0445
@DL00445 DS    0H                                                  0446
*       IF DMVOL=GVSVOLID(I) THEN   /* DEMOUNT VOLID SLOT    @Y30LB11*/
         MH    @14,@CH01577                                        0446
         L     @10,GVSNEPTR(,RPLVPTR)                              0446
         ST    @14,@TF00001                                        0446
         ALR   @14,@10                                             0446
         CLC   DMVOL+132(6,RPLVPTR),GVSVOLID-20(@14)               0446
         BNE   @RF00446                                            0446
*         DO;                       /* YES                   @Y30LB11*/
*           IF RPLJRCVY=ON THEN     /*                       @G24LB23*/
         TM    RPLJRCVY(RPLVPTR),B'00000010'                       0448
         BNO   @RF00448                                            0448
*             GVSCPUBM(I)=''B;      /* DURING RECOVERY, MARK @G24LB23
*                                      DEMOUNTED TO ALL HOSTS      0449
*                                                            @G24LB23*/
         AL    @10,@TF00001                                        0449
         XC    GVSCPUBM-20(2,@10),GVSCPUBM-20(@10)                 0449
*           ELSE                                                   0450
*             DO;                   /* UPDATE MOUNT NON-     @G24LB04
*                                      SHARED STATUS         @G24LB04*/
         B     @RC00448                                            0450
@RF00448 DS    0H                                                  0451
*               GVSCPUBM(I)=GVSCPUBM(I)&(CPU&&COMPLMT2);/*   @ZM30726
*                                      SET ASSOC MASK        @ZM30726*/
         LH    @14,I                                               0451
         MH    @14,@CH01577                                        0451
         L     @10,GVSNEPTR(,RPLVPTR)                              0451
         ST    @14,@TF00001                                        0451
         ALR   @14,@10                                             0451
         MVC   @TS00001(2),CPU                                     0451
         XC    @TS00001(2),@CB00089                                0451
         NC    GVSCPUBM-20(2,@14),@TS00001                         0451
*               IF GVSCPUBM(I)=ZROBT16/* MOUNTED TO NO HOST? @G24LB04*/
*                 THEN                                             0452
         LR    @14,@10                                             0452
         AL    @14,@TF00001                                        0452
         CLC   GVSCPUBM-20(2,@14),@CB00091                         0452
         BNE   @RF00452                                            0452
*                 GVSMTNSH(I)=OFF;  /* YES, SET NOT          @G24LB04
*                                      MOUNTED NON-SHARE     @G24LB04*/
         AL    @10,@TF00001                                        0453
         NI    GVSMTNSH-20(@10),B'10111111'                        0453
*             END;                  /*                       @G24LB04*/
@RF00452 DS    0H                                                  0455
*           IF LSPFOUND=ON THEN     /* UPDATE ONLY IF TABLE  @VS32852*/
@RC00448 TM    LSPFOUND,B'10000000'                                0455
         BNO   @RF00455                                            0455
*             DO;                   /*                       @VS32852*/
*               GVSFRESP(I)=LSPFRESP;/* SET FREE SPACE       @Y30LB11*/
         LH    @14,I                                               0457
         MH    @14,@CH01577                                        0457
         L     @10,GVSNEPTR(,RPLVPTR)                              0457
         L     @06,LSPTPTR                                         0457
         L     @09,LSPFRESP(,@06)                                  0457
         STH   @09,GVSFRESP-20(@14,@10)                            0457
*               GVSLEXT(I)=LSPLEXT; /* SET LG EXTENT         @Y30LB11*/
         L     @06,LSPLEXT(,@06)                                   0458
         STH   @06,GVSLEXT-20(@14,@10)                             0458
*               IF GVSCPUBM(I)=ZROBT16/* MOUNTED TO NO HOST? @G24LB04*/
*                 THEN              /*                       @G24LB04*/
         ALR   @10,@14                                             0459
         CLC   GVSCPUBM-20(2,@10),@CB00091                         0459
         BNE   @RF00459                                            0459
*                 DO;               /* CALL TABLE PROCESSOR  @G24LB04
*                                      FOR COMMITTED SPACE   @G24LB04*/
*                   TABP=''B;       /* ZERO REQUEST LIST     @G24LB04*/
         LA    @14,TPREQ                                           0461
         XC    TABP(12,@14),TABP(@14)                              0461
*                   TABFTSPC=ON;    /* TABLE SEARCH FOR VOL  @G24LB04*/
         OI    TABFTSPC(@14),B'00010000'                           0462
*                   TABVOLID=DMVOL; /* PROVIDE VOLID         @G24LB04*/
         MVC   TABVOLID(6,@14),DMVOL+132(RPLVPTR)                  0463
*                   CALL ICBVTP00(TABP);/* CALL TABLE PROCESSOR    0464
*                                                            @G24LB04*/
         ST    @14,@AL00001                                        0464
         L     @15,@CV00058                                        0464
         LA    @01,@AL00001                                        0464
         BALR  @14,@15                                             0464
*                   GVSRCFSI(I)=OFF;/* FREE SPACE            @G24LB04
*                                      COUNT OK              @G24LB04*/
         LH    @14,I                                               0465
         MH    @14,@CH01577                                        0465
         L     @10,GVSNEPTR(,RPLVPTR)                              0465
         ST    @14,@TF00001                                        0465
         ALR   @14,@10                                             0465
         NI    GVSRCFSI-20(@14),B'01111111'                        0465
*                   GVSMTDSP(I)=LSPFRESP-TABSPRET;/*         @G24LB04
*                                      UPDATE COUNT          @G24LB04*/
         LA    @14,TPREQ                                           0466
         L     @06,LSPTPTR                                         0466
         L     @06,LSPFRESP(,@06)                                  0466
         SH    @06,TABSPRET(,@14)                                  0466
         L     @14,@TF00001                                        0466
         STH   @06,GVSMTDSP-20(@14,@10)                            0466
*                   IF GVSMTDSP(I)<0/* NEGATIVE VALUE?       @G24LB04*/
*                     THEN                                         0467
         SLR   @14,@14                                             0467
         CR    @06,@14                                             0467
         BNL   @RF00467                                            0467
*                     GVSMTDSP(I)=0;/* SET TO ZERO           @G24LB04*/
         L     @06,@TF00001                                        0468
         STH   @14,GVSMTDSP-20(@06,@10)                            0468
*                 END;              /*                       @G24LB04*/
@RF00467 DS    0H                                                  0470
*             END;                  /*                       @VS32852*/
*                                                                  0470
@RF00459 DS    0H                                                  0471
*           /*********************************************************/
*           /*                                                       */
*           /* IF DURING RECOVERY, UPDATE SPACE PARAMETERS   @G24LB23*/
*           /* FROM THE JOURNALED LSPACE ELEMENT             @G24LB23*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0471
*           IF RPLJRCVY=ON THEN     /*                       @G24LB23*/
@RF00455 TM    RPLJRCVY(RPLVPTR),B'00000010'                       0471
         BNO   @RF00471                                            0471
*             DO;                   /*                       @G24LB23*/
*               GVSMTNSH(I)=OFF;    /* NOT MOUNTED TO A HOST @G24LB23
*                                      NON-SHAREABLE         @G24LB23*/
*                                                                  0473
         LH    @14,I                                               0473
         MH    @14,@CH01577                                        0473
         L     @10,GVSNEPTR(,RPLVPTR)                              0473
         ST    @14,@TF00001                                        0473
         ALR   @14,@10                                             0473
         NI    GVSMTNSH-20(@14),B'10111111'                        0473
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR AN EMPTY LSPACE ELEMENT         @G24LB23*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0474
*               IF JRNEMPTY=ON THEN /*                       @G24LB23*/
         TM    JRNEMPTY+132(RPLVPTR),B'10000000'                   0474
         BNO   @RF00474                                            0474
*                 GVSRCFSI(I)=ON;   /* INVALID RUNNING SPACE @G24LB23*/
         AL    @10,@TF00001                                        0475
         OI    GVSRCFSI-20(@10),B'10000000'                        0475
*               ELSE                                               0476
*                 DO;               /*                       @G24LB23*/
         B     @RC00474                                            0476
@RF00474 DS    0H                                                  0477
*                   GVSRCFSI(I)=OFF;/* VALID RUNNING SPACE   @G24LB23*/
         LH    @14,I                                               0477
         MH    @14,@CH01577                                        0477
         L     @10,GVSNEPTR(,RPLVPTR)                              0477
         ST    @14,@TF00001                                        0477
         ALR   @14,@10                                             0477
         NI    GVSRCFSI-20(@14),B'01111111'                        0477
*                   GVSMTDSP(I)=JRNFRESP;/* RUNNING SPACE    @G24LB23*/
         LA    @14,132                                             0478
         ALR   @14,RPLVPTR                                         0478
         LH    @06,JRNFRESP(,@14)                                  0478
         N     @06,@CF01669                                        0478
         L     @09,@TF00001                                        0478
         STH   @06,GVSMTDSP-20(@09,@10)                            0478
*                   GVSLEXT(I)=JRNLEXT;/* LARGEST FREE       @G24LB23
*                                      EXTENT                @G24LB23*/
         LH    @14,JRNLEXT(,@14)                                   0479
         N     @14,@CF01669                                        0479
         L     @09,@TF00001                                        0479
         STH   @14,GVSLEXT-20(@09,@10)                             0479
*                   GVSFRESP(I)=JRNFRESP;/* FREE SPACE       @G24LB23*/
         L     @14,@TF00001                                        0480
         STH   @06,GVSFRESP-20(@14,@10)                            0480
*                 END;              /*                       @G24LB23*/
*             END;                  /*                       @G24LB23*/
@RC00474 DS    0H                                                  0483
*           RPLVTYP=RPLVPUT;        /* VIO PUT SW ON         #Y30LB11*/
@RF00471 MVI   RPLVTYP(RPLVPTR),X'01'                              0483
*           CALL GVSNEREC;          /* PUT OUT GVSNE         @Y30LB11*/
         BAL   @14,GVSNEREC                                        0484
*           IF RETCOD^=0 THEN       /* RECORD PUT?           @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0485
         BZ    @RF00485                                            0485
*             RETURN CODE(4);       /* BAD RETURN CODE       @Y30LB11*/
         LA    @15,4                                               0486
         L     @14,@SA00004                                        0486
         LM    @00,@12,@SA00004+8                                  0486
         BR    @14                                                 0486
*           ELSE                    /* OTHERWISE             @Y30LB11*/
*             RETURN CODE(0);       /* GOOD RETURN CODE      @Y30LB11*/
@RF00485 SLR   @15,@15                                             0487
         L     @14,@SA00004                                        0487
         LM    @00,@12,@SA00004+8                                  0487
         BR    @14                                                 0487
*         END;                      /* CHECK NEXT SLOT       @Y30LB11*/
*     END;                          /*                       @Y30LB11*/
@RF00446 LA    @14,1                                               0489
         AH    @14,I                                               0489
@DE00445 STH   @14,I                                               0489
         CH    @14,LAST                                            0489
         BNH   @DL00445                                            0489
*     IF GVSEX=ON THEN              /* ANOTHER RECORD EXIST? @Y30LB11*/
         L     @14,GVSNEPTR(,RPLVPTR)                              0490
         TM    GVSEX(@14),B'10000000'                              0490
         BNO   @RF00490                                            0490
*       DO;                         /*                       @Y30LB11*/
*         RPLVNEXT=ON;              /* READ NEXT             @Y30LB11*/
*         RPLVDIR=OFF;              /* DIRECT OFF            @Y30LB11*/
         OI    RPLVNEXT(RPLVPTR),B'00100000'                       0493
         NI    RPLVDIR(RPLVPTR),B'10111111'                        0493
*         CALL GVSNEREC;            /* GET NEXT GVSNE        @Y30LB11*/
         BAL   @14,GVSNEREC                                        0494
*         IF RETCOD^=0 THEN         /* RECORD PUT?           @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0495
         BZ    @RF00495                                            0495
*           RETURN CODE(4);         /* BAD RETURN CODE       @Y30LB11*/
         LA    @15,4                                               0496
         L     @14,@SA00004                                        0496
         LM    @00,@12,@SA00004+8                                  0496
         BR    @14                                                 0496
*       END;                        /*                       @Y30LB11*/
*     ELSE                          /* OTHERWISE             @Y30LB11*/
*       DO;                         /*                       @Y30LB11*/
         B     @RC00490                                            0498
@RF00490 DS    0H                                                  0499
*         REG1=ADDR(MSGRQ);         /* SET REGISTER 1        @Y30LB11*/
         LA    REG1,MSGRQ                                          0499
*         MSGTEXT1=ADDR(DMVOL);     /* TEXT INSERT           @Y30LB11*/
         LA    @14,DMVOL+132(,RPLVPTR)                             0500
         STCM  @14,7,MSGTEXT1                                      0500
*         MSGLEN1=SIX;              /* INSERT LENGTH         @Y30LB11*/
         MVI   MSGLEN1,X'06'                                       0501
*         MSGTEXT2=ADDR(ARGGP);     /* TEXT INSERT           @Y30LB11*/
         LA    @14,ARGGP                                           0502
         STCM  @14,7,MSGTEXT2                                      0502
*         MSGLEN2=EIGHT;            /* INSERT LENGTH         @Y30LB11*/
         MVI   MSGLEN2,X'08'                                       0503
*         MSGID=M445;               /* VOLUME NOT IN GROUP   @Y30LB11*/
         MVC   MSGID(4),@CF00084                                   0504
*         CALL ICBVOP00;            /* CALL MSG RTN          @Y30LB11*/
         L     @15,@CV00055                                        0505
         BALR  @14,@15                                             0505
*         RETURN CODE(4);           /* RETURN TO ICBVDM00    @Y30LB11*/
         LA    @15,4                                               0506
         L     @14,@SA00004                                        0506
         LM    @00,@12,@SA00004+8                                  0506
         BR    @14                                                 0506
*       END;                        /*                       @Y30LB11*/
*   END;                            /*                       @Y30LB11*/
@RC00490 DS    0H                                                  0508
@DE00444 LH    @14,I                                               0508
         CR    @14,@14                                             0508
         BE    @DL00444                                            0508
*   END GVSCODE;                    /* END GVSNEREC          @Y30LB11*/
@EL00004 DS    0H                                                  0509
@EF00004 DS    0H                                                  0509
@ER00004 LM    @14,@12,@SA00004                                    0509
         BR    @14                                                 0509
*                                                                  0510
*/*  START OF SPECIFICATIONS ****                            @Y30LB11
*                                                                  0510
*01*  NAME = GVSNEREC                                        @Y30LB11
*                                                                  0510
*01*  FUNCTION = THIS ROUTINE IS CALLED TO GET OR PUT GROUP VOLUME 0510
*                SERIAL NUMBER EXTENSION RECORDS.            @Y30LB11
*                                                                  0510
*02*    INPUT = RPLV                                         @Y30LB11
*                                                                  0510
*02*    OUTPUT = GROUP VOLUME SERIAL EXTENSION RECORD        @Y30LB11
*                                                                  0510
**** END OF SPECIFICATIONS **                                        */
*                                                                  0510
*GVSNEREC:                                                         0510
*   PROCEDURE;                      /*                       @Y30LB11*/
GVSNEREC STM   @14,@12,@SA00005                                    0510
*   CALL COMONRTN;                  /* GET/PUT GVSNE RECORD  @Y30LB11*/
         BAL   @14,COMONRTN                                        0511
*   IF RETCOD^=0×                   /* RECORD NOT HANDLED?   @Y30LB11*/
*       GVSGVSEX=OFF THEN           /* NOT EXTENSION RECORD? @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0512
         BNZ   @RT00512                                            0512
         L     @14,GVSNEPTR(,RPLVPTR)                              0512
         TM    GVSGVSEX(@14),B'01000000'                           0512
         BNZ   @RF00512                                            0512
@RT00512 DS    0H                                                  0513
*     RETURN CODE(4);               /* RET TO ICBVDM00       @Y30LB11*/
         LA    @15,4                                               0513
         L     @14,@SA00005                                        0513
         LM    @00,@12,@SA00005+8                                  0513
         BR    @14                                                 0513
*   IF RPLVTYP=RPLVREAD THEN        /* WAS A RECORD READ?    @Y30LB11*/
@RF00512 CLI   RPLVTYP(RPLVPTR),0                                  0514
         BNE   @RF00514                                            0514
*     LAST=GVSESIND-1;              /* INITIALIZE LAST SLOT  @Y30LB11*/
         L     @14,GVSNEPTR(,RPLVPTR)                              0515
         LH    @14,GVSESIND(,@14)                                  0515
         BCTR  @14,0                                               0515
         STH   @14,LAST                                            0515
*   RETURN CODE(0);                 /* RETURN TO ICBVDM00    @Y30LB11*/
@RF00514 SLR   @15,@15                                             0516
         L     @14,@SA00005                                        0516
         LM    @00,@12,@SA00005+8                                  0516
         BR    @14                                                 0516
*   END GVSNEREC;                   /* END GVSNEREC          @Y30LB11*/
*                                                                  0518
*/*  START OF SPECIFICATIONS ****                            @Y30LB11
*                                                                  0518
*01*  NAME = FREECORE                                        @Y30LB11
*                                                                  0518
*01*  FUNCTION = THIS SUBROUTINE IS CALLED WHENEVER THE LSPACE     0518
*                TABLE SEGMENT NEEDS FREEING.  IT ALSO RECHAINS    0518
*                AROUND THE FREED LSPACE TABLE SEGMENT.            0518
*                                                            @Y30LB11
*                                                                  0518
*02*    INPUT = RPLV                                         @Y30LB11
*                                                                  0518
*02*    OUTPUT = NONE                                        @Y30LB11
*                                                                  0518
**** END OF SPECIFICATIONS **                                        */
*                                                                  0518
*FREECORE:                          /* FREEMAIN              @Y30LB11*/
*   PROCEDURE;                      /*                       @Y30LB11*/
FREECORE STM   @14,@12,@SA00006                                    0518
*   IF LSPFOUND=ON THEN                                            0519
         TM    LSPFOUND,B'10000000'                                0519
         BNO   @RF00519                                            0519
*     DO;                           /*                       @Y30LB11*/
*       RESPECIFY                                                  0521
*        (REG2,                                                    0521
*         REG3) RSTD;               /* RESTRICT REGS 2 AND 3 @Y30LB11*/
*       REG2=LENGTH(LSPTABLE);      /* SET FREEMAIN REG 2    @Y30LB11*/
         LA    REG2,22                                             0522
*       REG3=ADDR(LSPTPTR);         /* INIT FREEMAIN PTR     @Y30LB11*/
         LA    REG3,LSPTPTR                                        0523
*LFRE1:                                                            0524
*       GEN(FREEMAIN E,LV=(REG2),A=(REG3),SP=241);/* FREEMAIN SUBPOOL
*                                      241                           */
LFRE1    FREEMAIN E,LV=(REG2),A=(REG3),SP=241
*       RESPECIFY                                                  0525
*        (REG2,                                                    0525
*         REG3) UNRSTD;             /* UNRESTRICT REGS 2 AND 3     0525
*                                                            @Y30LB11*/
*       LSPTPTR=LASTLSPT;           /* GET LAST LSP TABLE    @Y30LB11*/
         L     @14,LASTLSPT                                        0526
         ST    @14,LSPTPTR                                         0526
*       LSPQPTR=FWDCHAIN;           /* CHAIN TO NEXT SEGMENT @Y30LB11*/
         L     @10,FWDCHAIN                                        0527
         ST    @10,LSPQPTR(,@14)                                   0527
*     END;                          /*                       @Y30LB11*/
*   RPLVRETC=Z2;                    /* SET DEMOUNT RC        @Y30LB11*/
@RF00519 MVC   RPLVRETC(2,RPLVPTR),Z2                              0529
*   END FREECORE;                   /* END FREECORE          @Y30LB11*/
@EL00006 DS    0H                                                  0530
@EF00006 DS    0H                                                  0530
@ER00006 LM    @14,@12,@SA00006                                    0530
         BR    @14                                                 0530
*                                                                  0531
*/*  START OF SPECIFICATIONS ****                            @Y30LB11
*                                                                  0531
*01*  NAME = VOLRSTR                                         @Y30LB11
*                                                                  0531
*01*  FUNCTION = THIS SUBROUTINE IS CALLED TO RESTORE THE BASE     0531
*                VOLUME RECORD.                              @Y30LB11
*                                                                  0531
*02*    INPUT = RPLV                                         @Y30LB11
*                                                                  0531
*02*    OUTPUT = RESTORED BASE VOLUME RECORD                 @Y30LB11
*                                                                  0531
**** END OF SPECIFICATIONS **                                        */
*                                                                  0531
*VOLRSTR:                                                          0531
*   PROCEDURE;                      /*                       @Y30LB11*/
VOLRSTR  STM   @14,@12,@SA00007                                    0531
*   RPLVTYP=RPLVREAD;               /* VIO READ SW ON        @Y30LB11*/
         MVI   RPLVTYP(RPLVPTR),X'00'                              0532
*   RPLVKEY=ADDR(ARGV);             /* ADDR OF KEY           @Y30LB11*/
         LA    @14,ARGV                                            0533
         ST    @14,RPLVKEY(,RPLVPTR)                               0533
*   RPLVKGE=OFF;                    /* READ EXACT KEY ONLY   @Y30LB11*/
         NI    RPLVKGE(RPLVPTR),B'11111011'                        0534
*   MSGTEXT1=ADDR(DMVOL);           /* INSERT TEXT           @Y30LB11*/
         LA    @14,DMVOL+132(,RPLVPTR)                             0535
         STCM  @14,7,MSGTEXT1                                      0535
*   MSGLEN1=SIX;                    /* INSERT LENGTH         @Y30LB11*/
         MVI   MSGLEN1,X'06'                                       0536
*   MSGTEXT2=0;                     /* ZERO TEXT             @Y30LB11*/
         SLR   @14,@14                                             0537
         STCM  @14,7,MSGTEXT2                                      0537
*   MSGLEN2=0;                      /* ZERO LENGTH           @Y30LB11*/
         MVI   MSGLEN2,X'00'                                       0538
*   MSGID=M411;                     /* BASEV NOT RESTORED    @Y30LB11*/
         MVC   MSGID(4),@CF00082                                   0539
*   CALL COMONRTN;                  /* READ DIRECT           @Y30LB11*/
         BAL   @14,COMONRTN                                        0540
*   IF RETCOD^=0 THEN               /* RECORD READ?          @Y30LB11*/
         LTR   RETCOD,RETCOD                                       0541
         BNZ   @RT00541                                            0541
*     RETURN;                       /* NO, RETURN            @Y30LB11*/
*   IF SAVDLSF=ON THEN              /* DOWN LEVEL SPACE ON?  @Y30LB11*/
         TM    SAVDLSF,B'10000000'                                 0543
         BNO   @RF00543                                            0543
*     BASDLSF=ON;                   /* RESTORE IT ON         @Y30LB11*/
         L     @14,BASEVPTR(,RPLVPTR)                              0544
         OI    BASDLSF(@14),B'10000000'                            0544
*   ELSE                            /* OTHERSISE             @Y30LB11*/
*     BASDLSF=OFF;                  /* RESTORE IT OFF        @Y30LB11*/
         B     @RC00543                                            0545
@RF00543 L     @14,BASEVPTR(,RPLVPTR)                              0545
         NI    BASDLSF(@14),B'01111111'                            0545
*   BASFRESP=SAVFRESP;              /* RESTORE FREE SPACE    @Y30LB11*/
@RC00543 L     @14,BASEVPTR(,RPLVPTR)                              0546
         STH   SAVFRESP,BASFRESP(,@14)                             0546
*   BASFREXT=SAVFREXT;              /* RESTORE FREE EXTENTS  @Y30LB11*/
         ST    SAVFREXT,BASFREXT(,@14)                             0547
*   BASLEXT=SAVLEXT;                /* RESTORE LARGEST EXTS  @Y30LB11*/
         STH   SAVLEXT,BASLEXT(,@14)                               0548
*   RPLVTYP=RPLVPUT;                /* PUT I/O ON            @Y30LB11*/
         MVI   RPLVTYP(RPLVPTR),X'01'                              0549
*   CALL COMONRTN;                  /* RESTORE VOL RECORD    @Y30LB11*/
         BAL   @14,COMONRTN                                        0550
*   END VOLRSTR;                    /*                       @Y30LB11*/
@EL00007 DS    0H                                                  0551
@EF00007 DS    0H                                                  0551
@ER00007 LM    @14,@12,@SA00007                                    0551
         BR    @14                                                 0551
*   END ICBVDM00                    /* END ICBVDM00          @Y30LB11*/
*                                                                  0552
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IEZVVICB)                                       */
*/*%INCLUDE SYSLIB  (IEZRPLV )                                       */
*/*%INCLUDE SYSLIB  (IEZMSGRQ)                                       */
*/*%INCLUDE SYSLIB  (IEZBASEV)                                       */
*/*%INCLUDE SYSLIB  (IEZGROUP)                                       */
*/*%INCLUDE SYSLIB  (IEZGVSNE)                                       */
*/*%INCLUDE SYSLIB  (IEZCPUID)                                       */
*/*%INCLUDE SYSLIB  (IEZSSC  )                                       */
*/*%INCLUDE SYSLIB  (IEZTABP )                                       */
*                                                                  0552
*       ;                                                          0552
@DATA    DS    0H
@CH01577 DC    H'20'
@CH01659 DC    H'160'
         DS    0F
@SA00001 DS    18F
@SA00006 DS    15F
@SA00003 DS    14F
@SA00007 DS    15F
@SA00005 DS    15F
@SA00004 DS    15F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    1A
@TF00001 DS    F
         DS    0F
@CF00115 DC    F'4'
@CF00086 DC    F'16'
@CF00066 DC    F'400'
@CF00068 DC    F'401'
@CF00070 DC    F'402'
@CF00072 DC    F'403'
@CF00074 DC    F'404'
@CF00076 DC    F'408'
@CF00078 DC    F'409'
@CF00080 DC    F'410'
@CF00082 DC    F'411'
@CF00084 DC    F'445'
@CF01660 DC    F'988'
@CF01669 DC    XL4'0000FFFF'
@CV00054 DC    V(ICBVIO00)
@CV00055 DC    V(ICBVOP00)
@CV00056 DC    V(ICBVRR00)
@CV00057 DC    V(ICBVJL00)
@CV00058 DC    V(ICBVTP00)
         DS    0D
FWDCHAIN DS    A
LASTLSPT DS    A
LSPTPTR  DS    A
UCBDCPTR DS    A
I        DS    H
LAST     DS    H
         DS    0D
@TS00001 DS    CL8
@CB00089 DC    X'FFFF'
@CB00091 DC    X'0000'
@CB00099 DC    X'00F0'
CPU      DS    CL2
GVSBUFR  DS    CL1024
SAVDLSF  DS    BL1
SAVRETC  DS    BL2
         DS    CL5
TEMP0    DS    CL4
ZEROVOL  DC    X'000000000000'
ARGV     DS    CL13
         ORG   ARGV
@NM00001 DC    CL5'V    '
ARGVOL   DS    CL6
@NM00002 DC    CL1' '
@NM00003 DC    XL1'0'
         ORG   ARGV+13
ARGGR    DS    CL13
         ORG   ARGGR
@NM00004 DC    CL3'G  '
ARGGP    DS    CL8
@NM00005 DC    CL1' '
ARGNUM   DS    FL1
         ORG   ARGGR+13
ARGCPU   DS    CL13
         ORG   ARGCPU
@NM00006 DC    CL3'C  '
@NM00007 DC    CL3'CPU'
@NM00008 DC    CL1' '
@NM00009 DC    CL2'ID'
@NM00010 DC    CL4' '
         ORG   ARGCPU+13
LSPOUT   DS    CL30
         ORG   LSPOUT
@NM00011 DS    CL6
FREFRESP DS    CL4
@NM00012 DS    CL1
FREETRK  DS    CL4
@NM00013 DS    CL1
FREFREXT DS    CL4
@NM00014 DS    CL1
FRELEXT  DS    CL4
@NM00015 DS    CL1
FRELGTRK DS    CL4
         ORG   LSPOUT+30
SWITCH   DS    BL1
         ORG   SWITCH
LSPFOUND DS    BL1
@NM00016 EQU   SWITCH+0
         ORG   SWITCH+1
@NM00017 DS    CL8
         ORG   @NM00017
@NM00018 DS    CL4
TEMP     DS    CL4
         ORG   @NM00017+8
TEMP2    DS    CL7
         ORG   TEMP2
@NM00019 DS    CL5
T1       DS    CL2
         ORG   TEMP2+7
VDMPATCH DS    CL200
         ORG   VDMPATCH
@NM00020 DC    CL19'ICBVDM00 PATCH AREA'
@NM00021 DC    XL181'0'
         ORG   VDMPATCH+200
Z5       DS    CL5
         ORG   Z5
Z4       DS    CL4
         ORG   Z4
Z3       DS    CL3
         ORG   Z3
Z2       DS    CL2
Z1       DS    CL1
         ORG   Z4+3
@NM00022 DS    CL1
         ORG   Z5+4
@NM00023 DS    CL1
         ORG   Z5+5
MSGRQ    DS    CL32
         ORG   MSGRQ
MSGID    DS    FL4
MSGRPLV  DS    AL4
MSGRLEN  DS    BL1
MSGREPLY DS    AL3
MSGLEN1  DS    BL1
MSGTEXT1 DS    AL3
MSGLEN2  DS    BL1
MSGTEXT2 DS    AL3
MSGLEN3  DS    BL1
MSGTEXT3 DS    AL3
MSGLEN4  DS    BL1
MSGTEXT4 DS    AL3
MSGLEN5  DS    BL1
MSGTEXT5 DS    AL3
         ORG   MSGRQ+32
TPREQ    DS    CL12
DMLSAV   DS    CL28
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
VVIPTR   EQU   @03
UCBPR1   EQU   @02
TEMP1    EQU   @02
SAVLEXT  EQU   @09
SAVFREXT EQU   @08
SAVFRESP EQU   @03
RPLVPTR  EQU   @07
LSPTSAV  EQU   @02
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG3     EQU   @03
RETCOD   EQU   @15
MDREG1   EQU   @01
CVTPTR   EQU   16
UCBPTR   EQU   0
LSPTABLE EQU   0
LSPQPTR  EQU   LSPTABLE
LSPFRESP EQU   LSPTABLE+4
LSPFREXT EQU   LSPTABLE+8
LSPLEXT  EQU   LSPTABLE+12
LSPVOLID EQU   LSPTABLE+16
JRNDMT   EQU   0
JRNLEN   EQU   JRNDMT
JRNFLGS  EQU   JRNDMT+5
JRNEMPTY EQU   JRNFLGS
JRNFREXT EQU   JRNDMT+6
JRNFRESP EQU   JRNDMT+14
JRNLEXT  EQU   JRNDMT+16
CVTMAP   EQU   0
CVTDATE  EQU   CVTMAP+56
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTICB   EQU   CVTXTNT2+48
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00030 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
VVICB    EQU   0
VVICPUID EQU   VVICB+12
VVIFLGA  EQU   VVICB+15
VVIFLG0  EQU   VVIFLGA
VVIQLSPL EQU   VVICB+48
VVIUCB   EQU   VVICB+60
RPLV     EQU   0
RPLTCBPR EQU   RPLV+8
RPLVVICB EQU   RPLV+12
RPLFLAGA EQU   RPLV+28
RPLFTIME EQU   RPLFLAGA
RPLJRCVY EQU   RPLFLAGA
RPLVTLEN EQU   RPLV+30
RPLVRETC EQU   RPLV+34
RPLVSAM  EQU   RPLV+56
RPLVTYP  EQU   RPLVSAM+2
RPLVBUF  EQU   RPLVSAM+32
RPLVKEY  EQU   RPLVSAM+36
RPLVOPT  EQU   RPLVSAM+40
RPLVLOC  EQU   RPLVOPT
RPLVDIR  EQU   RPLVOPT
RPLVNEXT EQU   RPLVOPT
RPLVKGE  EQU   RPLVOPT
RPLVUPD  EQU   RPLVOPT+1
RPLVBLN  EQU   RPLVSAM+52
RPLVUTIL EQU   RPLV+132
BASEV    EQU   0
BASNAME  EQU   BASEV
BASID    EQU   BASNAME+11
BASFLAGA EQU   BASEV+14
BASTYPE  EQU   BASFLAGA
BASDLSF  EQU   BASFLAGA+2
BASGENUS EQU   BASFLAGA+2
BASINAC  EQU   BASFLAGA+2
BASCPUID EQU   BASEV+18
BASRCVYF EQU   BASEV+20
BASSATIA EQU   BASRCVYF
BASMISCF EQU   BASRCVYF+2
BASLIB1  EQU   BASEV+36
BASLID1  EQU   BASLIB1
BASLIB2  EQU   BASEV+49
BASLID2  EQU   BASLIB2
BASFRESP EQU   BASEV+68
BASLEXT  EQU   BASEV+70
BASFREXT EQU   BASEV+72
BASKLCPY EQU   BASEV+76
BASCOPID EQU   BASKLCPY+11
BASGROUP EQU   BASEV+180
GROUP    EQU   0
GRONAME  EQU   GROUP
GROID    EQU   GRONAME+11
GROFLAGA EQU   GROUP+13
GROTYPE  EQU   GROFLAGA
GROMSG1  EQU   GROFLAGA+2
GROPCENT EQU   GROUP+29
GROSTRSH EQU   GROUP+40
GROFRESP EQU   GROUP+44
GROFREXT EQU   GROUP+48
GROERRTS EQU   GROUP+56
GROERRDT EQU   GROERRTS
GVSNE    EQU   0
GVSHDR   EQU   GVSNE
GVSNAME  EQU   GVSHDR
GVSID    EQU   GVSNAME+11
GVSFLAGA EQU   GVSHDR+13
GVSTYPE  EQU   GVSFLAGA
GVSGVSEX EQU   GVSTYPE
GVSEX    EQU   GVSFLAGA+2
GVSESIND EQU   GVSHDR+18
GVSSLOTS EQU   GVSNE+28
GVSVOLID EQU   GVSSLOTS
GVSVOLFL EQU   GVSSLOTS+6
GVSCPUBM EQU   GVSVOLFL
GVSRCFSI EQU   GVSVOLFL+2
GVSMTNSH EQU   GVSVOLFL+2
GVSFRESP EQU   GVSSLOTS+10
GVSLEXT  EQU   GVSSLOTS+12
GVSMTDSP EQU   GVSSLOTS+18
CPUID    EQU   0
CPUTYPE  EQU   CPUID+18
CPUMAP   EQU   CPUID+20
CPUIDREC EQU   CPUMAP
CPUMASK  EQU   CPUMAP+6
ICB2SSCB EQU   0
ICBOPT   EQU   ICB2SSCB+48
ICBFLG   EQU   ICB2SSCB+52
ICBFG1   EQU   ICBFLG
ICBCPUID EQU   ICB2SSCB+112
ICBTRACE EQU   ICB2SSCB+148
TABP     EQU   0
TABFLAGS EQU   TABP
TABFTSPC EQU   TABFLAGS
TABVOLID EQU   TABP+2
TABSELRB EQU   TABVOLID+2
TABJOBID EQU   TABSELRB
TABDDRET EQU   TABP+8
TABHDRET EQU   TABDDRET
TABSPRET EQU   TABHDRET
ICBDMLST EQU   0
DMNTFLAG EQU   ICBDMLST+6
DMVOL    EQU   ICBDMLST+8
DMHOST   EQU   ICBDMLST+20
UCBBGN   EQU   0
BASEVPTR EQU   RPLVBUF
CPUIDPTR EQU   RPLVBUF
GROUPPTR EQU   RPLVBUF
GVSNEPTR EQU   RPLVBUF
UCBPR2   EQU   UCBPTR
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
UCBOBS01 EQU   UCBDEV
UCBVOLI  EQU   UCBOBS01+4
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBMOUNT EQU   UCBDMCT
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00029 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00029
UCBSKPFG EQU   @NM00029
UCBRIPND EQU   @NM00029
UCBRTIAC EQU   @NM00029
UCBRSV79 EQU   @NM00029
UCBRSV78 EQU   @NM00029
UCBRSV77 EQU   @NM00029
UCBOLTEP EQU   @NM00029
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00028 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVTOC  EQU   UCBOBS01
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
DMNTVUA  EQU   ICBDMLST+26
DMNTRES2 EQU   ICBDMLST+25
DMNTECB  EQU   ICBDMLST+16
DMNTASID EQU   ICBDMLST+14
DMBITRES EQU   DMNTFLAG
DMVUAVAL EQU   DMNTFLAG
DMDELRSP EQU   DMNTFLAG
DMBITRE1 EQU   DMNTFLAG
DMNTRES1 EQU   ICBDMLST+5
DMOPCD   EQU   ICBDMLST+4
DMLEN    EQU   ICBDMLST
@NM00055 EQU   TABHDRET+2
TABBFTBL EQU   TABJOBID
TABDDNUM EQU   TABVOLID
@NM00054 EQU   TABP+1
@NM00053 EQU   TABFLAGS
TABFFREE EQU   TABFLAGS
TABFUTRM EQU   TABFLAGS
TABFBFIT EQU   TABFLAGS
TABFSRCD EQU   TABFLAGS
TABFBLDE EQU   TABFLAGS
ICBLORD  EQU   ICBTRACE+256
ICBOTRC  EQU   ICBTRACE
ICBRESV  EQU   ICB2SSCB+128
ICBVOLST EQU   ICB2SSCB+124
ICBVSCRA EQU   ICB2SSCB+120
ICBSAMP  EQU   ICB2SSCB+118
ICBRESVD EQU   ICB2SSCB+117
ICBFAB   EQU   ICB2SSCB+108
ICBMSSC  EQU   ICB2SSCB+104
ICBRSVP  EQU   ICB2SSCB+100
ICBAEAP  EQU   ICB2SSCB+96
ICBSIOBP EQU   ICB2SSCB+92
ICBIATNA EQU   ICB2SSCB+88
ICBIPRGA EQU   ICB2SSCB+84
ICBSRBP  EQU   ICB2SSCB+80
ICBVVICB EQU   ICB2SSCB+76
ICBVVIC  EQU   ICB2SSCB+72
ICBSIOP  EQU   ICB2SSCB+68
ICBMEP   EQU   ICB2SSCB+64
ICBIORCI EQU   ICB2SSCB+60
ICB2ACTP EQU   ICB2SSCB+56
ICBFG3   EQU   ICBFLG+2
ICBFG2   EQU   ICBFLG+1
@NM00052 EQU   ICBFG1
ICBMSCA  EQU   ICBFG1
ICBMSCMP EQU   ICBFG1
ICBS     EQU   ICBFG1
ICBB     EQU   ICBFG1
ICBV     EQU   ICBFG1
ICBR     EQU   ICBFG1
ICBI     EQU   ICBFG1
ICBNVT   EQU   ICBOPT
ICBVN02P EQU   ICB2SSCB+44
ICBTCB   EQU   ICB2SSCB+40
ICBQHEAD EQU   ICB2SSCB+36
ICBAUCB  EQU   ICB2SSCB+32
ICBPUCB  EQU   ICB2SSCB+28
ICBCOMQ  EQU   ICB2SSCB+24
ICBIOR   EQU   ICB2SSCB+20
ICBCOM   EQU   ICB2SSCB+16
ICBACTV  EQU   ICB2SSCB+12
ICBECB   EQU   ICB2SSCB+8
ICBSSNAM EQU   ICB2SSCB
@NM00051 EQU   CPUID+150
CPUPURGE EQU   CPUID+148
@NM00050 EQU   CPUMAP+5
CPURES2  EQU   CPUTYPE
CPUASSOC EQU   CPUTYPE
CPURES1  EQU   CPUTYPE
CPUDNEXT EQU   CPUID+16
CPUINEXT EQU   CPUID+14
@NM00049 EQU   CPUID+13
CPUNAME  EQU   CPUID
GVSEXPDT EQU   GVSSLOTS+14
@NM00048 EQU   GVSVOLFL+2
@NM00047 EQU   GVSHDR+20
@NM00046 EQU   GVSHDR+17
@NM00045 EQU   GVSFLAGA+2
@NM00044 EQU   GVSTYPE
@NM00043 EQU   GVSTYPE
GVSNO    EQU   GVSID+1
GVSRES1  EQU   GVSID
GVSVVGRP EQU   GVSNAME+3
GVSG     EQU   GVSNAME
@NM00042 EQU   GROUP+136
GROADDR  EQU   GROUP+106
GROOWNER EQU   GROUP+96
GRORESSP EQU   GROUP+95
GROCONUS EQU   GROUP+94
GRODESCR EQU   GROUP+64
GROERRTM EQU   GROERRTS+4
GRORETPD EQU   GROUP+52
GROSSPD  EQU   GROUP+38
GROPSPD  EQU   GROUP+36
GRONINAC EQU   GROUP+34
GRONRSTD EQU   GROUP+32
GRONGEN  EQU   GROUP+30
GROLSN   EQU   GROUP+23
GROFSN   EQU   GROUP+17
@NM00041 EQU   GROFLAGA+2
GRORETN  EQU   GROFLAGA+2
GRORLSE  EQU   GROFLAGA+2
GRORONLY EQU   GROFLAGA+2
GRODAERA EQU   GROFLAGA+2
GROEXCL  EQU   GROFLAGA+2
GROBIND  EQU   GROFLAGA+2
GRORES1  EQU   GROTYPE
GROGVR   EQU   GROTYPE
GROZERO  EQU   GROID+1
GROBLANK EQU   GROID
GROVVGRP EQU   GRONAME+3
GROG     EQU   GRONAME
@NM00040 EQU   BASEV+192
BASXPDT2 EQU   BASEV+188
BASRECOV EQU   BASEV+174
BASDEST  EQU   BASEV+144
BASOWNER EQU   BASEV+134
BASDESCR EQU   BASEV+104
BASDTREM EQU   BASEV+100
BASEXPDT EQU   BASEV+96
BASDLMTD EQU   BASEV+92
BASRES6  EQU   BASEV+89
BASCOPNO EQU   BASCOPID+1
BASCOPBK EQU   BASCOPID
BASCOPSN EQU   BASKLCPY+5
BASCOPV  EQU   BASKLCPY
@NM00039 EQU   BASEV+65
BASBKLMT EQU   BASEV+64
BASNBKUP EQU   BASEV+63
BASNCOPY EQU   BASEV+62
BASNEXTV EQU   BASEV+56
BASPREV  EQU   BASEV+50
BAS2BIT2 EQU   BASLID2
BAS2BIT1 EQU   BASLID2
BASRES5  EQU   BASLIB2
BASCSN2  EQU   BASEV+37
BAS1BIT2 EQU   BASLID1
BAS1BIT1 EQU   BASLID1
BASRES4  EQU   BASLIB1
BASCSN1  EQU   BASEV+24
BASRES3  EQU   BASMISCF
BASHOLD  EQU   BASMISCF
BASRES8  EQU   BASSATIA
BASVSMIS EQU   BASSATIA
BASIVCPY EQU   BASSATIA
BASIVCRE EQU   BASSATIA
@NM00038 EQU   BASFLAGA+3
BASLAST  EQU   BASFLAGA+3
BASFIRST EQU   BASFLAGA+3
BASREASS EQU   BASFLAGA+3
BASRONLY EQU   BASFLAGA+3
BASDAERA EQU   BASFLAGA+3
BASEXCL  EQU   BASFLAGA+2
BASBIND  EQU   BASFLAGA+2
BASRSTD  EQU   BASFLAGA+2
BASGRPV  EQU   BASFLAGA+2
BASNOCPY EQU   BASFLAGA+2
BASRES2  EQU   BASTYPE
BASBASVR EQU   BASTYPE
BASRES1  EQU   BASTYPE
BASRES7  EQU   BASEV+13
BASZERO  EQU   BASID+1
BASBLANK EQU   BASID
BASSERNO EQU   BASNAME+5
BASEVKEY EQU   BASNAME
RPLVRLN  EQU   RPLVSAM+48
@NM00037 EQU   RPLVSAM+44
@NM00036 EQU   RPLVOPT
@NM00035 EQU   RPLVOPT
@NM00034 EQU   RPLVSAM+28
RPLVACB  EQU   RPLVSAM+24
@NM00033 EQU   RPLVSAM+3
@NM00032 EQU   RPLVSAM
@NM00031 EQU   RPLV+42
RPLVDATE EQU   RPLV+38
RPLRMSCC EQU   RPLV+36
RPLRCODE EQU   RPLV+32
RPLVRES1 EQU   RPLFLAGA+1
RPLVJRNL EQU   RPLFLAGA
RPLVVOP  EQU   RPLFLAGA
RPLVVIN  EQU   RPLFLAGA
RPLVCOMP EQU   RPLFLAGA
RPLVPROG EQU   RPLFLAGA
RPLVPOST EQU   RPLFLAGA
RPLVRSV3 EQU   RPLV+24
RPLVRSV2 EQU   RPLV+20
RPLVRSV1 EQU   RPLV+16
RPLASCBP EQU   RPLTCBPR
RPLVECB  EQU   RPLV+4
RPLVQPTR EQU   RPLV
VVIUNUSD EQU   VVICB+116
VVINUSDC EQU   VVICB+112
VVITPFCH EQU   VVICB+108
VVIDVMEL EQU   VVICB+104
VVIVBSTF EQU   VVICB+100
VVISSOBA EQU   VVICB+96
VVIVSCRA EQU   VVICB+92
VVISTPTB EQU   VVICB+88
VVIDVMTA EQU   VVICB+84
VVIJUCB  EQU   VVICB+80
VVIIUCB  EQU   VVICB+76
VVIRES6  EQU   VVICB+72
VVIRES5  EQU   VVICB+68
VVIRES4  EQU   VVICB+64
VVIVJL   EQU   VVICB+56
VVIVRR   EQU   VVICB+52
VVIQRPL2 EQU   VVICB+44
VVIQRPL1 EQU   VVICB+40
VVIVTRK  EQU   VVICB+37
VVIOPCD  EQU   VVICB+36
VVIVQMP  EQU   VVICB+32
VVIECB1  EQU   VVICB+28
VVICATAD EQU   VVICB+24
VVIDCBAD EQU   VVICB+20
VVIACBAD EQU   VVICB+16
VVIFLG7  EQU   VVIFLGA
VVIFLG6  EQU   VVIFLGA
VVIFLG5  EQU   VVIFLGA
VVIFLG4  EQU   VVIFLGA
VVIFLG3  EQU   VVIFLGA
VVIFLG2  EQU   VVIFLGA
VVIFLG1  EQU   VVIFLGA
VVIALCON EQU   VVICB+14
VVIUCAT  EQU   VVICB+4
VVICID   EQU   VVICB
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00030
UCBHALI  EQU   @NM00030
UCBRSV09 EQU   @NM00030
UCBRSV08 EQU   @NM00030
UCBRSV07 EQU   @NM00030
UCBRSV06 EQU   @NM00030
UCBRSV05 EQU   @NM00030
UCBRSV04 EQU   @NM00030
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00027 EQU   UCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00026 EQU   CVTFIX+248
@NM00025 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
JRNVOL   EQU   JRNDMT+8
@NM00024 EQU   JRNFLGS
JRNOPCD  EQU   JRNDMT+4
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00129 EQU   @EL00001
@RT00133 EQU   @EL00001
@RT00221 EQU   @EL00001
@RC00314 EQU   @RC00312
@RF00378 EQU   @RC00376
@RF00495 EQU   @RC00490
@RT00541 EQU   @EL00007
@ENDDATA EQU   *
         END   ICBVDM00,(C'PLS1654',0701,77355)
