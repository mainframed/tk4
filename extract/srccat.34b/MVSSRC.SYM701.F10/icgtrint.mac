         TITLE '***** ICGTRINT - MSS TRACE DATA INTERPRET AND REFORMAT *
                *****   '
ICGTRINT CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGTRINT  77.354'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @11,4095(,@12)                                      0001
         LA    @10,4095(,@11)                                      0001
         LA    @09,4095(,@10)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@11                                    0001
         USING @PSTART+8190,@10                                    0001
         USING @PSTART+12285,@09                                   0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @08,@01                                             0001
         USING @DATD,@08                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @08,8(,@13)                                         0001
         LR    @13,@08                                             0001
         L     R1,0(R1)
*   PARMPTR=R1;                     /* SAVE PARMS ADDRESS    @Y30LB40*/
         LR    PARMPTR,R1                                          0156
*   RFY                                                            0157
*     R1 UNRSTD;                    /*                       @Y30LB40*/
*   CALL INIT;                      /* INITIALIZE VALUES     @OZ05079*/
         BAL   @14,INIT                                            0158
*   CALL OPENFILE;                  /* OPEN SYSPRINT, TRACEIN      0159
*                                                            @OZ05079*/
         BAL   @14,OPENFILE                                        0159
*   IF RETURNCD=4                   /* SYSPRINT NOT OPEN     @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         CLC   RETURNCD(2),@CH00104                                0160
         BNE   @RF00160                                            0160
*     RETURN CODE(4);               /* RETURN, NO MESSAGE    @OZ05079*/
         L     @13,4(,@13)                                         0161
         L     @00,@SIZDATD                                        0161
         LR    @01,@08                                             0161
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,4                                               0161
         L     @14,12(,@13)                                        0161
         LM    @00,@12,20(@13)                                     0161
         BR    @14                                                 0161
*   ELSE                            /*                       @OZ05079*/
*     IF RETURNCD=8                 /* TRACEIN NOT OPENED    @OZ05079*/
*       THEN                        /*                       @OZ05079*/
@RF00160 CLC   RETURNCD(2),@CH00036                                0162
         BE    @RT00162                                            0162
*       GO TO CLOSEFIL;             /* CLOSE SYSPRINT        @OZ05079*/
*   IF PARMLEN^=0                   /* CHECK IF ANY PARMS    @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         LH    @06,PARMLEN(,PARMPTR)                               0164
         LTR   @06,@06                                             0164
         BZ    @RF00164                                            0164
*     CALL GETPARMS;                /* IF ANY, GET THEM      @OZ05079*/
         BAL   @14,GETPARMS                                        0165
*   IF RETURNCD=8                   /* INVALID PARMS FOUND   @OZ05079*/
*     THEN                          /*                       @OZ05079*/
@RF00164 CLC   RETURNCD(2),@CH00036                                0166
         BE    @RT00166                                            0166
*     GO TO CLOSEFIL;               /* CLOSE OPEN FILES      @OZ05079*/
*   ELSE                            /*                       @OZ05079*/
*     IF PARMSW='R'×PARMSW='B'      /* REFORMAT WANTED       @OZ05079*/
*       THEN                        /*                       @OZ05079*/
         CLI   PARMSW,C'R'                                         0168
         BE    @RT00168                                            0168
         CLI   PARMSW,C'B'                                         0168
         BNE   @RF00168                                            0168
@RT00168 DS    0H                                                  0169
*       CALL OPENOUT;               /* OPEN TRACEOUT FILE    @OZ05079*/
         BAL   @14,OPENOUT                                         0169
*   IF RETURNCD=8                   /* TRACEOUT OPEN FAIL    @OZ05079*/
*     THEN                          /*                       @OZ05079*/
@RF00168 CLC   RETURNCD(2),@CH00036                                0170
         BE    @RT00170                                            0170
*     GO TO CLOSEFIL;               /* CLOSE OPEN FILES      @OZ05079*/
*   ELSE                                                           0172
*     ;                             /*                       @OZ05079*/
*   RFY                                                            0173
*    (R0,                                                          0173
*     R1) RSTD;                     /* GET AND CONVERT TODAYS DATE 0173
*                                                            @Y30LB40*/
*   GEN(TIME);                      /*                       @Y30LB40*/
         TIME
*   GEN(ST    R1,DOUBLEWD);         /*                       @Y30LB40*/
         ST    R1,DOUBLEWD
*   RFY                                                            0176
*    (R0,                                                          0176
*     R1) UNRSTD;                   /*                       @Y30LB40*/
*   UNPK(TODAY,DOUBLEWD(2:4));      /*                       @Y30LB40*/
         UNPK  TODAY(5),DOUBLEWD+1(3)                              0177
*                                                                  0178
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - RDTRACE (SUBSECTION OF MAINLINE)        @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - READ A RECORD FROM TRACEIN, AND DETERMINE     @OZ05079*/
*/*            WHAT PROCESSING (IF ANY) IS TO BE PERFORMED.  @OZ05079*/
*/*            CONTINUE READING RECORDS UNTIL END-OF-FILE    @OZ05079*/
*/*            IS ENCOUNTERED, AT WHICH POINT BRANCH (VIA    @OZ05079*/
*/*            IOS LOGIC) TO ROUTINE 'EOJ'.                  @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0178
*RDTRACE:                           /* READ A RECORD AND COUNT IT  0178
*                                                            @Y30LB40*/
*   RFY                                                            0178
*    (R0,                                                          0178
*     R1,                                                          0178
*     R14,                                                         0178
*     R15) RSTD;                    /*                       @Y30LB40*/
RDTRACE  DS    0H                                                  0179
*   GEN(GET   INDCB,RECIN);         /*                       @Y30LB40*/
         GET   INDCB,RECIN
*   RFY                                                            0180
*    (R0,                                                          0180
*     R1,                                                          0180
*     R14,                                                         0180
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   RCDCOUNT=RCDCOUNT+1;            /* COUNT INPUT RECORDS   @Y30LB40*/
         LA    @06,1                                               0181
         AL    @06,RCDCOUNT                                        0181
         ST    @06,RCDCOUNT                                        0181
*   IF TID^=XID&                    /* CHECK TO SEE IF THE   @OZ11006*/
*       TID^=YID×                   /*                       @OZ11006*/
*       CYL<LCYL×                   /* RECORD IS A VALID RECORD    0182
*                                                            @YM31057*/
*       HEAD<LHD×                   /* BY CHECKING THE TABLE ID    0182
*                                                            @YM31057*/
*       RECORD<LRD×                 /* AND THE CHR RANGE     @YM31057*/
*       CYL>HCYL×                   /*                       @YM31057*/
*       HEAD>HHD×                   /*                       @YM31057*/
*       RECORD>HRD                  /*                       @YM31057*/
*     THEN                          /*                       @YM31057*/
         CLI   TID,192                                             0182
         BE    @GL00006                                            0182
         CLI   TID,128                                             0182
         BNE   @RT00182                                            0182
@GL00006 CLI   CYL,32                                              0182
         BL    @RT00182                                            0182
         CLI   RECORD,1                                            0182
         BL    @RT00182                                            0182
         CLI   CYL,39                                              0182
         BH    @RT00182                                            0182
         CLI   HEAD,18                                             0182
         BH    @RT00182                                            0182
         CLI   RECORD,32                                           0182
         BH    @RT00182                                            0182
*     GO TO RDTRACE;                /* GO TO NEXT ROUTINE    @YM31057*/
*   IF LIBRID='11111111'B           /* IF TRAILER RECORD     @OZ05079*/
*       &PARMSW^='R'                /* NOT REFORMAT ONLY     @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         CLI   LIBRID,B'11111111'                                  0184
         BNE   @RF00184                                            0184
         CLI   PARMSW,C'R'                                         0184
         BE    @RF00184                                            0184
*     DO;                           /*                       @OZ05079*/
*       CALL BLOCK;                 /* PRINT FILE TRAILER    @OZ05079*/
         BAL   @14,BLOCK                                           0186
*       GO TO RDTRACE;              /* READ ANOTHER RECORD   @OZ05079*/
         B     RDTRACE                                             0187
*     END;                          /*                       @OZ05079*/
*   IF LIBRID='10000000'B           /* HEADER RECORD         @Y30LB40*/
*     THEN                                                         0189
@RF00184 CLI   LIBRID,B'10000000'                                  0189
         BNE   @RF00189                                            0189
*     DO;                           /*                       @Y30LB40*/
*       CALL PROCREC6;              /* PROCESS FILE HEADER   @OZ05079*/
         BAL   @14,PROCREC6                                        0191
*       GO TO RDTRACE;              /* READ ANOTHER RECORD   @OZ05079*/
         B     RDTRACE                                             0192
*     END;                          /*                       @OZ05079*/
*   ELSE                                                           0194
*     ;                             /*                       @OZ05079*/
@RF00189 DS    0H                                                  0195
*   IF IMLCNT<IMLSAVE               /* CHECK FOR MATCHING IML COUNT
*                                                            @ZA25867*/
*     THEN                          /*                       @ZA25867*/
         CLC   IMLCNT(2),IMLSAVE                                   0195
         BNL   @RF00195                                            0195
*     DO;                           /*                       @ZA25867*/
*       IMLFLAG=FLAGONE;            /*                       @ZA25867*/
         MVC   IMLFLAG(1),FLAGONE                                  0197
*       GO TO RDTRACE;              /* SKIP RECORD IF NO MATCH     0198
*                                                            @ZA25867*/
         B     RDTRACE                                             0198
*     END;                          /*                       @ZA25867*/
*/*  ******************************************************* @ZA13497*/
*/*   IF SELECT SPECIFIC VOLID OR SDG SPECIFIED, CHECK       @ZA13497*/
*/*   FOR MATCH TO SELECTED ITEM.  IF NO MATCH, READ         @ZA13497*/
*/*   NEXT RECORD.                                           @ZA13497*/
*/*  ******************************************************* @ZA13497*/
*                                                                  0200
*   RSPINDGP(1)='0'B;               /*                       @ZA13497*/
@RF00195 DS    0H                                                  0201
*   RSPINDGP(2)='0'B;               /*                       @ZA13497*/
*   RSPINDGP(3)='0'B;               /*                       @ZA13497*/
         NI    RSPINDGP,B'00011111'                                0202
*   IF SDGSELSW='1'B                /*                       @ZA13497*/
*     THEN                          /*                       @ZA13497*/
         TM    SDGSELSW,B'10000000'                                0203
         BNO   @RF00203                                            0203
*     IF HOLDSDG^=RSPINDGP          /*                       @ZA13497*/
*       THEN                        /*                       @ZA13497*/
         CLC   HOLDSDG(1),RSPINDGP                                 0204
         BNE   @RT00204                                            0204
*       GO TO RDTRACE;              /*                       @ZA13497*/
*   IF VOLSELSW='1'B                /*                       @ZA13497*/
*       &HOLDVOL(1:1+LENVOLID)^=VOLID/*                      @ZA13497*/
*     THEN                          /*                       @ZA13497*/
@RF00203 TM    VOLSELSW,B'10000000'                                0206
         BNO   @RF00206                                            0206
         LH    @06,LENVOLID                                        0206
         EX    @06,@SC01278                                        0206
         BNE   @RT00206                                            0206
*     GO TO RDTRACE;                /*                       @ZA13497*/
*   IF MINIPTR='00000000'B          /* IF CURRENT MINIPTR 0 BYPASS 0208
*                                      RECORD                        */
*     THEN                                                         0208
@RF00206 CLI   MINIPTR,B'00000000'                                 0208
         BE    @RT00208                                            0208
*     GO TO RDTRACE;                /*                       @Y30LB40*/
*   IF PARMSW='I'                   /* INTERPRET ONLY        @Y30LB40*/
*     THEN                          /*                       @OZ05079*/
         CLI   PARMSW,C'I'                                         0210
         BNE   @RF00210                                            0210
*     DO;                           /*                       @OZ05079*/
*       CALL BLOCK;                 /* PRINT                 @OZ05079*/
         BAL   @14,BLOCK                                           0212
*       GO TO RDTRACE;              /* READ ANOTHER RECORD   @OZ05079*/
         B     RDTRACE                                             0213
*     END;                          /*                       @OZ05079*/
*   ELSE                            /*                       @OZ05079*/
*     DO;                           /*                       @OZ05079*/
@RF00210 DS    0H                                                  0216
*       CALL REFORMAT;              /* BUILD OUTPUT RECORD   @OZ05079*/
         BAL   @14,REFORMAT                                        0216
*       IF PARMSW='B'               /* IF INTERPRET ALSO     @OZ05079*/
*         THEN                      /*                       @OZ05079*/
         CLI   PARMSW,C'B'                                         0217
         BNE   @RF00217                                            0217
*         CALL BLOCK;               /* PRINT                 @OZ05079*/
         BAL   @14,BLOCK                                           0218
*       GO TO RDTRACE;              /* READ ANOTHER RECORD   @OZ05079*/
         B     RDTRACE                                             0219
*     END;                                                         0220
*                                                                  0221
*/********************************************************************
*                                                                    */
*/* END OF JOB PROCESSING ROUTINE                            @Y30LB40*/
*/********************************************************************
*                                                                    */
*                                                                  0221
*EOJ:                                                              0221
*   CALL NEWPAGE;                   /*                       @Y30LB40*/
EOJ      BAL   @14,NEWPAGE                                         0221
*   BLKLINE=DTLHDR;                 /*                       @Y30LB40*/
         MVC   BLKLINE(121),DTLHDR                                 0222
*   OPT=PARMSW;                     /* PRINT OUT PARM OPTION & RCD 0223
*                                      COUNT                         */
         MVC   OPT(1),PARMSW                                       0223
*   CALL EDITFIX(ADDR(HLDSYR),1,'N');/*                      @Y30LB40*/
         MVC   @AL00001+4(8),@AL00224                              0224
         LA    @06,HLDSYR                                          0224
         ST    @06,@AFTEMPS+20                                     0224
         LA    @06,@AFTEMPS+20                                     0224
         ST    @06,@AL00001                                        0224
         LA    @01,@AL00001                                        0224
         BAL   @14,EDITFIX                                         0224
*   UDATE1(1:2)=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   UDATE1(2),FIXOUT+11                                 0225
*   CALL EDITFIX(ADDR(HLDSDAY),2,'N');/*                     @Y30LB40*/
         MVC   @AL00001+4(8),@AL00226                              0226
         LA    @06,HLDSDAY                                         0226
         ST    @06,@AFTEMPS+20                                     0226
         LA    @06,@AFTEMPS+20                                     0226
         ST    @06,@AL00001                                        0226
         LA    @01,@AL00001                                        0226
         BAL   @14,EDITFIX                                         0226
*   UDATE1(3:5)=FIXOUT(11:13);      /*                       @Y30LB40*/
         MVC   UDATE1+2(3),FIXOUT+10                               0227
*   CALL EDITFIX(ADDR(HLDEYR),1,'N');/*                      @Y30LB40*/
         MVC   @AL00001+4(8),@AL00228                              0228
         LA    @06,HLDEYR                                          0228
         ST    @06,@AFTEMPS+20                                     0228
         LA    @06,@AFTEMPS+20                                     0228
         ST    @06,@AL00001                                        0228
         LA    @01,@AL00001                                        0228
         BAL   @14,EDITFIX                                         0228
*   UDATE2(1:2)=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   UDATE2(2),FIXOUT+11                                 0229
*   CALL EDITFIX(ADDR(HLDEDAY),2,'N');/*                     @Y30LB40*/
         MVC   @AL00001+4(8),@AL00230                              0230
         LA    @06,HLDEDAY                                         0230
         ST    @06,@AFTEMPS+20                                     0230
         LA    @06,@AFTEMPS+20                                     0230
         ST    @06,@AL00001                                        0230
         LA    @01,@AL00001                                        0230
         BAL   @14,EDITFIX                                         0230
*   UDATE2(3:5)=FIXOUT(11:13);      /*                       @Y30LB40*/
         MVC   UDATE2+2(3),FIXOUT+10                               0231
*   DAYS=HLDSTIME;                  /*                       @Y30LB40*/
         L     @06,HLDSTIME                                        0232
         ST    @06,DAYS                                            0232
*   CALL CONVERTM;                  /*                       @Y30LB40*/
         BAL   @14,CONVERTM                                        0233
*   CALL EDITFIX(ADDR(HOUR),2,'N'); /*                       @Y30LB40*/
         MVC   @AL00001+4(8),@AL00234                              0234
         LA    @06,HOUR                                            0234
         ST    @06,@AFTEMPS+20                                     0234
         LA    @06,@AFTEMPS+20                                     0234
         ST    @06,@AL00001                                        0234
         LA    @01,@AL00001                                        0234
         BAL   @14,EDITFIX                                         0234
*   UTIME1(1:2)=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   UTIME1(2),FIXOUT+11                                 0235
*   CALL EDITFIX(ADDR(MINUTE),2,'N');/*                      @Y30LB40*/
         MVC   @AL00001+4(8),@AL00236                              0236
         LA    @06,MINUTE                                          0236
         ST    @06,@AFTEMPS+20                                     0236
         LA    @06,@AFTEMPS+20                                     0236
         ST    @06,@AL00001                                        0236
         LA    @01,@AL00001                                        0236
         BAL   @14,EDITFIX                                         0236
*   UTIME1(3:4)=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   UTIME1+2(2),FIXOUT+11                               0237
*   DAYS=HLDETIME;                  /*                       @Y30LB40*/
         L     @06,HLDETIME                                        0238
         ST    @06,DAYS                                            0238
*   CALL CONVERTM;                  /*                       @Y30LB40*/
         BAL   @14,CONVERTM                                        0239
*   CALL EDITFIX(ADDR(HOUR),2,'N'); /*                       @Y30LB40*/
         MVC   @AL00001+4(8),@AL00240                              0240
         LA    @06,HOUR                                            0240
         ST    @06,@AFTEMPS+20                                     0240
         LA    @06,@AFTEMPS+20                                     0240
         ST    @06,@AL00001                                        0240
         LA    @01,@AL00001                                        0240
         BAL   @14,EDITFIX                                         0240
*   UTIME2(1:2)=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   UTIME2(2),FIXOUT+11                                 0241
*   CALL EDITFIX(ADDR(MINUTE),2,'N');/*                      @Y30LB40*/
         MVC   @AL00001+4(8),@AL00242                              0242
         LA    @06,MINUTE                                          0242
         ST    @06,@AFTEMPS+20                                     0242
         LA    @06,@AFTEMPS+20                                     0242
         ST    @06,@AL00001                                        0242
         LA    @01,@AL00001                                        0242
         BAL   @14,EDITFIX                                         0242
*   UTIME2(3:4)=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   UTIME2+2(2),FIXOUT+11                               0243
*   CALL EDITFIX(ADDR(RCDCOUNT),4,'S');/*                    @Y30LB40*/
         MVC   @AL00001+4(8),@AL00244                              0244
         LA    @06,RCDCOUNT                                        0244
         ST    @06,@AFTEMPS+20                                     0244
         LA    @06,@AFTEMPS+20                                     0244
         ST    @06,@AL00001                                        0244
         LA    @01,@AL00001                                        0244
         BAL   @14,EDITFIX                                         0244
*   INCNT=FIXOUT(8:13);             /*                       @Y30LB40*/
         MVC   INCNT(6),FIXOUT+7                                   0245
*   CALL EDITFIX(ADDR(OUTCOUNT),4,'S');/*                    @Y30LB40*/
         MVC   @AL00001+4(8),@AL00246                              0246
         LA    @06,OUTCOUNT                                        0246
         ST    @06,@AFTEMPS+20                                     0246
         LA    @06,@AFTEMPS+20                                     0246
         ST    @06,@AL00001                                        0246
         LA    @01,@AL00001                                        0246
         BAL   @14,EDITFIX                                         0246
*   OUTCNT=FIXOUT(8:13);            /*                       @Y30LB40*/
         MVC   OUTCNT(6),FIXOUT+7                                  0247
*   IF SDGSELSW='1'B                /*                       @ZA13497*/
*     THEN                          /*                       @ZA13497*/
         TM    SDGSELSW,B'10000000'                                0248
         BNO   @RF00248                                            0248
*     SELECTID=SDGSAVE;             /*                       @ZA13497*/
         MVC   SELECTID(6),SDGSAVE                                 0249
*   ELSE                            /*                       @ZA13497*/
*     IF VOLSELSW='1'B              /*                       @ZA13497*/
*       THEN                        /*                       @ZA13497*/
         B     @RC00248                                            0250
@RF00248 TM    VOLSELSW,B'10000000'                                0250
         BNO   @RF00250                                            0250
*       DO;                         /*                       @ZA13497*/
*         SELECTID='******';        /*                       @ZA13497*/
         MVC   SELECTID(6),@CC01086                                0252
*         SELECTID(1:1+LENVOLID)=HOLDVOL;/*                  @ZA13497*/
         LH    @06,LENVOLID                                        0253
         EX    @06,@SM01280                                        0253
*       END;                        /*                       @ZA13497*/
*     ELSE                          /*                       @ZA13497*/
*       SELECTID='NONE  ';          /*                       @ZA13497*/
         B     @RC00250                                            0255
@RF00250 MVC   SELECTID(6),@CC01087                                0255
*   RFY                                                            0256
*    (R0,                                                          0256
*     R1,                                                          0256
*     R14,                                                         0256
*     R15) RSTD;                    /*                       @Y30LB40*/
@RC00250 DS    0H                                                  0256
@RC00248 DS    0H                                                  0257
*   GEN(PUT   PRNTDCB,DTLCOUNT);    /*                       @Y30LB40*/
         PUT   PRNTDCB,DTLCOUNT
*   GEN(PUT   PRNTDCB,DATEHDR2);    /*                       @Y30LB40*/
         PUT   PRNTDCB,DATEHDR2
*   RFY                                                            0259
*    (R0,                                                          0259
*     R1,                                                          0259
*     R14,                                                         0259
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   LINECNT=LINECNT+5;              /*                       @Y30LB40*/
         AL    LINECNT,@CF00376                                    0260
*   DO I=1 TO 750;                  /* LOOP THROUGH ARRAY    @OZ11013*/
         LA    I,1                                                 0261
@DL00261 DS    0H                                                  0262
*     IF DATECNT(I)^=0              /* PRINT NON 0 BUCKETS   @OZ09557*/
*       THEN                                                       0262
         LR    @15,I                                               0262
         SLA   @15,4                                               0262
         L     @14,DATECNT-16(@15)                                 0262
         LTR   @14,@14                                             0262
         BZ    @RF00262                                            0262
*       DO;                         /*                       @Y30LB40*/
*         DATELINE=' ';             /*                       @Y30LB40*/
         MVI   DATELINE+1,C' '                                     0264
         MVC   DATELINE+2(119),DATELINE+1                          0264
         MVI   DATELINE,C' '                                       0264
*         CALL EDITFIX(ADDR(DATECNT(I)),4,'S');/*            @OZ09557*/
         MVC   @AL00001+4(8),@AL00265                              0265
         LA    @15,DATECNT-16(@15)                                 0265
         ST    @15,@AFTEMPS+20                                     0265
         LA    @15,@AFTEMPS+20                                     0265
         ST    @15,@AL00001                                        0265
         LA    @01,@AL00001                                        0265
         BAL   @14,EDITFIX                                         0265
*         DLF18=FIXOUT(8:13);       /*                       @Y30LB40*/
         MVC   DLF18(6),FIXOUT+7                                   0266
*         CALL EDITFIX(ADDR(STOREJUL(I)),2,'N');/*           @OZ09557*/
         MVC   @AL00001+4(8),@AL00267                              0267
         LR    @15,I                                               0267
         SLA   @15,4                                               0267
         LA    @15,STOREJUL-16(@15)                                0267
         ST    @15,@AFTEMPS+20                                     0267
         LA    @15,@AFTEMPS+20                                     0267
         ST    @15,@AL00001                                        0267
         LA    @01,@AL00001                                        0267
         BAL   @14,EDITFIX                                         0267
*         DLF10A=FIXOUT(11:13);     /*                       @Y30LB40*/
         MVC   DLF10A(3),FIXOUT+10                                 0268
*         CALL EDITFIX(ADDR(STOREYR(I)),2,'N');/*            @OZ09557*/
         MVC   @AL00001+4(8),@AL00269                              0269
         LR    @15,I                                               0269
         SLA   @15,4                                               0269
         LA    @15,STOREYR-16(@15)                                 0269
         ST    @15,@AFTEMPS+20                                     0269
         LA    @15,@AFTEMPS+20                                     0269
         ST    @15,@AL00001                                        0269
         LA    @01,@AL00001                                        0269
         BAL   @14,EDITFIX                                         0269
*         DLF10=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   DLF10(2),FIXOUT+11                                  0270
*         DAYS=STORETIM(I);         /*                       @OZ09557*/
         LR    @15,I                                               0271
         SLA   @15,4                                               0271
         L     @15,STORETIM-16(@15)                                0271
         ST    @15,DAYS                                            0271
*         CALL CONVERTM;            /*                       @Y30LB40*/
         BAL   @14,CONVERTM                                        0272
*         CALL EDITFIX(ADDR(HOUR),2,'N');/*                  @Y30LB40*/
         MVC   @AL00001+4(8),@AL00273                              0273
         LA    @15,HOUR                                            0273
         ST    @15,@AFTEMPS+20                                     0273
         LA    @15,@AFTEMPS+20                                     0273
         ST    @15,@AL00001                                        0273
         LA    @01,@AL00001                                        0273
         BAL   @14,EDITFIX                                         0273
*         DLF12=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   DLF12(2),FIXOUT+11                                  0274
*         CALL EDITFIX(ADDR(MINUTE),2,'N');/*                @Y30LB40*/
         MVC   @AL00001+4(8),@AL00275                              0275
         LA    @15,MINUTE                                          0275
         ST    @15,@AFTEMPS+20                                     0275
         LA    @15,@AFTEMPS+20                                     0275
         ST    @15,@AL00001                                        0275
         LA    @01,@AL00001                                        0275
         BAL   @14,EDITFIX                                         0275
*         DLF14=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   DLF14(2),FIXOUT+11                                  0276
*         CALL EDITFIX(ADDR(SECOND),2,'N');/*                @Y30LB40*/
         MVC   @AL00001+4(8),@AL00277                              0277
         LA    @15,SECOND                                          0277
         ST    @15,@AFTEMPS+20                                     0277
         LA    @15,@AFTEMPS+20                                     0277
         ST    @15,@AL00001                                        0277
         LA    @01,@AL00001                                        0277
         BAL   @14,EDITFIX                                         0277
*         DLF16=FIXOUT(12:13);      /*                       @Y30LB40*/
         MVC   DLF16(2),FIXOUT+11                                  0278
*         DAYS=STOREDSM(I)/86400;   /* CALCULATE MSC DAY     @OZ09557*/
         LR    @15,I                                               0279
         SLA   @15,4                                               0279
         L     @00,STOREDSM-16(@15)                                0279
         SRDA  @00,32                                              0279
         D     @00,@CF01088                                        0279
         ST    @01,DAYS                                            0279
*         CALL EDITFIX(ADDR(DAYS),4,'S');/*                  @Y30LB40*/
         MVC   @AL00001+4(8),@AL00280                              0280
         LA    @15,DAYS                                            0280
         ST    @15,@AFTEMPS+20                                     0280
         LA    @15,@AFTEMPS+20                                     0280
         ST    @15,@AL00001                                        0280
         LA    @01,@AL00001                                        0280
         BAL   @14,EDITFIX                                         0280
*         DLF2=FIXOUT(12:13);       /*                       @Y30LB40*/
         MVC   DLF2(2),FIXOUT+11                                   0281
*         DAYS=STOREDSM(I)-(DAYS*86400);/* SET UP TIME       @OZ09557*/
         LR    @15,I                                               0282
         SLA   @15,4                                               0282
         L     @01,DAYS                                            0282
         M     @00,@CF01088                                        0282
         LCR   @01,@01                                             0282
         AL    @01,STOREDSM-16(@15)                                0282
         ST    @01,DAYS                                            0282
*         CALL CONVERTM;            /*                       @Y30LB40*/
         BAL   @14,CONVERTM                                        0283
*         CALL EDITFIX(ADDR(HOUR),2,'N');/*                  @Y30LB40*/
         MVC   @AL00001+4(8),@AL00284                              0284
         LA    @15,HOUR                                            0284
         ST    @15,@AFTEMPS+20                                     0284
         LA    @15,@AFTEMPS+20                                     0284
         ST    @15,@AL00001                                        0284
         LA    @01,@AL00001                                        0284
         BAL   @14,EDITFIX                                         0284
*         DLF4=FIXOUT(12:13);       /*                       @Y30LB40*/
         MVC   DLF4(2),FIXOUT+11                                   0285
*         CALL EDITFIX(ADDR(MINUTE),2,'N');/*                @Y30LB40*/
         MVC   @AL00001+4(8),@AL00286                              0286
         LA    @15,MINUTE                                          0286
         ST    @15,@AFTEMPS+20                                     0286
         LA    @15,@AFTEMPS+20                                     0286
         ST    @15,@AL00001                                        0286
         LA    @01,@AL00001                                        0286
         BAL   @14,EDITFIX                                         0286
*         DLF6=FIXOUT(12:13);       /*                       @Y30LB40*/
         MVC   DLF6(2),FIXOUT+11                                   0287
*         CALL EDITFIX(ADDR(SECOND),2,'N');/*                @Y30LB40*/
         MVC   @AL00001+4(8),@AL00288                              0288
         LA    @15,SECOND                                          0288
         ST    @15,@AFTEMPS+20                                     0288
         LA    @15,@AFTEMPS+20                                     0288
         ST    @15,@AL00001                                        0288
         LA    @01,@AL00001                                        0288
         BAL   @14,EDITFIX                                         0288
*         DLF8=FIXOUT(12:13);       /*                       @Y30LB40*/
         MVC   DLF8(2),FIXOUT+11                                   0289
*         RFY                                                      0290
*          (R0,                                                    0290
*           R1,                                                    0290
*           R14,                                                   0290
*           R15) RSTD;              /*                       @Y30LB40*/
*         GEN(PUT   PRNTDCB,DATELINE);/*                     @Y30LB40*/
         PUT   PRNTDCB,DATELINE
*         GEN(PUT   PRNTDCB,ICGTR906);/*                     @ZA25867*/
         PUT   PRNTDCB,ICGTR906
*         RFY                                                      0293
*          (R0,                                                    0293
*           R1,                                                    0293
*           R14,                                                   0293
*           R15) UNRSTD;            /*                       @Y30LB40*/
*         LINECNT=LINECNT+1;        /*                       @Y30LB40*/
         AL    LINECNT,@CF00045                                    0294
*         IF LINECNT>55 THEN                                       0295
         C     LINECNT,@CF01089                                    0295
         BNH   @RF00295                                            0295
*           CALL NEWPAGE;           /*                       @Y30LB40*/
         BAL   @14,NEWPAGE                                         0296
*       END;                        /*                       @Y30LB40*/
@RF00295 DS    0H                                                  0298
*   END;                            /*                       @Y30LB40*/
@RF00262 AL    I,@CF00045                                          0298
         C     I,@CF01035                                          0298
         BNH   @DL00261                                            0298
*CLOSEFIL:                                                         0299
*   IF PARMSW='R'×PARMSW='B' THEN                                  0299
CLOSEFIL CLI   PARMSW,C'R'                                         0299
         BE    @RT00299                                            0299
         CLI   PARMSW,C'B'                                         0299
         BNE   @RF00299                                            0299
@RT00299 DS    0H                                                  0300
*     IF PARMERR='0'B               /* WAS OUTPUT DCB OPENED         */
*       THEN                                                       0300
         TM    PARMERR,B'10000000'                                 0300
         BNZ   @RF00300                                            0300
*       DO;                         /* YES                   @Y30LB40*/
*         RFY                                                      0302
*          (R0,                                                    0302
*           R1,                                                    0302
*           R14,                                                   0302
*           R15) RSTD;              /*                       @Y30LB40*/
*         GEN(CLOSE OUTDCB,MF=(E,OPENCLOS));/* CLOSE OUTPUT DCB      */
         CLOSE OUTDCB,MF=(E,OPENCLOS)
*         RFY                                                      0304
*          (R0,                                                    0304
*           R1,                                                    0304
*           R14,                                                   0304
*           R15) UNRSTD;            /*                       @Y30LB40*/
*       END;                        /*                       @Y30LB40*/
*   RFY                                                            0306
*    (R0,                                                          0306
*     R1,                                                          0306
*     R14,                                                         0306
*     R15) RSTD;                    /*                       @Y30LB40*/
@RF00300 DS    0H                                                  0306
@RF00299 DS    0H                                                  0307
*   GEN(CLOSE INDCB,MF=(E,OPENCLOS));/* CLOSE INPUT DCB      @Y30LB40*/
         CLOSE INDCB,MF=(E,OPENCLOS)
*   GEN(CLOSE PRNTDCB,MF=(E,OPENCLOS));/* CLOSE PRINT DCB    @Y30LB40*/
         CLOSE PRNTDCB,MF=(E,OPENCLOS)
*   RFY                                                            0309
*    (R0,                                                          0309
*     R1,                                                          0309
*     R14,                                                         0309
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   RETURN CODE(RETURNCD);          /* GO TO STEP TERMINATOR @Y30LB40*/
         LH    @07,RETURNCD                                        0310
         L     @13,4(,@13)                                         0310
         L     @00,@SIZDATD                                        0310
         LR    @01,@08                                             0310
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@07                                             0310
         L     @14,12(,@13)                                        0310
         LM    @00,@12,20(@13)                                     0310
         BR    @14                                                 0310
*                                                                  0311
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - INIT                                    @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - INITIALIZE LOCAL VARIABLES                    @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0311
*INIT:                                                             0311
*   PROCEDURE;                      /*                       @OZ05079*/
INIT     STM   @14,@06,12(@13)                                     0311
         STM   @08,@12,52(@13)                                     0311
*   RCDCOUNT=0;                     /* INITIALIZE VARIABLES  @Y30LB40*/
         SLR   @06,@06                                             0312
         ST    @06,RCDCOUNT                                        0312
*   OUTCOUNT=0;                     /*                       @Y30LB40*/
         ST    @06,OUTCOUNT                                        0313
*   DAYS=0;                         /*                       @Y30LB40*/
         ST    @06,DAYS                                            0314
*   RETURNCD=0;                     /*                       @Y30LB40*/
         STH   @06,RETURNCD                                        0315
*   M=0;                            /*                       @Y30LB40*/
         STH   @06,M                                               0316
*   N=0;                            /*                       @OZ11013*/
         STH   @06,N                                               0317
*   HOUR=0;                         /*                       @Y30LB40*/
         STH   @06,HOUR                                            0318
*   MINUTE=0;                       /*                       @Y30LB40*/
         STH   @06,MINUTE                                          0319
*   SECOND=0;                       /*                       @Y30LB40*/
         STH   @06,SECOND                                          0320
*   LINECNT=56;                     /*                       @Y30LB40*/
         LA    LINECNT,56                                          0321
*   OPENCLOS=0;                     /*                       @Y30LB40*/
         ST    @06,OPENCLOS                                        0322
*   LENVOLID=0;                     /*                       @ZA13497*/
         STH   @06,LENVOLID                                        0323
*   OPCLB1='10000000'B;             /*                       @Y30LB40*/
         MVI   OPCLB1,B'10000000'                                  0324
*   PAGECNT=0;                      /*                       @Y30LB40*/
         STH   @06,PAGECNT                                         0325
*   CONVERT=0;                      /*                       @Y30LB40*/
         STH   @06,CONVERT                                         0326
*   HLDSYR=0;                       /*                       @Y30LB40*/
         MVI   HLDSYR,X'00'                                        0327
*   HLDSDAY=1;                      /*                       @Y30LB40*/
         LA    @15,1                                               0328
         STH   @15,HLDSDAY                                         0328
*   HLDSTIME=0;                     /*                       @Y30LB40*/
         ST    @06,HLDSTIME                                        0329
*   HLDEYR=99;                      /*                       @Y30LB40*/
         MVI   HLDEYR,X'63'                                        0330
*   HLDEDAY=365;                    /*                       @Y30LB40*/
         MVC   HLDEDAY(2),@CH01095                                 0331
*   HLDETIME=86399;                 /*                       @Y30LB40*/
         MVC   HLDETIME(4),@CF01096                                0332
*   PARMSW='R';                     /*                       @Y30LB40*/
         MVI   PARMSW,C'R'                                         0333
*   FRSTSW='1'B;                    /*                       @Y30LB40*/
         OI    FRSTSW,B'10000000'                                  0334
*   MINI1SW='1'B;                   /*                       @Y30LB40*/
         OI    MINI1SW,B'10000000'                                 0335
*   SDGSELSW='0'B;                  /*                       @ZA13497*/
         NI    SDGSELSW,B'01111111'                                0336
*   VOLSELSW='0'B;                  /*                       @ZA13497*/
         NI    VOLSELSW,B'01111111'                                0337
*   PARMERR='0'B;                   /*                       @Y30LB40*/
         NI    PARMERR,B'01111111'                                 0338
*   DATEINSW='0'B;                  /*                       @Y30LB40*/
         NI    DATEINSW,B'01111111'                                0339
*   HOSTYEAR=0;                     /*                       @OZ09557*/
         STH   @06,HOSTYEAR                                        0340
*   HOSTJUL=0;                      /*                       @OZ09557*/
         STH   @06,HOSTJUL                                         0341
*   HOSTTME=0;                      /*                       @OZ09557*/
         ST    @06,HOSTTME                                         0342
*   HDRTME=0;                       /*                       @OZ09557*/
         ST    @06,HDRTME                                          0343
*   INCNT1=0;                       /*                       @ZA17158*/
         STH   @06,INCNT1                                          0344
*   IMLSAVE=FOXES;                  /*                       @ZA16141*/
         MVC   IMLSAVE(2),FOXES                                    0345
*   IMLFLAG=0;                      /*                       @ZA25867*/
         MVI   IMLFLAG,X'00'                                       0346
*   DO I=1 TO 750;                  /*                       @OZ09557*/
         LR    I,@15                                               0347
@DL00347 DS    0H                                                  0348
*     STOREYR(I)=0;                 /*                       @OZ09557*/
         SLR   @15,@15                                             0348
         LR    @14,I                                               0348
         SLA   @14,4                                               0348
         STH   @15,STOREYR-16(@14)                                 0348
*     STOREJUL(I)=0;                /*                       @OZ09557*/
         STH   @15,STOREJUL-16(@14)                                0349
*     STORETIM(I)=0;                /*                       @OZ09557*/
         ST    @15,STORETIM-16(@14)                                0350
*     STOREDSM(I)=0;                /*                       @OZ09557*/
         ST    @15,STOREDSM-16(@14)                                0351
*     DATECNT(I)=0;                 /*                       @OZ09557*/
         ST    @15,DATECNT-16(@14)                                 0352
*   END;                            /*                       @Y30LB40*/
         AL    I,@CF00045                                          0353
         C     I,@CF01035                                          0353
         BNH   @DL00347                                            0353
*   END INIT;                       /*                       @OZ05079*/
@EL00002 DS    0H                                                  0354
@EF00002 DS    0H                                                  0354
@ER00002 LM    @14,@06,12(@13)                                     0354
         LM    @08,@12,52(@13)                                     0354
         BR    @14                                                 0354
*                                                                  0355
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - OPENFILE                                @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - SET UP DCBS FOR SYSPRINT, TRACEIN, AND        @OZ05079*/
*/*            TRACEOUT.  IF SYSPRINT CANNOT BE OPENED,      @OZ05079*/
*/*            SET A RETURN CODE OF 4 AND RETURN TO THE      @OZ05079*/
*/*            MAINLINE.  IF TRACEIN CANNOT BE OPENED,       @OZ05079*/
*/*            WRITE MSG 'ICG901I OPEN ERROR FOR TRACEIN',   @OZ05079*/
*/*            SET A RETURN CODE OF 8 AND RETURN TO THE      @OZ05079*/
*/*            MAINLINE.                                     @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0355
*OPENFILE:                                                         0355
*   PROCEDURE;                      /*                       @OZ05079*/
OPENFILE STM   @14,@12,@SA00003                                    0355
*   GEN(MVC   PRNTDCB(PDCBL),PPATDCB);/* SETUP PRINT DCB     @Y30LB40*/
         MVC   PRNTDCB(PDCBL),PPATDCB
*   GEN(MVC   INDCB(IDCBL),IPATDCB);/* SETUP INPUT DCB       @Y30LB40*/
         MVC   INDCB(IDCBL),IPATDCB
*   GEN(MVC   OUTDCB(ODCBL),OPATDCB);/* SETUP OUTPUT DCB     @Y30LB40*/
         MVC   OUTDCB(ODCBL),OPATDCB
*   RFY                                                            0359
*    (R0,                                                          0359
*     R1,                                                          0359
*     R14,                                                         0359
*     R15) RSTD;                    /*                       @Y30LB40*/
*   GEN(OPEN  (PRNTDCB,(OUTPUT)),MF=(E,OPENCLOS));/* OPEN PRINT DCB  */
         OPEN  (PRNTDCB,(OUTPUT)),MF=(E,OPENCLOS)
*   RFY                                                            0361
*    (R0,                                                          0361
*     R1,                                                          0361
*     R14,                                                         0361
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   IF(PRNTDCB(49:49)&'00010000'B)^='00010000'B/* WAS OPEN OK        */
*     THEN                                                         0362
         MVC   @TS00001(1),PRNTDCB+48                              0362
         NI    @TS00001,B'00010000'                                0362
         CLI   @TS00001,B'00010000'                                0362
         BE    @RF00362                                            0362
*     DO;                           /* NO,EXIT WITH                  */
*       RETURNCD=4;                 /* RC=4                  @OZ05079*/
         MVC   RETURNCD(2),@CH00104                                0364
*       RETURN;                     /* RETURN TO MAINLINE    @OZ05079*/
@EL00003 DS    0H                                                  0365
@EF00003 DS    0H                                                  0365
@ER00003 LM    @14,@12,@SA00003                                    0365
         BR    @14                                                 0365
*     END;                          /*                       @Y30LB40*/
*   RFY                                                            0367
*    (R0,                                                          0367
*     R1,                                                          0367
*     R14,                                                         0367
*     R15) RSTD;                    /*                       @Y30LB40*/
@RF00362 DS    0H                                                  0368
*   GEN(OPEN  (INDCB,(INPUT)),MF=(E,OPENCLOS));/* OPEN INPUT DCB     */
         OPEN  (INDCB,(INPUT)),MF=(E,OPENCLOS)
*   RFY                                                            0369
*    (R0,                                                          0369
*     R1,                                                          0369
*     R14,                                                         0369
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   IF(INDCB(49:49)&'00010000'B)^='00010000'B/* WAS OPEN OK          */
*     THEN                                                         0370
         MVC   @TS00001(1),INDCB+48                                0370
         NI    @TS00001,B'00010000'                                0370
         CLI   @TS00001,B'00010000'                                0370
         BE    @RF00370                                            0370
*     DO;                           /* NO                    @Y30LB40*/
*       BLKLINE=TRINMSG;            /* PRINT ERROR MSG               */
         MVI   BLKLINE+31,C' '                                     0372
         MVC   BLKLINE+32(89),BLKLINE+31                           0372
         MVC   BLKLINE(31),TRINMSG                                 0372
*       RFY                                                        0373
*        (R0,                                                      0373
*         R1,                                                      0373
*         R14,                                                     0373
*         R15) RSTD;                /*                       @Y30LB40*/
*       GEN(PUT   PRNTDCB,BLKLINE); /*                       @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*       RFY                                                        0375
*        (R0,                                                      0375
*         R1,                                                      0375
*         R14,                                                     0375
*         R15) UNRSTD;              /*                       @Y30LB40*/
*       RETURNCD=8;                 /* EXIT WITH RC=8                */
         MVC   RETURNCD(2),@CH00036                                0376
*     END;                          /*                       @Y30LB40*/
*   END OPENFILE;                   /*                       @OZ05079*/
         B     @EL00003                                            0378
*                                                                  0379
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - GETPARMS                                @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - SCAN THE PARAMETERS PASSED IN THE PARM FIELD  @OZ05079*/
*/*            OF THE EXEC STATEMENT FOR VALID PARAMETERS.   @OZ05079*/
*/*            IF AN INVALID PARAMETER IS FOUND, WRITE MSG   @OZ05079*/
*/*            'ICG900I INVALID PARM VALUES, SET A RETURN    @OZ05079*/
*/*            CODE OF 8, AND RETURN TO THE MAINLINE.  IF    @OZ05079*/
*/*            PARAMETERS ARE GOOD, RETURN TO MAINLINE WITH  @OZ05079*/
*/*            RETURN CODE OF ZERO.                          @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0379
*GETPARMS:                                                         0379
*   PROCEDURE;                      /*                       @OZ05079*/
GETPARMS STM   @14,@12,@SA00004                                    0379
*   IF PARMLEN>28                   /* TOO MANY PARMS        @ZA13497*/
*     THEN                                                         0380
         LH    @02,PARMLEN(,PARMPTR)                               0380
         C     @02,@CF00869                                        0380
         BNH   @RF00380                                            0380
*     DO;                           /* YES                   @Y30LB40*/
*       PARMERR='1'B;               /* SET ERROR SWITCH AND GET OUT  */
         OI    PARMERR,B'10000000'                                 0382
*       GO TO PARMEND;              /*                       @Y30LB40*/
         B     PARMEND                                             0383
*     END;                          /*                       @Y30LB40*/
*   PARMHOLD(1:1)=',';              /* SET PARM HOLD TO COMMAS     0385
*                                                            @Y30LB40*/
@RF00380 MVI   PARMHOLD,C','                                       0385
*   MVC(PARMHOLD(2:29),PARMHOLD);   /*                       @ZA13497*/
         MVC   PARMHOLD+1(28),PARMHOLD                             0386
*   SS=1;                           /* SET SUBSTRING VALUE TO 1    0387
*                                                            @Y30LB40*/
         LA    SS,1                                                0387
*   PARMHOLD(1:PARMLEN)=PARMS;      /*                       @Y30LB40*/
         LH    @02,PARMLEN(,PARMPTR)                               0388
         BCTR  @02,0                                               0388
         EX    @02,@SM01283                                        0388
*   IF PARMHOLD(1:1)=','            /* IS OPTION ENTERED     @Y30LB40*/
*     THEN                                                         0389
         CLI   PARMHOLD,C','                                       0389
         BNE   @RF00389                                            0389
*     SS=2;                         /* NO, BUMP POINTER      @Y30LB40*/
         LA    SS,2                                                0390
*   ELSE                                                           0391
*     DO;                           /* YES, CHECK VALUE      @Y30LB40*/
         B     @RC00389                                            0391
@RF00389 DS    0H                                                  0392
*       IF PARMHOLD(1:1)='I'×PARMHOLD(1:1)='R'×PARMHOLD(1:1)='B'/* 0392
*                                      WAS IS I R OR D       @Y30LB40*/
*         THEN                                                     0392
         CLI   PARMHOLD,C'I'                                       0392
         BE    @RT00392                                            0392
         CLI   PARMHOLD,C'R'                                       0392
         BE    @RT00392                                            0392
         CLI   PARMHOLD,C'B'                                       0392
         BNE   @RF00392                                            0392
@RT00392 DS    0H                                                  0393
*         DO;                       /* YES SAVE IT           @Y30LB40*/
*           PARMSW=PARMHOLD(1:1);   /*                       @Y30LB40*/
         MVC   PARMSW(1),PARMHOLD                                  0394
*           SS=3;                   /* SET POINTER TO NEXT VALUE   0395
*                                                            @Y30LB40*/
         LA    SS,3                                                0395
*         END;                      /*                       @Y30LB40*/
*       ELSE                                                       0397
*         DO;                       /* WAS NOT I R OR D      @Y30LB40*/
         B     @RC00392                                            0397
@RF00392 DS    0H                                                  0398
*           PARMERR='1'B;           /* SET ERROR SWITCH AND GET OUT  */
         OI    PARMERR,B'10000000'                                 0398
*           GO TO PARMEND;          /*                       @Y30LB40*/
         B     PARMEND                                             0399
*         END;                      /*                       @Y30LB40*/
*     END;                          /*                       @Y30LB40*/
@RC00392 DS    0H                                                  0402
*   IF PARMHOLD(SS:SS)=','          /* WERE DATES ENTERED    @Y30LB40*/
*     THEN                                                         0402
@RC00389 LA    @03,PARMHOLD-1(SS)                                  0402
         CLI   0(@03),C','                                         0402
         BNE   @RF00402                                            0402
*     SS=SS+1;                      /* NO,BUMP POINTER       @Y30LB40*/
         AL    SS,@CF00045                                         0403
*   ELSE                                                           0404
*     DO;                           /* YES,VALIDATE AND CONVERT THEM
*                                                            @Y30LB40*/
         B     @RC00402                                            0404
@RF00402 DS    0H                                                  0405
*       DO I=SS TO(SS+9);           /* CHECK FOR NUMBERS 0 THRU 9  0405
*                                                            @Y30LB40*/
         LR    I,SS                                                0405
         B     @DE00405                                            0405
@DL00405 DS    0H                                                  0406
*         IF PARMHOLD(I:I)>='0'&PARMHOLD(I:I)<='9' THEN            0406
         LA    @07,PARMHOLD-1(I)                                   0406
         CLI   0(@07),C'0'                                         0406
         BL    @RF00406                                            0406
         LA    @07,PARMHOLD-1(I)                                   0406
         CLI   0(@07),C'9'                                         0406
         BNH   @RT00406                                            0406
*           ;                       /*                       @Y30LB40*/
*         ELSE                                                     0408
*           PARMERR='1'B;           /* NON NUMERIC FOUND     @Y30LB40*/
@RF00406 OI    PARMERR,B'10000000'                                 0408
*       END;                        /*                       @Y30LB40*/
@RT00406 AL    I,@CF00045                                          0409
@DE00405 LA    @07,9                                               0409
         ALR   @07,SS                                              0409
         CR    I,@07                                               0409
         BNH   @DL00405                                            0409
*       IF PARMERR='1'B THEN                                       0410
         TM    PARMERR,B'10000000'                                 0410
         BO    @RT00410                                            0410
*         GO TO PARMEND;            /* IF ERROR FOUND GET OUT        */
*       PACK(DOUBLEWD,PARMHOLD(SS:SS+1));/* NO ERROR,CONVERT DATES   */
         LA    @03,PARMHOLD-1(SS)                                  0412
         PACK  DOUBLEWD(8),0(2,@03)                                0412
*       CVB(HLDSYR,DOUBLEWD);       /*                       @Y30LB40*/
         CVB   @03,DOUBLEWD                                        0413
         STC   @03,HLDSYR                                          0413
*       PACK(DOUBLEWD,PARMHOLD(SS+2:SS+4));/*                @Y30LB40*/
         LA    @03,PARMHOLD+1(SS)                                  0414
         PACK  DOUBLEWD(8),0(3,@03)                                0414
*       CVB(HLDSDAY,DOUBLEWD);      /*                       @Y30LB40*/
         CVB   @03,DOUBLEWD                                        0415
         STH   @03,HLDSDAY                                         0415
*       PACK(DOUBLEWD,PARMHOLD(SS+5:SS+6));/*                @Y30LB40*/
         LA    @01,PARMHOLD+4(SS)                                  0416
         PACK  DOUBLEWD(8),0(2,@01)                                0416
*       CVB(HLDEYR,DOUBLEWD);       /*                       @Y30LB40*/
         CVB   @15,DOUBLEWD                                        0417
         STC   @15,HLDEYR                                          0417
*       PACK(DOUBLEWD,PARMHOLD(SS+7:SS+9));/*                @Y30LB40*/
         LA    @01,PARMHOLD+6(SS)                                  0418
         PACK  DOUBLEWD(8),0(3,@01)                                0418
*       CVB(HLDEDAY,DOUBLEWD);      /*                       @Y30LB40*/
         CVB   @15,DOUBLEWD                                        0419
         STH   @15,HLDEDAY                                         0419
*       IF HLDSDAY>0&HLDSDAY<366    /* IS DATE FROM 001 THRU 365     */
*         THEN                                                     0420
         LTR   @03,@03                                             0420
         BNP   @RF00420                                            0420
         C     @03,@CF01110                                        0420
         BL    @RT00420                                            0420
*         ;                         /* YES DONT CHECK FOR LEAP YEAR  */
*       ELSE                                                       0422
*         DO;                       /*                       @Y30LB40*/
@RF00420 DS    0H                                                  0423
*           IF HLDSDAY=366          /* IS DAY 366            @Y30LB40*/
*             THEN                                                 0423
         CLC   HLDSDAY(2),@CH01110                                 0423
         BNE   @RF00423                                            0423
*             DO;                   /* YES, CHECK FOR LEAP YEAR      */
*               IF(CKSTIME(1:1)&'00000011'B)^='00000000'B THEN     0425
         MVC   @TS00001(1),CKSTIME                                 0425
         NI    @TS00001,B'00000011'                                0425
         CLI   @TS00001,B'00000000'                                0425
         BE    @RF00425                                            0425
*                 PARMERR='1'B;     /* ERROR, NOT LEAP YEAR          */
         OI    PARMERR,B'10000000'                                 0426
*             END;                  /*                       @Y30LB40*/
*           ELSE                                                   0428
*             PARMERR='1'B;         /* ERROR, DAY=000 OR >366        */
         B     @RC00423                                            0428
@RF00423 OI    PARMERR,B'10000000'                                 0428
*         END;                      /*                       @Y30LB40*/
@RC00423 DS    0H                                                  0430
*       IF HLDEDAY>0&HLDEDAY<366    /* SAME CHECKS AS FOR START DATE */
*         THEN                                                     0430
@RT00420 LH    @03,HLDEDAY                                         0430
         LTR   @03,@03                                             0430
         BNP   @RF00430                                            0430
         C     @03,@CF01110                                        0430
         BL    @RT00430                                            0430
*         ;                         /*                       @Y30LB40*/
*       ELSE                                                       0432
*         DO;                       /*                       @Y30LB40*/
@RF00430 DS    0H                                                  0433
*           IF HLDEDAY=366 THEN                                    0433
         CLC   HLDEDAY(2),@CH01110                                 0433
         BNE   @RF00433                                            0433
*             DO;                   /*                       @Y30LB40*/
*               IF(CKETIME(1:1)&'00000011'B)^='00000000'B THEN     0435
         MVC   @TS00001(1),CKETIME                                 0435
         NI    @TS00001,B'00000011'                                0435
         CLI   @TS00001,B'00000000'                                0435
         BE    @RF00435                                            0435
*                 PARMERR='1'B;     /*                       @Y30LB40*/
         OI    PARMERR,B'10000000'                                 0436
*             END;                  /*                       @Y30LB40*/
*           ELSE                                                   0438
*             PARMERR='1'B;         /*                       @Y30LB40*/
         B     @RC00433                                            0438
@RF00433 OI    PARMERR,B'10000000'                                 0438
*         END;                      /*                       @Y30LB40*/
@RC00433 DS    0H                                                  0440
*       IF HLDSYR<=HLDEYR           /* IS START YEAR <= END YEAR   0440
*                                                            @Y30LB40*/
*         THEN                                                     0440
@RT00430 CLC   HLDSYR(1),HLDEYR                                    0440
         BNH   @RT00440                                            0440
*         ;                         /* YES,OK                @Y30LB40*/
*       ELSE                                                       0442
*         PARMERR='1'B;             /* NO,ERROR AND GETOUT   @Y30LB40*/
         OI    PARMERR,B'10000000'                                 0442
*       IF HLDSDAY<=HLDEDAY         /* IS START DAY <= END DAY     0443
*                                                            @Y30LB40*/
*         THEN                                                     0443
@RT00440 LH    @03,HLDSDAY                                         0443
         CH    @03,HLDEDAY                                         0443
         BNH   @RT00443                                            0443
*         ;                         /* YES,OK                @Y30LB40*/
*       ELSE                                                       0445
*         DO;                       /* NO, CHECK FOR DIFFERENT YEARS */
*           IF HLDSYR=HLDEYR THEN                                  0446
         CLC   HLDSYR(1),HLDEYR                                    0446
         BNE   @RF00446                                            0446
*             PARMERR='1'B;         /* ERROR                 @Y30LB40*/
         OI    PARMERR,B'10000000'                                 0447
*         END;                      /*                       @Y30LB40*/
@RF00446 DS    0H                                                  0449
*       IF PARMERR='1'B THEN                                       0449
@RT00443 TM    PARMERR,B'10000000'                                 0449
         BO    @RT00449                                            0449
*         GO TO PARMEND;            /* IF ERRORS FOUND GETOUT        */
*       DATEINSW='1'B;              /* INDICATE VALID DATES ENTERED
*                                                            @Y30LB40*/
         OI    DATEINSW,B'10000000'                                0451
*       SS=SS+11;                   /* BUMP POINTER TO NEXT VALUE  0452
*                                                            @Y30LB40*/
         AL    SS,@CF00033                                         0452
*     END;                          /*                       @Y30LB40*/
*   IF PARMHOLD(SS:SS)=','          /* WERE TIMES ENTERED    @Y30LB40*/
*     THEN                          /*                       @ZA13497*/
@RC00402 LA    @03,PARMHOLD-1(SS)                                  0454
         CLI   0(@03),C','                                         0454
         BNE   @RF00454                                            0454
*     SS=SS+1;                      /*                       @ZA13497*/
         AL    SS,@CF00045                                         0455
*   ELSE                                                           0456
*     DO;                           /* YES,CHECK FOR NUMERICS      0456
*                                                            @Y30LB40*/
         B     @RC00454                                            0456
@RF00454 DS    0H                                                  0457
*       DO I=SS TO(SS+7);           /*                       @Y30LB40*/
         LR    I,SS                                                0457
         B     @DE00457                                            0457
@DL00457 DS    0H                                                  0458
*         IF PARMHOLD(I:I)>='0'&PARMHOLD(I:I)<='9' THEN            0458
         LA    @07,PARMHOLD-1(I)                                   0458
         CLI   0(@07),C'0'                                         0458
         BL    @RF00458                                            0458
         LA    @07,PARMHOLD-1(I)                                   0458
         CLI   0(@07),C'9'                                         0458
         BNH   @RT00458                                            0458
*           ;                       /*                       @Y30LB40*/
*         ELSE                                                     0460
*           PARMERR='1'B;           /* ERROR,NONNUMERIC FOUND      0460
*                                                            @Y30LB40*/
@RF00458 OI    PARMERR,B'10000000'                                 0460
*       END;                        /*                       @Y30LB40*/
@RT00458 AL    I,@CF00045                                          0461
@DE00457 LA    @07,7                                               0461
         ALR   @07,SS                                              0461
         CR    I,@07                                               0461
         BNH   @DL00457                                            0461
*       IF PARMERR='1'B THEN                                       0462
         TM    PARMERR,B'10000000'                                 0462
         BO    @RT00462                                            0462
*         GO TO PARMEND;            /* IF ERROR FOUND GETOUT         */
*       PACK(DOUBLEWD,PARMHOLD(SS:SS+1));/* CONVERT TIMES    @Y30LB40*/
         LA    @01,PARMHOLD-1(SS)                                  0464
         PACK  DOUBLEWD(8),0(2,@01)                                0464
*       CVB(TIMEWORK,DOUBLEWD);     /*                       @Y30LB40*/
         CVB   TIMEWORK,DOUBLEWD                                   0465
*       IF TIMEWORK>23 THEN                                        0466
         C     TIMEWORK,@CF01111                                   0466
         BNH   @RF00466                                            0466
*         PARMERR='1'B;             /* HOUR > 23 = ERROR             */
         OI    PARMERR,B'10000000'                                 0467
*       ELSE                                                       0468
*         HLDSTIME=TIMEWORK*3600;   /*                       @Y30LB40*/
         B     @RC00466                                            0468
@RF00466 LR    @15,TIMEWORK                                        0468
         MH    @15,@CH01112                                        0468
         ST    @15,HLDSTIME                                        0468
*       PACK(DOUBLEWD,PARMHOLD(SS+2:SS+3));/*                @Y30LB40*/
@RC00466 LA    @01,PARMHOLD+1(SS)                                  0469
         PACK  DOUBLEWD(8),0(2,@01)                                0469
*       CVB(TIMEWORK,DOUBLEWD);     /*                       @Y30LB40*/
         CVB   TIMEWORK,DOUBLEWD                                   0470
*       IF TIMEWORK>59 THEN                                        0471
         C     TIMEWORK,@CF01113                                   0471
         BNH   @RF00471                                            0471
*         PARMERR='1'B;             /* MINUTE > 59 = ERROR           */
         OI    PARMERR,B'10000000'                                 0472
*       ELSE                                                       0473
*         HLDSTIME=HLDSTIME+(TIMEWORK*60);/*                 @Y30LB40*/
         B     @RC00471                                            0473
@RF00471 LR    @15,TIMEWORK                                        0473
         MH    @15,@CH00339                                        0473
         AL    @15,HLDSTIME                                        0473
         ST    @15,HLDSTIME                                        0473
*       PACK(DOUBLEWD,PARMHOLD(SS+4:SS+5));/*                @Y30LB40*/
@RC00471 LA    @01,PARMHOLD+3(SS)                                  0474
         PACK  DOUBLEWD(8),0(2,@01)                                0474
*       CVB(TIMEWORK,DOUBLEWD);     /*                       @Y30LB40*/
         CVB   TIMEWORK,DOUBLEWD                                   0475
*       IF TIMEWORK>23 THEN                                        0476
         C     TIMEWORK,@CF01111                                   0476
         BNH   @RF00476                                            0476
*         PARMERR='1'B;             /* HOUR > 23 = ERROR             */
         OI    PARMERR,B'10000000'                                 0477
*       ELSE                                                       0478
*         HLDETIME=TIMEWORK*3600;   /*                       @Y30LB40*/
         B     @RC00476                                            0478
@RF00476 LR    @15,TIMEWORK                                        0478
         MH    @15,@CH01112                                        0478
         ST    @15,HLDETIME                                        0478
*       PACK(DOUBLEWD,PARMHOLD(SS+6:SS+7));/*                @Y30LB40*/
@RC00476 LA    @01,PARMHOLD+5(SS)                                  0479
         PACK  DOUBLEWD(8),0(2,@01)                                0479
*       CVB(TIMEWORK,DOUBLEWD);     /*                       @Y30LB40*/
         CVB   TIMEWORK,DOUBLEWD                                   0480
*       IF TIMEWORK>59 THEN                                        0481
         C     TIMEWORK,@CF01113                                   0481
         BNH   @RF00481                                            0481
*         PARMERR='1'B;             /* MINUTE > 59 = ERROR           */
         OI    PARMERR,B'10000000'                                 0482
*       ELSE                                                       0483
*         HLDETIME=HLDETIME+(TIMEWORK*60)+59;/*              @Y30LB40*/
         B     @RC00481                                            0483
@RF00481 LR    @15,TIMEWORK                                        0483
         MH    @15,@CH00339                                        0483
         AL    @15,HLDETIME                                        0483
         AL    @15,@CF01113                                        0483
         ST    @15,HLDETIME                                        0483
*       IF HLDSYR=HLDEYR&HLDSDAY=HLDEDAY/* CHECK TIMES       @Y30LB40*/
*         THEN                                                     0484
@RC00481 CLC   HLDSYR(1),HLDEYR                                    0484
         BNE   @RF00484                                            0484
         CLC   HLDSDAY(2),HLDEDAY                                  0484
         BNE   @RF00484                                            0484
*         IF HLDSTIME>HLDETIME THEN                                0485
         L     @03,HLDSTIME                                        0485
         C     @03,HLDETIME                                        0485
         BNH   @RF00485                                            0485
*           PARMERR='1'B;           /*                       @Y30LB40*/
         OI    PARMERR,B'10000000'                                 0486
*       IF PARMERR='0'B&DATEINSW='0'B/* IF DATE NOT ENTERED          */
*         THEN                                                     0487
@RF00485 DS    0H                                                  0487
@RF00484 TM    PARMERR,B'10000000'                                 0487
         BNZ   @RF00487                                            0487
         TM    DATEINSW,B'10000000'                                0487
         BNZ   @RF00487                                            0487
*         PARMERR='1'B;             /* ERROR                 @Y30LB40*/
         OI    PARMERR,B'10000000'                                 0488
*       SS=SS+9;                    /*                       @ZA13497*/
@RF00487 AL    SS,@CF00035                                         0489
*     END;                          /*                       @Y30LB40*/
*   IF PARMHOLD(SS:SS)^=','         /*                       @ZA13497*/
*     THEN                          /*                       @ZA13497*/
@RC00454 LA    @03,PARMHOLD-1(SS)                                  0491
         CLI   0(@03),C','                                         0491
         BE    @RF00491                                            0491
*     CALL SELECT;                  /*                       @ZA13497*/
         BAL   @14,SELECT                                          0492
*PARMEND:                                                          0493
*   IF PARMERR='1'B                 /* WERE THERE ANY ERRORS @Y30LB40*/
*     THEN                                                         0493
@RF00491 DS    0H                                                  0493
PARMEND  TM    PARMERR,B'10000000'                                 0493
         BNO   @RF00493                                            0493
*     DO;                           /* YES                   @Y30LB40*/
*       BLKLINE=PARMMSG;            /* PRINT ERROR MESSAGE   @Y30LB40*/
         MVI   BLKLINE+28,C' '                                     0495
         MVC   BLKLINE+29(92),BLKLINE+28                           0495
         MVC   BLKLINE(28),PARMMSG                                 0495
*       RFY                                                        0496
*        (R0,                                                      0496
*         R1,                                                      0496
*         R14,                                                     0496
*         R15) RSTD;                /*                       @Y30LB40*/
*       GEN(PUT   PRNTDCB,BLKLINE); /*                       @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*       RFY                                                        0498
*        (R0,                                                      0498
*         R1,                                                      0498
*         R14,                                                     0498
*         R15) UNRSTD;              /*                       @Y30LB40*/
*       RETURNCD=8;                 /* SET RETURN CODE = 8   @Y30LB40*/
         MVC   RETURNCD(2),@CH00036                                0499
*     END;                          /*                       @Y30LB40*/
*   END GETPARMS;                   /*                       @OZ05079*/
@EL00004 DS    0H                                                  0501
@EF00004 DS    0H                                                  0501
@ER00004 LM    @14,@12,@SA00004                                    0501
         BR    @14                                                 0501
*                                                                  0502
*/********************************************************** @ZA13497*/
*/*                                                          @ZA13497*/
*/* PROCEDURE NAME - SELECT                                  @ZA13497*/
*/*                                                          @ZA13497*/
*/* FUNCTION - CHECK FOR EITHER A VOLID OR A STAGING DRIVE   @ZA13497*/
*/*            GROUP SELECT PARAMETER.  IF THE SELECT        @ZA13497*/
*/*            PARAMETER IS FOR A STAGING DRIVE GROUP, THE   @ZA13497*/
*/*            VALUE IS 'SDGXX', WHERE 'XX' IS A DECIMAL     @ZA13497*/
*/*            NUMBER IN THE RANGE 00-27.  IF THE VALUE IS   @ZA13497*/
*/*            NOT 'SDGXX', IT IS ASSUMED TO BE A 1 TO 6     @ZA13497*/
*/*            CHARACTER VOLID.                              @ZA13497*/
*/*                                                          @ZA13497*/
*/********************************************************** @ZA13497*/
*                                                                  0502
*SELECT:                                                           0502
*   PROCEDURE;                      /*                       @ZA13497*/
SELECT   STM   @14,@12,12(@13)                                     0502
*   IF PARMHOLD(SS:SS+2)='SDG'      /*                       @ZA13497*/
*       &PARMHOLD(SS+5:SS+5)=','    /*                       @ZA13497*/
*     THEN                          /*                       @ZA13497*/
         LA    @03,PARMHOLD-1(SS)                                  0503
         CLC   0(3,@03),@CC01119                                   0503
         BNE   @RF00503                                            0503
         LA    @03,PARMHOLD+4(SS)                                  0503
         CLI   0(@03),C','                                         0503
         BNE   @RF00503                                            0503
*     DO;                           /*                       @ZA13497*/
*                                                                  0504
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @ZA13497*/
*       /* COMPARE THE FOURTH AND FIFTH CHARACTERS           @ZA13497*/
*       /* FOR VALUES IN THE RANGE 00-27 DECIMAL.            @ZA13497*/
*       /* IF MATCH, INDEX VALUE MINUS 1 IS THE              @ZA13497*/
*       /* BINARY EQUIVALENT -- SAVE IT AND RETURN.          @ZA13497*/
*       /* *****************************************         @ZA13497*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0505
*       SDGSAVE=PARMHOLD(SS:SS+4);  /*                       @ZA13497*/
         MVI   SDGSAVE+5,C' '                                      0505
         LA    @03,PARMHOLD-1(SS)                                  0505
         MVC   SDGSAVE(5),0(@03)                                   0505
*       DO SDGINDEX=1 TO 28;        /*                       @ZA13497*/
         LA    SDGINDEX,1                                          0506
@DL00506 DS    0H                                                  0507
*         IF PARMHOLD(SS+3:SS+4)=   /*                       @ZA13497*/
*             SDGLOKUP(SDGINDEX)    /*                       @ZA13497*/
*           THEN                    /*                       @ZA13497*/
         LR    @15,SDGINDEX                                        0507
         ALR   @15,@15                                             0507
         LA    @01,PARMHOLD+2(SS)                                  0507
         LA    @14,SDGLOKUP-2(@15)                                 0507
         CLC   0(2,@01),0(@14)                                     0507
         BNE   @RF00507                                            0507
*           DO;                     /*                       @ZA13497*/
*             HOLDSDG=SDGINDEX-1;   /*                       @ZA13497*/
         LR    @02,SDGINDEX                                        0509
         BCTR  @02,0                                               0509
         STC   @02,HOLDSDG                                         0509
*             SDGSELSW='1'B;        /*                       @ZA13497*/
         OI    SDGSELSW,B'10000000'                                0510
*             RETURN;               /*                       @ZA13497*/
@EL00005 DS    0H                                                  0511
@EF00005 DS    0H                                                  0511
@ER00005 LM    @14,@12,12(@13)                                     0511
         BR    @14                                                 0511
*           END;                    /*                       @ZA13497*/
*       END;                        /*                       @ZA13497*/
@RF00507 AL    SDGINDEX,@CF00045                                   0513
         C     SDGINDEX,@CF00869                                   0513
         BNH   @DL00506                                            0513
*     END;                          /*                       @ZA13497*/
*   VOLSELSW='1'B;                  /*                       @ZA13497*/
@RF00503 OI    VOLSELSW,B'10000000'                                0515
*   HOLDVOL='      ';               /*                       @ZA13497*/
         MVC   HOLDVOL(6),@CC01120                                 0516
*   DO SDGINDEX=0 TO 5;             /*                       @ZA13497*/
         SLR   SDGINDEX,SDGINDEX                                   0517
@DL00517 DS    0H                                                  0518
*     IF PARMHOLD(SS+SDGINDEX:SS+SDGINDEX)^=','/*            @ZA13497*/
*       THEN                        /*                       @ZA13497*/
         LR    @15,SS                                              0518
         ALR   @15,SDGINDEX                                        0518
         LA    @14,PARMHOLD-1(@15)                                 0518
         CLI   0(@14),C','                                         0518
         BE    @RF00518                                            0518
*       DO;                         /*                       @ZA13497*/
*         HOLDVOL(1+SDGINDEX:1+SDGINDEX)=/*                  @ZA13497*/
*             PARMHOLD(SS+SDGINDEX:SS+SDGINDEX);/*           @ZA13497*/
         LA    @01,HOLDVOL(SDGINDEX)                               0520
         LA    @14,PARMHOLD-1(@15)                                 0520
         MVC   0(1,@01),0(@14)                                     0520
*         LENVOLID=SDGINDEX;        /*                       @ZA13497*/
         STH   SDGINDEX,LENVOLID                                   0521
*       END;                        /*                       @ZA13497*/
*   END;                            /*                       @ZA13497*/
@RF00518 AL    SDGINDEX,@CF00045                                   0523
         C     SDGINDEX,@CF00376                                   0523
         BNH   @DL00517                                            0523
*   END SELECT;                     /*                       @ZA13497*/
         B     @EL00005                                            0524
*                                                                  0525
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - OPENOUT                                 @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - IF THE REFORMAT OPTION WAS SPECIFIED (OR      @OZ05079*/
*/*            DEFAULTED), OPEN THE TRACEOUT DATA SET.  IF   @OZ05079*/
*/*            ERROR DURING OPEN, WRITE MESSAGE 'ICG902      @OZ05079*/
*/*            ERROR FOR TRACEOUT', SET A RETURN CODE OF 8,  @OZ05079*/
*/*            AND RETURN TO MAINLINE.                       @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0525
*OPENOUT:                                                          0525
*   PROCEDURE;                      /*                       @OZ05079*/
OPENOUT  STM   @14,@12,@SA00006                                    0525
*   RFY                                                            0526
*    (R0,                                                          0526
*     R1,                                                          0526
*     R14,                                                         0526
*     R15) RSTD;                    /*                       @Y30LB40*/
*   GEN(OPEN  (OUTDCB,(OUTPUT)),MF=(E,OPENCLOS));/*          @Y30LB40*/
         OPEN  (OUTDCB,(OUTPUT)),MF=(E,OPENCLOS)
*   RFY                                                            0528
*    (R0,                                                          0528
*     R1,                                                          0528
*     R14,                                                         0528
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   IF(OUTDCB(49:49)&'00010000'B)^='00010000'B THEN                0529
         MVC   @TS00001(1),OUTDCB+48                               0529
         NI    @TS00001,B'00010000'                                0529
         CLI   @TS00001,B'00010000'                                0529
         BE    @RF00529                                            0529
*     DO;                           /* IF OPEN NOT OK        @Y30LB40*/
*       BLKLINE=TROUTMSG;           /* PRINT ERROR MESSAGE   @Y30LB40*/
         MVI   BLKLINE+32,C' '                                     0531
         MVC   BLKLINE+33(88),BLKLINE+32                           0531
         MVC   BLKLINE(32),TROUTMSG                                0531
*       RFY                                                        0532
*        (R0,                                                      0532
*         R1,                                                      0532
*         R14,                                                     0532
*         R15) RSTD;                /*                       @Y30LB40*/
*       GEN(PUT   PRNTDCB,BLKLINE); /*                       @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*       RFY                                                        0534
*        (R0,                                                      0534
*         R1,                                                      0534
*         R14,                                                     0534
*         R15) UNRSTD;              /*                       @Y30LB40*/
*       RETURNCD=8;                 /* SET RETURN CODE=8     @Y30LB40*/
         MVC   RETURNCD(2),@CH00036                                0535
*     END;                          /*                       @Y30LB40*/
*   END OPENOUT;                    /*                       @OZ05079*/
@EL00006 DS    0H                                                  0537
@EF00006 DS    0H                                                  0537
@ER00006 LM    @14,@12,@SA00006                                    0537
         BR    @14                                                 0537
*                                                                  0538
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME: PROCREC6                                 @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - PROCESS VERIFICATION RECORD 6, THE FIRST      @OZ05079*/
*/*            RECORD OF THE TRACE FILE TO DETERMINE THE     @OZ05079*/
*/*            CONFIGURATION, THAT IS, WHICH SUBSYSTEM UNITS @OZ05079*/
*/*            ARE VALID (V), ONLINE (O), AND READY (R).     @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0538
*PROCREC6:                                                         0538
*   PROCEDURE;                      /*                       @OZ05079*/
PROCREC6 STM   @14,@06,@SA00007                                    0538
         STM   @08,@12,@SA00007+36                                 0538
*   IMLSAVE=IMLCNT;                 /* SAVE IML COUNT OF HEADER    0539
*                                                            @ZA16141*/
         MVC   IMLSAVE(2),IMLCNT                                   0539
*   M=M+N+1;                        /* BUMP ARRAY COUNTER    @OZ11013*/
         LH    @15,M                                               0540
         AH    @15,N                                               0540
         AL    @15,@CF00045                                        0540
         STH   @15,M                                               0540
*   N=0;                            /* RESET SAME DAY CHECKER      0541
*                                                            @OZ09557*/
         SLR   @14,@14                                             0541
         STH   @14,N                                               0541
*   IF M>750                        /* MAX COUNTERS = 750    @OZ09557*/
*     THEN                          /*                       @OZ09557*/
         LA    @14,750                                             0542
         CR    @15,@14                                             0542
         BNH   @RF00542                                            0542
*     M=750;                        /* DO NOT EXCEED         @OZ09557*/
         STH   @14,M                                               0543
*   CALL GENCONFG;                  /* DRC/DRD TRANSLATE     @OZ05079*/
@RF00542 BAL   @14,GENCONFG                                        0544
*   FRSTSW='0'B;                    /* 1ST HEADER SWITCH OFF @OZ09557*/
         NI    FRSTSW,B'01111111'                                  0545
*   DATEWORK=HOSTDATE;              /*                       @Y30LB40*/
         MVC   DATEWORK(4),HOSTDATE                                0546
*   CVB(HOSTJUL,DATEWORK(3:4));     /* HOST DATE TO BINARY   @OZ09557*/
         XC    @TS00001(8),@TS00001                                0547
         MVC   @TS00001+6(2),DATEWORK+2                            0547
         CVB   @06,@TS00001                                        0547
         STH   @06,HOSTJUL                                         0547
*   MVO(DATEWORK,DATEWORK(1:2));    /*                       @Y30LB40*/
         MVO   DATEWORK(4),DATEWORK(2)                             0548
*   CVB(HOSTYEAR,DATEWORK(3:4));    /*                       @OZ09557*/
         XC    @TS00001(8),@TS00001                                0549
         MVC   @TS00001+6(2),DATEWORK+2                            0549
         CVB   @06,@TS00001                                        0549
         STH   @06,HOSTYEAR                                        0549
*   HOSTTIME=HOSTTIME/100;          /* HOST TIME TO SECONDS  @OZ09557*/
         L     @00,HOSTTIME                                        0550
         SRDA  @00,32                                              0550
         D     @00,@CF01050                                        0550
         ST    @01,HOSTTIME                                        0550
*   HOSTTME=HOSTTIME;               /*                       @OZ09557*/
         ST    @01,HOSTTME                                         0551
*   SRL(DSMTIME,8);                 /* CONVERT DSM TIME TO SECONDS 0552
*                                                            @Y30LB40*/
         L     @06,DSMTIME                                         0552
         SRL   @06,8                                               0552
         ST    @06,DSMTIME                                         0552
*   DSMTIME=DSMTIME/4;              /*                       @Y30LB40*/
         L     @06,DSMTIME                                         0553
         SRL   @06,2                                               0553
         ST    @06,DSMTIME                                         0553
*   HDRTME=DSMTIME;                 /*                       @OZ09557*/
         ST    @06,HDRTME                                          0554
*   CALL NEWPAGE;                   /* FORCE NEW PAGE        @Y30LB40*/
         BAL   @14,NEWPAGE                                         0555
*   BLKLINE=HDLINE;                 /*                       @Y30LB40*/
         MVC   BLKLINE(121),HDLINE                                 0556
*   UNPK(BLKLINE(29:33),HOSTDATE(2:4));/*                    @Y30LB40*/
         UNPK  BLKLINE+28(5),HOSTDATE+1(3)                         0557
*   CALL EDITFIX(ADDR(HOSTTIME),4,'S');/*                    @Y30LB40*/
         MVC   @AL00001+4(8),@AL00558                              0558
         LA    @06,HOSTTIME                                        0558
         ST    @06,@AFTEMPS                                        0558
         LA    @06,@AFTEMPS                                        0558
         ST    @06,@AL00001                                        0558
         LA    @01,@AL00001                                        0558
         BAL   @14,EDITFIX                                         0558
*   BLKLINE(54:58)=FIXOUT(9:13);    /* PRINT HOST TIME       @Y30LB40*/
         MVC   BLKLINE+53(5),FIXOUT+8                              0559
*   CALL EDITFIX(ADDR(DSMTIME),4,'S');/*                     @Y30LB40*/
         MVC   @AL00001+4(8),@AL00560                              0560
         LA    @06,DSMTIME                                         0560
         ST    @06,@AFTEMPS                                        0560
         LA    @06,@AFTEMPS                                        0560
         ST    @06,@AL00001                                        0560
         LA    @01,@AL00001                                        0560
         BAL   @14,EDITFIX                                         0560
*   BLKLINE(83:90)=FIXOUT(6:13);    /* PRINT DSM TIME        @Y30LB40*/
         MVC   BLKLINE+82(8),FIXOUT+5                              0561
*   RFY                                                            0562
*    (R0,                                                          0562
*     R1,                                                          0562
*     R14,                                                         0562
*     R15) RSTD;                    /*                       @Y30LB40*/
*   GEN(PUT   PRNTDCB,BLKLINE);     /* PRINT TRACE HEADER    @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*   RFY                                                            0564
*    (R0,                                                          0564
*     R1,                                                          0564
*     R14,                                                         0564
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   LINECNT=LINECNT+2;              /*                       @Y30LB40*/
         AL    LINECNT,@CF00052                                    0565
*   BLKLINE='0';                    /* CLEAR PRINT LINE      @Y30LB40*/
         MVI   BLKLINE+1,C' '                                      0566
         MVC   BLKLINE+2(119),BLKLINE+1                            0566
         MVI   BLKLINE,C'0'                                        0566
*   LINECNT=LINECNT+1;              /* BUMP LINECOUNTER      @Y30LB40*/
         LA    @15,1                                               0567
         ALR   LINECNT,@15                                         0567
*                                                                  0568
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - (SUBSECTION WITHIN) PROCREC6            @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - THIS SUBSECTION PRODUCES INFORMATION ON THE   @OZ05079*/
*/*            STATUS OF DATA RECORDING DEVICES.             @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0568
*   I=51;                           /* SET SUBSTRING POINTER         */
         LA    I,51                                                0568
*   BLKLINE(17:42)='DATA RECORDING DEVICES';/* SET PRINT CONSTANT    */
         MVI   BLKLINE+38,C' '                                     0569
         MVC   BLKLINE+39(3),BLKLINE+38                            0569
         MVC   BLKLINE+16(22),@CC01136                             0569
*   FOUNDSW='0'B;                   /* INIT 1 VALID FOUND INDICATOR  */
         NI    FOUNDSW,B'01111111'                                 0570
*   DO J=1 TO 4;                    /* LOOP THROUGH 4 LIBRARIES      */
         STH   @15,J                                               0571
@DL00571 DS    0H                                                  0572
*     STATMASK='10000000'B;         /* SET TEST MASK         @Y30LB40*/
         MVI   STATMASK,B'10000000'                                0572
*     DO K=1 TO 8;                  /* LOOP THROUGH 8 READ WRITES    */
         LA    @15,1                                               0573
         STH   @15,K                                               0573
@DL00573 DS    0H                                                  0574
*       IF(VRW(J)&STATMASK)=STATMASK/* IS RW VALID           @Y30LB40*/
*         THEN                                                     0574
         LH    @15,J                                               0574
         LA    @14,VRW-1(@15)                                      0574
         MVC   @TS00001(1),0(@14)                                  0574
         NC    @TS00001(1),STATMASK                                0574
         CLC   @TS00001(1),STATMASK                                0574
         BNE   @RF00574                                            0574
*         DO;                       /* YES                   @Y30LB40*/
*           FOUNDSW='1'B;           /* INDICATE VALID FOUND          */
         OI    FOUNDSW,B'10000000'                                 0576
*           BLKLINE(I:I+4)='200-V'; /* SET SSID FORMAT       @Y30LB40*/
         LA    @01,BLKLINE-1(I)                                    0577
         MVC   0(5,@01),@CC01138                                   0577
*           WORK1=J-1;              /* GET LIBRARY NUMBER    @Y30LB40*/
         BCTR  @15,0                                               0578
         STC   @15,WORK1                                           0578
*           CALL EDITFIX(ADDR(WORK1),1,'N');/* EDIT IT       @Y30LB40*/
         MVC   @AL00001+4(8),@AL00579                              0579
         LA    @15,WORK1                                           0579
         ST    @15,@AFTEMPS                                        0579
         LA    @15,@AFTEMPS                                        0579
         ST    @15,@AL00001                                        0579
         LA    @01,@AL00001                                        0579
         BAL   @14,EDITFIX                                         0579
*           BLKLINE(I+1:I+1)=FIXOUT(13:13);/* PRINT IT       @Y30LB40*/
         LA    @01,BLKLINE(I)                                      0580
         MVC   0(1,@01),FIXOUT+12                                  0580
*           WORK1=K-1;              /* GET READ WRITE NUMBER         */
         LH    @15,K                                               0581
         BCTR  @15,0                                               0581
         STC   @15,WORK1                                           0581
*           CALL EDITFIX(ADDR(WORK1),1,'N');/* EDIT IT       @Y30LB40*/
         MVC   @AL00001+4(8),@AL00582                              0582
         LA    @15,WORK1                                           0582
         ST    @15,@AFTEMPS                                        0582
         LA    @15,@AFTEMPS                                        0582
         ST    @15,@AL00001                                        0582
         LA    @01,@AL00001                                        0582
         BAL   @14,EDITFIX                                         0582
*           BLKLINE(I+2:I+2)=FIXOUT(13:13);/* PRINT IT       @Y30LB40*/
         LA    @01,BLKLINE+1(I)                                    0583
         MVC   0(1,@01),FIXOUT+12                                  0583
*           IF(ORW(J)&STATMASK)=STATMASK/* IS RW ONLINE              */
*             THEN                                                 0584
         LH    @01,J                                               0584
         LA    @15,ORW-1(@01)                                      0584
         MVC   @TS00001(1),0(@15)                                  0584
         NC    @TS00001(1),STATMASK                                0584
         CLC   @TS00001(1),STATMASK                                0584
         BNE   @RF00584                                            0584
*             BLKLINE(I+5:I+5)='O'; /* YES,INDICATE IT               */
         LA    @01,BLKLINE+4(I)                                    0585
         MVI   0(@01),C'O'                                         0585
*           IF(RRW(J)&STATMASK)=STATMASK/* IS RW READY               */
*             THEN                                                 0586
@RF00584 LH    @01,J                                               0586
         LA    @15,RRW-1(@01)                                      0586
         MVC   @TS00001(1),0(@15)                                  0586
         NC    @TS00001(1),STATMASK                                0586
         CLC   @TS00001(1),STATMASK                                0586
         BNE   @RF00586                                            0586
*             BLKLINE(I+6:I+6)='R'; /* YES,INDICATE IT               */
         LA    @01,BLKLINE+5(I)                                    0587
         MVI   0(@01),C'R'                                         0587
*           I=I+8;                  /* BUMP LINE POINTER     @Y30LB40*/
@RF00586 AL    I,@CF00036                                          0588
*           IF I>121                /* IS LINE FULL          @Y30LB40*/
*             THEN                                                 0589
         C     I,@CF00528                                          0589
         BNH   @RF00589                                            0589
*             DO;                   /* YES,PRINT IT          @Y30LB40*/
*               RFY                                                0591
*                (R0,                                              0591
*                 R1,                                              0591
*                 R14,                                             0591
*                 R15) RSTD;        /*                       @Y30LB40*/
*               GEN(PUT   PRNTDCB,BLKLINE);/*                @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*               RFY                                                0593
*                (R0,                                              0593
*                 R1,                                              0593
*                 R14,                                             0593
*                 R15) UNRSTD;      /*                       @Y30LB40*/
*               LINECNT=LINECNT+1;  /* BUMP LINE COUNTER             */
         AL    LINECNT,@CF00045                                    0594
*               BLKLINE=' ';        /* CLEAR PRINT LINE      @Y30LB40*/
         MVI   BLKLINE+1,C' '                                      0595
         MVC   BLKLINE+2(119),BLKLINE+1                            0595
         MVI   BLKLINE,C' '                                        0595
*               I=51;               /* RESET SUBSTRING POINTER       */
         LA    I,51                                                0596
*             END;                  /*                       @Y30LB40*/
*         END;                      /*                       @Y30LB40*/
@RF00589 DS    0H                                                  0599
*       SRL(STATMASK,1);            /* SHIFT MASK 1 BIT      @Y30LB40*/
@RF00574 SLR   @15,@15                                             0599
         IC    @15,STATMASK                                        0599
         SRL   @15,1                                               0599
         STC   @15,STATMASK                                        0599
*     END;                          /*                       @Y30LB40*/
         LA    @15,1                                               0600
         AH    @15,K                                               0600
         STH   @15,K                                               0600
         C     @15,@CF00036                                        0600
         BNH   @DL00573                                            0600
*   END;                            /*                       @Y30LB40*/
         LA    @15,1                                               0601
         AH    @15,J                                               0601
         STH   @15,J                                               0601
         C     @15,@CF00104                                        0601
         BNH   @DL00571                                            0601
*   CALL HEADPRNT;                  /* PRINT LAST LINE       @OZ05079*/
         BAL   @14,HEADPRNT                                        0602
*                                                                  0603
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - (SUBSECTION WITHIN) PROCREC6            @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - THIS SUBSECTION PRODUCES INFORMATION ON THE   @OZ05079*/
*/*            STATUS OF STAGING ADAPTERS.                   @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0603
*   BLKLINE(17:42)='STAGING ADAPTERS';/* SET PRINT CONSTANT          */
         MVI   BLKLINE+32,C' '                                     0603
         MVC   BLKLINE+33(9),BLKLINE+32                            0603
         MVC   BLKLINE+16(16),@CC01141                             0603
*   FOUNDSW='0'B;                   /* INIT 1 VALID FOUND INDICATOR  */
         NI    FOUNDSW,B'01111111'                                 0604
*   DO J=1 TO 2;                    /* LOOP THROUGH 2 GROUPS OF 8  0605
*                                      DATA STAGERS                  */
         LA    @15,1                                               0605
         STH   @15,J                                               0605
@DL00605 DS    0H                                                  0606
*     STATMASK='10000000'B;         /* SET TEST MASK         @Y30LB40*/
         MVI   STATMASK,B'10000000'                                0606
*     DO K=1 TO 8;                  /* LOOP THROUGH 8 DATA STAGERS   */
         LA    @15,1                                               0607
         STH   @15,K                                               0607
@DL00607 DS    0H                                                  0608
*       IF(VDS(J)&STATMASK)=STATMASK/* IS DS VALID           @Y30LB40*/
*         THEN                                                     0608
         LH    @14,J                                               0608
         LA    @01,VDS-1(@14)                                      0608
         MVC   @TS00001(1),0(@01)                                  0608
         NC    @TS00001(1),STATMASK                                0608
         CLC   @TS00001(1),STATMASK                                0608
         BNE   @RF00608                                            0608
*         DO;                       /* YES                   @Y30LB40*/
*           FOUNDSW='1'B;           /* INDICATE VALID FOUND          */
         OI    FOUNDSW,B'10000000'                                 0610
*           BLKLINE(I:I+4)='800-V'; /* SET SSID FORMAT       @Y30LB40*/
         LA    @01,BLKLINE-1(I)                                    0611
         MVC   0(5,@01),@CC01143                                   0611
*           WORK1=((J-1)*8)+(K-1);  /* GET DS NUMBER         @Y30LB40*/
         BCTR  @14,0                                               0612
         SLA   @14,3                                               0612
         BCTR  @15,0                                               0612
         ALR   @14,@15                                             0612
         STC   @14,WORK1                                           0612
*           CALL EDITHEX(ADDR(WORK1),1);/* EDIT IT           @Y30LB40*/
         LA    @15,WORK1                                           0613
         ST    @15,@AFTEMPS                                        0613
         LA    @15,@AFTEMPS                                        0613
         ST    @15,@AL00001                                        0613
         LA    @15,@CF00045                                        0613
         ST    @15,@AL00001+4                                      0613
         LA    @01,@AL00001                                        0613
         BAL   @14,EDITHEX                                         0613
*           BLKLINE(I+1:I+1)=HEXOUT(2:2);/* PRINT IT         @Y30LB40*/
         LA    @01,BLKLINE(I)                                      0614
         MVC   0(1,@01),HEXOUT+1                                   0614
*           IF(ODS(J)&STATMASK)=STATMASK/* IS DS ONLINE              */
*             THEN                                                 0615
         LH    @01,J                                               0615
         LA    @15,ODS-1(@01)                                      0615
         MVC   @TS00001(1),0(@15)                                  0615
         NC    @TS00001(1),STATMASK                                0615
         CLC   @TS00001(1),STATMASK                                0615
         BNE   @RF00615                                            0615
*             BLKLINE(I+5:I+5)='O'; /* YES,INDICATE IT               */
         LA    @01,BLKLINE+4(I)                                    0616
         MVI   0(@01),C'O'                                         0616
*           IF(RDS(J)&STATMASK)=STATMASK/* IS DS READY               */
*             THEN                                                 0617
@RF00615 LH    @01,J                                               0617
         LA    @15,RDS-1(@01)                                      0617
         MVC   @TS00001(1),0(@15)                                  0617
         NC    @TS00001(1),STATMASK                                0617
         CLC   @TS00001(1),STATMASK                                0617
         BNE   @RF00617                                            0617
*             BLKLINE(I+6:I+6)='R'; /* YES,INDICATE IT               */
         LA    @01,BLKLINE+5(I)                                    0618
         MVI   0(@01),C'R'                                         0618
*           I=I+8;                  /* BUMP LINE POINTER     @Y30LB40*/
@RF00617 AL    I,@CF00036                                          0619
*           IF I>121                /* IS LINE FULL          @Y30LB40*/
*             THEN                                                 0620
         C     I,@CF00528                                          0620
         BNH   @RF00620                                            0620
*             DO;                   /* YES,PRINT IT          @Y30LB40*/
*               RFY                                                0622
*                (R0,                                              0622
*                 R1,                                              0622
*                 R14,                                             0622
*                 R15) RSTD;        /*                       @Y30LB40*/
*               GEN(PUT   PRNTDCB,BLKLINE);/*                @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*               RFY                                                0624
*                (R0,                                              0624
*                 R1,                                              0624
*                 R14,                                             0624
*                 R15) UNRSTD;      /*                       @Y30LB40*/
*               LINECNT=LINECNT+1;  /* BUMP LINE COUNTER             */
         AL    LINECNT,@CF00045                                    0625
*               BLKLINE=' ';        /* CLEAR PRINT LINE      @Y30LB40*/
         MVI   BLKLINE+1,C' '                                      0626
         MVC   BLKLINE+2(119),BLKLINE+1                            0626
         MVI   BLKLINE,C' '                                        0626
*               I=51;               /* RESET SUBSTRING POINTER       */
         LA    I,51                                                0627
*             END;                  /*                       @Y30LB40*/
*         END;                      /*                       @Y30LB40*/
@RF00620 DS    0H                                                  0630
*       SRL(STATMASK,1);            /* SHIFT MASK 1 BIT      @Y30LB40*/
@RF00608 SLR   @15,@15                                             0630
         IC    @15,STATMASK                                        0630
         SRL   @15,1                                               0630
         STC   @15,STATMASK                                        0630
*     END;                          /*                       @Y30LB40*/
         LA    @15,1                                               0631
         AH    @15,K                                               0631
         STH   @15,K                                               0631
         C     @15,@CF00036                                        0631
         BNH   @DL00607                                            0631
*   END;                            /*                       @Y30LB40*/
         LA    @15,1                                               0632
         AH    @15,J                                               0632
         STH   @15,J                                               0632
         C     @15,@CF00052                                        0632
         BNH   @DL00605                                            0632
*   CALL HEADPRNT;                  /* PRINT LAST LINE       @OZ05079*/
         BAL   @14,HEADPRNT                                        0633
*                                                                  0634
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - (SUBSECTION WITHIN) PROCREC6            @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - THIS SUBSECTION PRODUCES INFORMATION ON THE   @OZ05079*/
*/*            STATUS OF DATA RECORDING CONTROLLERS.         @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0634
*   BLKLINE(17:42)='DATA RECORDING CONTROLLERS';/* SET CONSTANT      */
         MVC   BLKLINE+16(26),@CC01145                             0634
*   FOUNDSW='0'B;                   /* INIT 1 VALID FOUND INDICATOR  */
         NI    FOUNDSW,B'01111111'                                 0635
*   DO J=1 TO 2;                    /* LOOP THROUGH 2 GROUPS OF 8  0636
*                                      CONTROLLERS                   */
         LA    @15,1                                               0636
         STH   @15,J                                               0636
@DL00636 DS    0H                                                  0637
*     STATMASK='10000000'B;         /* SET TEST MASK         @Y30LB40*/
         MVI   STATMASK,B'10000000'                                0637
*     DO K=1 TO 8;                  /* LOOP THROUGH 2 GROUPS OF 4  0638
*                                      CONTROLLERS                   */
         LA    @15,1                                               0638
         STH   @15,K                                               0638
@DL00638 DS    0H                                                  0639
*       IF(VRWC(J)&STATMASK)=STATMASK/* IS CONTROLLER VALID          */
*         THEN                                                     0639
         LH    @14,J                                               0639
         LA    @01,VRWC-1(@14)                                     0639
         MVC   @TS00001(1),0(@01)                                  0639
         NC    @TS00001(1),STATMASK                                0639
         CLC   @TS00001(1),STATMASK                                0639
         BNE   @RF00639                                            0639
*         DO;                       /* YES                   @Y30LB40*/
*           FOUNDSW='1'B;           /* INDICATE VALID FOUND          */
         OI    FOUNDSW,B'10000000'                                 0641
*           BLKLINE(I:I+4)='400-V'; /* SET SSID FORMAT       @Y30LB40*/
         LA    @01,BLKLINE-1(I)                                    0642
         MVC   0(5,@01),@CC01148                                   0642
*           IF J=1                  /* IS THIS FIRST GROUP OF 8      */
*             THEN                                                 0643
         C     @14,@CF00045                                        0643
         BNE   @RF00643                                            0643
*             IF K>4                /* YES,IS THIS FIRST GROUP OF 4  */
*               THEN                                               0644
         C     @15,@CF00104                                        0644
         BNH   @RF00644                                            0644
*               WORK1=1;            /* NO,SET LIBRARY 1      @Y30LB40*/
         MVI   WORK1,X'01'                                         0645
*             ELSE                                                 0646
*               WORK1=0;            /* YES,SET LIBRARY 0     @Y30LB40*/
         B     @RC00644                                            0646
@RF00644 MVI   WORK1,X'00'                                         0646
*           ELSE                                                   0647
*             IF K>4                /* NO,IS THIS FIRST GROUP OF 4   */
*               THEN                                               0647
         B     @RC00643                                            0647
@RF00643 LH    @15,K                                               0647
         C     @15,@CF00104                                        0647
         BNH   @RF00647                                            0647
*               WORK1=3;            /* NO,SET LIBRARY 3      @Y30LB40*/
         MVI   WORK1,X'03'                                         0648
*             ELSE                                                 0649
*               WORK1=2;            /* YES,SET LIBRARY 2     @Y30LB40*/
         B     @RC00647                                            0649
@RF00647 MVI   WORK1,X'02'                                         0649
*           CALL EDITFIX(ADDR(WORK1),1,'N');/* EDIT IT       @Y30LB40*/
@RC00647 DS    0H                                                  0650
@RC00643 MVC   @AL00001+4(8),@AL00650                              0650
         LA    @15,WORK1                                           0650
         ST    @15,@AFTEMPS                                        0650
         LA    @15,@AFTEMPS                                        0650
         ST    @15,@AL00001                                        0650
         LA    @01,@AL00001                                        0650
         BAL   @14,EDITFIX                                         0650
*           BLKLINE(I+1:I+1)=FIXOUT(13:13);/* PRINT IT       @Y30LB40*/
         LA    @01,BLKLINE(I)                                      0651
         MVC   0(1,@01),FIXOUT+12                                  0651
*           IF K>4                  /* IS THIS SECOND GROUP OF 4     */
*             THEN                                                 0652
         LH    @15,K                                               0652
         C     @15,@CF00104                                        0652
         BNH   @RF00652                                            0652
*             WORK1=K-5;            /* YES,SET CONTRL NO.    @Y30LB40*/
         SL    @15,@CF00376                                        0653
         STC   @15,WORK1                                           0653
*           ELSE                                                   0654
*             WORK1=K-1;            /* NO,SET CONTRL NO.     @Y30LB40*/
         B     @RC00652                                            0654
@RF00652 LH    @15,K                                               0654
         BCTR  @15,0                                               0654
         STC   @15,WORK1                                           0654
*           CALL EDITFIX(ADDR(WORK1),1,'N');/* EDIT IT       @Y30LB40*/
@RC00652 MVC   @AL00001+4(8),@AL00655                              0655
         LA    @15,WORK1                                           0655
         ST    @15,@AFTEMPS                                        0655
         LA    @15,@AFTEMPS                                        0655
         ST    @15,@AL00001                                        0655
         LA    @01,@AL00001                                        0655
         BAL   @14,EDITFIX                                         0655
*           BLKLINE(I+2:I+2)=FIXOUT(13:13);/* PRINT IT       @Y30LB40*/
         LA    @01,BLKLINE+1(I)                                    0656
         MVC   0(1,@01),FIXOUT+12                                  0656
*           IF(ORWC(J)&STATMASK)=STATMASK/* IS CONTRL ONLINE         */
*             THEN                                                 0657
         LH    @01,J                                               0657
         LA    @15,ORWC-1(@01)                                     0657
         MVC   @TS00001(1),0(@15)                                  0657
         NC    @TS00001(1),STATMASK                                0657
         CLC   @TS00001(1),STATMASK                                0657
         BNE   @RF00657                                            0657
*             BLKLINE(I+5:I+5)='O'; /* YES,INDICATE IT               */
         LA    @01,BLKLINE+4(I)                                    0658
         MVI   0(@01),C'O'                                         0658
*           IF(RRWC(J)&STATMASK)=STATMASK/* IS CONTRL READY          */
*             THEN                                                 0659
@RF00657 LH    @01,J                                               0659
         LA    @15,RRWC-1(@01)                                     0659
         MVC   @TS00001(1),0(@15)                                  0659
         NC    @TS00001(1),STATMASK                                0659
         CLC   @TS00001(1),STATMASK                                0659
         BNE   @RF00659                                            0659
*             BLKLINE(I+6:I+6)='R'; /* YES,INDICATE IT               */
         LA    @01,BLKLINE+5(I)                                    0660
         MVI   0(@01),C'R'                                         0660
*           I=I+8;                  /* BUMP LINE POINTER     @Y30LB40*/
@RF00659 AL    I,@CF00036                                          0661
*           IF I>121                /* IS LINE FULL          @Y30LB40*/
*             THEN                                                 0662
         C     I,@CF00528                                          0662
         BNH   @RF00662                                            0662
*             DO;                   /* YES,PRINT IT          @Y30LB40*/
*               RFY                                                0664
*                (R0,                                              0664
*                 R1,                                              0664
*                 R14,                                             0664
*                 R15) RSTD;        /*                       @Y30LB40*/
*               GEN(PUT   PRNTDCB,BLKLINE);/*                @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*               RFY                                                0666
*                (R0,                                              0666
*                 R1,                                              0666
*                 R14,                                             0666
*                 R15) UNRSTD;      /*                       @Y30LB40*/
*               LINECNT=LINECNT+1;  /* BUMP LINE COUNTER             */
         AL    LINECNT,@CF00045                                    0667
*               BLKLINE=' ';        /* CLEAR PRINT LINE      @Y30LB40*/
         MVI   BLKLINE+1,C' '                                      0668
         MVC   BLKLINE+2(119),BLKLINE+1                            0668
         MVI   BLKLINE,C' '                                        0668
*               I=51;               /* RESET SUBSTRING POINTER       */
         LA    I,51                                                0669
*             END;                  /*                       @Y30LB40*/
*         END;                      /*                       @Y30LB40*/
@RF00662 DS    0H                                                  0672
*       SRL(STATMASK,1);            /* SHIFT MASK 1 BIT      @Y30LB40*/
@RF00639 SLR   @15,@15                                             0672
         IC    @15,STATMASK                                        0672
         SRL   @15,1                                               0672
         STC   @15,STATMASK                                        0672
*     END;                          /*                       @Y30LB40*/
         LA    @15,1                                               0673
         AH    @15,K                                               0673
         STH   @15,K                                               0673
         C     @15,@CF00036                                        0673
         BNH   @DL00638                                            0673
*   END;                            /*                       @Y30LB40*/
         LA    @15,1                                               0674
         AH    @15,J                                               0674
         STH   @15,J                                               0674
         C     @15,@CF00052                                        0674
         BNH   @DL00636                                            0674
*   CALL HEADPRNT;                  /* PRINT LAST LINE       @OZ05079*/
         BAL   @14,HEADPRNT                                        0675
*                                                                  0676
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - (SUBSECTION WITHIN) PROCREC6            @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - THIS SUBSECTION PRODUCES INFORMATION ON THE   @OZ05079*/
*/*            STATUS OF STAGING DRIVES WITHIN STAGING       @OZ05079*/
*/*            DRIVE GROUPS.                                 @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0676
*   DO J=1 TO 30;                   /* LOOP THROUGH 30 RSGS          */
         LA    @06,1                                               0676
         STH   @06,J                                               0676
@DL00676 DS    0H                                                  0677
*     IF VRSG(J)='00000000'B        /* IS SPINDLE GROUP VALID        */
*       THEN                                                       0677
         LA    @01,VRSG-1(@06)                                     0677
         CLI   0(@01),B'00000000'                                  0677
         BE    @RT00677                                            0677
*       ;                           /* NO,SKIP TO NEXT       @Y30LB40*/
*     ELSE                                                         0679
*       DO;                         /* YES,PROCESS IT        @Y30LB40*/
*         FOUNDSW='1'B;             /* INDICATE VALID FOUND          */
         OI    FOUNDSW,B'10000000'                                 0680
*         I=51;                     /* SET SUBSTRING POINTER         */
         LA    I,51                                                0681
*         BLKLINE(17:42)='STAGING DRIVE GROUP XX';/* SET CONSTANT    */
         MVI   BLKLINE+38,C' '                                     0682
         MVC   BLKLINE+39(3),BLKLINE+38                            0682
         MVC   BLKLINE+16(22),@CC01149                             0682
*         WORK1=J-1;                /* GET RSG NUMBER        @Y30LB40*/
         LH    @15,J                                               0683
         BCTR  @15,0                                               0683
         STC   @15,WORK1                                           0683
*         CALL EDITHEX(ADDR(WORK1),1);/* EDIT IT             @Y30LB40*/
         LA    @15,WORK1                                           0684
         ST    @15,@AFTEMPS                                        0684
         LA    @15,@AFTEMPS                                        0684
         ST    @15,@AL00001                                        0684
         LA    @15,@CF00045                                        0684
         ST    @15,@AL00001+4                                      0684
         LA    @01,@AL00001                                        0684
         BAL   @14,EDITHEX                                         0684
*         BLKLINE(37:38)=HEXOUT(1:2);/* PRINT IT             @Y30LB40*/
         MVC   BLKLINE+36(2),HEXOUT                                0685
*         STATMASK='10000000'B;     /* SET TEST MASK         @Y30LB40*/
         MVI   STATMASK,B'10000000'                                0686
*         DO K=1 TO 8;              /* LOOP THROUGH 8 SPINDLES       */
         LA    @15,1                                               0687
         STH   @15,K                                               0687
@DL00687 DS    0H                                                  0688
*           IF(VRSG(J)&STATMASK)=STATMASK/* IS SPINDLE VALID         */
*             THEN                                                 0688
         LH    @14,J                                               0688
         LA    @01,VRSG-1(@14)                                     0688
         MVC   @TS00001(1),0(@01)                                  0688
         NC    @TS00001(1),STATMASK                                0688
         CLC   @TS00001(1),STATMASK                                0688
         BNE   @RF00688                                            0688
*             DO;                   /* YES                   @Y30LB40*/
*               BLKLINE(I:I+4)='000-V';/* SET SSID FORMAT            */
         LA    @01,BLKLINE-1(I)                                    0690
         MVC   0(5,@01),@CC01153                                   0690
*               WORK1=((J-1)*8)+(K-1);/* GET SPINDLE NUMBER          */
         BCTR  @14,0                                               0691
         SLA   @14,3                                               0691
         BCTR  @15,0                                               0691
         ALR   @14,@15                                             0691
         STC   @14,WORK1                                           0691
*               CALL EDITHEX(ADDR(WORK1),1);/* EDIT IT       @Y30LB40*/
         LA    @15,WORK1                                           0692
         ST    @15,@AFTEMPS                                        0692
         LA    @15,@AFTEMPS                                        0692
         ST    @15,@AL00001                                        0692
         LA    @15,@CF00045                                        0692
         ST    @15,@AL00001+4                                      0692
         LA    @01,@AL00001                                        0692
         BAL   @14,EDITHEX                                         0692
*               BLKLINE(I+1:I+2)=HEXOUT(1:2);/* PRINT IT             */
         LA    @01,BLKLINE(I)                                      0693
         MVC   0(2,@01),HEXOUT                                     0693
*               IF(ORSG(J)&STATMASK)=STATMASK/* IS IT ONLINE         */
*                 THEN                                             0694
         LH    @01,J                                               0694
         LA    @15,ORSG-1(@01)                                     0694
         MVC   @TS00001(1),0(@15)                                  0694
         NC    @TS00001(1),STATMASK                                0694
         CLC   @TS00001(1),STATMASK                                0694
         BNE   @RF00694                                            0694
*                 BLKLINE(I+5:I+5)='O';/* YES,INDICATE IT            */
         LA    @01,BLKLINE+4(I)                                    0695
         MVI   0(@01),C'O'                                         0695
*               IF(RRSG(J)&STATMASK)=STATMASK/* IS IT READY          */
*                 THEN                                             0696
@RF00694 LH    @01,J                                               0696
         LA    @15,RRSG-1(@01)                                     0696
         MVC   @TS00001(1),0(@15)                                  0696
         NC    @TS00001(1),STATMASK                                0696
         CLC   @TS00001(1),STATMASK                                0696
         BNE   @RF00696                                            0696
*                 BLKLINE(I+6:I+6)='R';/* YES,INDICATE IT            */
         LA    @01,BLKLINE+5(I)                                    0697
         MVI   0(@01),C'R'                                         0697
*               I=I+8;              /* BUMP LINE POINTER             */
@RF00696 AL    I,@CF00036                                          0698
*             END;                  /*                       @Y30LB40*/
*           SRL(STATMASK,1);        /* SHIFT MASK 1 BIT      @Y30LB40*/
@RF00688 SLR   @15,@15                                             0700
         IC    @15,STATMASK                                        0700
         SRL   @15,1                                               0700
         STC   @15,STATMASK                                        0700
*         END;                      /*                       @Y30LB40*/
         LA    @15,1                                               0701
         AH    @15,K                                               0701
         STH   @15,K                                               0701
         C     @15,@CF00036                                        0701
         BNH   @DL00687                                            0701
*         RFY                                                      0702
*          (R0,                                                    0702
*           R1,                                                    0702
*           R14,                                                   0702
*           R15) RSTD;              /*                       @Y30LB40*/
*         GEN(PUT   PRNTDCB,BLKLINE);/* PRINT LINE           @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*         RFY                                                      0704
*          (R0,                                                    0704
*           R1,                                                    0704
*           R14,                                                   0704
*           R15) UNRSTD;            /*                       @Y30LB40*/
*         LINECNT=LINECNT+1;        /* BUMP LINE COUNTER     @Y30LB40*/
         AL    LINECNT,@CF00045                                    0705
*         BLKLINE=' ';              /* CLEAR PRINT LINE      @Y30LB40*/
         MVI   BLKLINE+1,C' '                                      0706
         MVC   BLKLINE+2(119),BLKLINE+1                            0706
         MVI   BLKLINE,C' '                                        0706
*       END;                        /*                       @Y30LB40*/
*   END;                            /*                       @Y30LB40*/
@RT00677 LA    @06,1                                               0708
         AH    @06,J                                               0708
         STH   @06,J                                               0708
         C     @06,@CF00447                                        0708
         BNH   @DL00676                                            0708
*   IF FOUNDSW='0'B                 /* WERE ANY VALID GROUPS FOUND   */
*     THEN                                                         0709
         TM    FOUNDSW,B'10000000'                                 0709
         BNZ   @RF00709                                            0709
*     DO;                           /* NO                    @Y30LB40*/
*       BLKLINE(17:42)='STAGING DRIVE GROUPS';/* SET CONSTANT        */
         MVI   BLKLINE+36,C' '                                     0711
         MVC   BLKLINE+37(5),BLKLINE+36                            0711
         MVC   BLKLINE+16(20),@CC01154                             0711
*       BLKLINE(51:54)='NONE';      /* INDICATE NONE FOUND   @Y30LB40*/
         MVC   BLKLINE+50(4),@CC01156                              0712
*       RFY                                                        0713
*        (R0,                                                      0713
*         R1,                                                      0713
*         R14,                                                     0713
*         R15) RSTD;                /*                       @Y30LB40*/
*       GEN(PUT   PRNTDCB,BLKLINE); /* PRINT MESSAGE         @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*       RFY                                                        0715
*        (R0,                                                      0715
*         R1,                                                      0715
*         R14,                                                     0715
*         R15) UNRSTD;              /*                       @Y30LB40*/
*       LINECNT=LINECNT+1;          /* BUMP LINE COUNT       @Y30LB40*/
         AL    LINECNT,@CF00045                                    0716
*     END;                          /*                       @Y30LB40*/
*   BLKLINE='0';                    /* CLEAR PRINT LINE      @Y30LB40*/
@RF00709 MVI   BLKLINE+1,C' '                                      0718
         MVC   BLKLINE+2(119),BLKLINE+1                            0718
         MVI   BLKLINE,C'0'                                        0718
*   LINECNT=LINECNT+2;              /* BUMP LINE COUNTER     @Y30LB40*/
         AL    LINECNT,@CF00052                                    0719
*                                                                  0720
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - (SUBSECTION WITHIN) PROCREC6            @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - THIS SUBSECTION PRODUCES INFORMATION ON THE   @OZ05079*/
*/*            STATUS OF THE ACCESSOR CONTROLS WITHIN EACH   @OZ05079*/
*/*            MASS STORAGE FACILITY.                        @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0720
*   I=51;                           /* SET SUBSTRING POINTER         */
         LA    I,51                                                0720
*   BLKLINE(17:36)='ACCESSOR CONTROLS';/* SET CONSTANT       @OZ05079*/
         MVI   BLKLINE+33,C' '                                     0721
         MVC   BLKLINE+34(2),BLKLINE+33                            0721
         MVC   BLKLINE+16(17),@CC01158                             0721
*   IF VL='00000000'B               /* ANY LIBRARIES VALID   @Y30LB40*/
*     THEN                                                         0722
         CLI   VL,B'00000000'                                      0722
         BNE   @RF00722                                            0722
*     DO;                           /* NO                    @Y30LB40*/
*       BLKLINE(51:54)='NONE';      /* INDICATE NONE FOUND   @Y30LB40*/
         MVC   BLKLINE+50(4),@CC01156                              0724
*       RFY                                                        0725
*        (R0,                                                      0725
*         R1,                                                      0725
*         R14,                                                     0725
*         R15) RSTD;                /*                       @Y30LB40*/
*       GEN(PUT   PRNTDCB,BLKLINE); /* PRINT LINE            @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*       RFY                                                        0727
*        (R0,                                                      0727
*         R1,                                                      0727
*         R14,                                                     0727
*         R15) UNRSTD;              /*                       @Y30LB40*/
*     END;                          /*                       @Y30LB40*/
*   ELSE                                                           0729
*     DO;                           /* AT LEAST ONE LIBRARY VALID    */
         B     @RC00722                                            0729
@RF00722 DS    0H                                                  0730
*       DO J=1 TO 4;                /* LOOP THROUGH 4 LIBRARIES      */
         LA    @15,1                                               0730
         STH   @15,J                                               0730
@DL00730 DS    0H                                                  0731
*         WORK1=J-1;                /* CALC LIB NUMBER       @Y30LB40*/
         BCTR  @15,0                                               0731
         STC   @15,WORK1                                           0731
*         CALL EDITFIX(ADDR(WORK1),1,'N');/* EDIT IT         @Y30LB40*/
         MVC   @AL00001+4(8),@AL00732                              0732
         LA    @15,WORK1                                           0732
         ST    @15,@AFTEMPS                                        0732
         LA    @15,@AFTEMPS                                        0732
         ST    @15,@AL00001                                        0732
         LA    @01,@AL00001                                        0732
         BAL   @14,EDITFIX                                         0732
*         IF(VL&'01000000'B)='01000000'B/* IS UC1 VALID              */
*           THEN                                                   0733
         MVC   @TS00001(1),VL                                      0733
         NI    @TS00001,B'01000000'                                0733
         CLI   @TS00001,B'01000000'                                0733
         BNE   @RF00733                                            0733
*           DO;                     /* YES                   @Y30LB40*/
*             BLKLINE(I:I+4)='101-V';/* SET SSID PATTERN             */
         LA    @01,BLKLINE-1(I)                                    0735
         MVC   0(5,@01),@CC01161                                   0735
*             BLKLINE(I+1:I+1)=FIXOUT(13:13);/* PUT IN LIB           */
         LA    @01,BLKLINE(I)                                      0736
         MVC   0(1,@01),FIXOUT+12                                  0736
*             IF(OL&'01000000'B)='01000000'B/* IS UC1 ONLINE         */
*               THEN                                               0737
         MVC   @TS00001(1),OL                                      0737
         NI    @TS00001,B'01000000'                                0737
         CLI   @TS00001,B'01000000'                                0737
         BNE   @RF00737                                            0737
*               BLKLINE(I+5:I+5)='O';/* YES,INDICATE IT              */
         LA    @01,BLKLINE+4(I)                                    0738
         MVI   0(@01),C'O'                                         0738
*             IF(RL&'01000000'B)='01000000'B/* IS UC1 READY          */
*               THEN                                               0739
@RF00737 MVC   @TS00001(1),RL                                      0739
         NI    @TS00001,B'01000000'                                0739
         CLI   @TS00001,B'01000000'                                0739
         BNE   @RF00739                                            0739
*               BLKLINE(I+6:I+6)='R';/* YES,INDICATE IT              */
         LA    @01,BLKLINE+5(I)                                    0740
         MVI   0(@01),C'R'                                         0740
*             I=I+8;                /* BUMP LINE POINTER     @Y30LB40*/
@RF00739 AL    I,@CF00036                                          0741
*           END;                    /*                       @Y30LB40*/
*         IF(VL&'10000000'B)='10000000'B/* IS UC2 VALID              */
*           THEN                                                   0743
@RF00733 MVC   @TS00001(1),VL                                      0743
         NI    @TS00001,B'10000000'                                0743
         CLI   @TS00001,B'10000000'                                0743
         BNE   @RF00743                                            0743
*           DO;                     /* YES                   @Y30LB40*/
*             BLKLINE(I:I+4)='102-V';/* SET SSID PATTERN             */
         LA    @01,BLKLINE-1(I)                                    0745
         MVC   0(5,@01),@CC01162                                   0745
*             BLKLINE(I+1:I+1)=FIXOUT(13:13);/* PUT IN LIB           */
         LA    @01,BLKLINE(I)                                      0746
         MVC   0(1,@01),FIXOUT+12                                  0746
*             IF(OL&'10000000'B)='10000000'B/* IS UC2 ONLINE         */
*               THEN                                               0747
         MVC   @TS00001(1),OL                                      0747
         NI    @TS00001,B'10000000'                                0747
         CLI   @TS00001,B'10000000'                                0747
         BNE   @RF00747                                            0747
*               BLKLINE(I+5:I+5)='O';/* YES,INDICATE IT              */
         LA    @01,BLKLINE+4(I)                                    0748
         MVI   0(@01),C'O'                                         0748
*             IF(RL&'10000000'B)='10000000'B/* IS UC2 READY          */
*               THEN                                               0749
@RF00747 MVC   @TS00001(1),RL                                      0749
         NI    @TS00001,B'10000000'                                0749
         CLI   @TS00001,B'10000000'                                0749
         BNE   @RF00749                                            0749
*               BLKLINE(I+6:I+6)='R';/* YES,INDICATE IT              */
         LA    @01,BLKLINE+5(I)                                    0750
         MVI   0(@01),C'R'                                         0750
*             I=I+8;                /* BUMP LINE POINTER     @Y30LB40*/
@RF00749 AL    I,@CF00036                                          0751
*           END;                    /*                       @Y30LB40*/
*         SLL(VL,2);                /* SHIFT VL 2 BITS       @Y30LB40*/
@RF00743 SLR   @15,@15                                             0753
         IC    @15,VL                                              0753
         SLL   @15,2                                               0753
         STC   @15,VL                                              0753
*         SLL(OL,2);                /* SHIFT OL 2 BITS       @Y30LB40*/
         SLR   @15,@15                                             0754
         IC    @15,OL                                              0754
         SLL   @15,2                                               0754
         STC   @15,OL                                              0754
*         SLL(RL,2);                /* SHIFT RL 2 BITS       @Y30LB40*/
         SLR   @15,@15                                             0755
         IC    @15,RL                                              0755
         SLL   @15,2                                               0755
         STC   @15,RL                                              0755
*       END;                        /*                       @Y30LB40*/
         LA    @15,1                                               0756
         AH    @15,J                                               0756
         STH   @15,J                                               0756
         C     @15,@CF00104                                        0756
         BNH   @DL00730                                            0756
*       RFY                                                        0757
*        (R0,                                                      0757
*         R1,                                                      0757
*         R14,                                                     0757
*         R15) RSTD;                /*                       @Y30LB40*/
*       GEN(PUT   PRNTDCB,BLKLINE); /* PRINT LINE            @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*       RFY                                                        0759
*        (R0,                                                      0759
*         R1,                                                      0759
*         R14,                                                     0759
*         R15) UNRSTD;              /*                       @Y30LB40*/
*     END;                          /*                       @Y30LB40*/
*   END PROCREC6;                   /*                       @OZ05079*/
@EL00007 DS    0H                                                  0761
@EF00007 DS    0H                                                  0761
@ER00007 LM    @14,@06,@SA00007                                    0761
         LM    @08,@12,@SA00007+36                                 0761
         BR    @14                                                 0761
*                                                                  0762
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - HEADPRNT                                @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - PRINT THE LAST (OR ONLY) LINE FOR EACH        @OZ05079*/
*/*            SUBSYSTEM DEVICE TYPE.  IF NO DEVICES WERE    @OZ05079*/
*/*            FOUND TO BE VALID, PRINT 'NONE'.              @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0762
*HEADPRNT:                                                         0762
*   PROCEDURE;                      /*                       @OZ05079*/
HEADPRNT STM   @14,@05,@SA00008                                    0762
         STM   @08,@12,@SA00008+32                                 0762
*   IF I=51                         /* IS POINTER AT START OF LINE   */
*     THEN                                                         0763
         C     I,@CF00484                                          0763
         BNE   @RF00763                                            0763
*     IF FOUNDSW='0'B               /* YES,WERE ANY VALIDS FOUND     */
*       THEN                                                       0764
         TM    FOUNDSW,B'10000000'                                 0764
         BNZ   @RF00764                                            0764
*       DO;                         /* NO VALIDS FOUND       @Y30LB40*/
*         BLKLINE(51:54)='NONE';    /* INDICATE NONE FOUND   @Y30LB40*/
         MVC   BLKLINE+50(4),@CC01156                              0766
*         RFY                                                      0767
*          (R0,                                                    0767
*           R1,                                                    0767
*           R14,                                                   0767
*           R15) RSTD;              /*                       @Y30LB40*/
*         GEN(PUT   PRNTDCB,BLKLINE);/* PRINT LINE           @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*         RFY                                                      0769
*          (R0,                                                    0769
*           R1,                                                    0769
*           R14,                                                   0769
*           R15) UNRSTD;            /*                       @Y30LB40*/
*         LINECNT=LINECNT+1;        /* BUMP LINE COUNTER     @Y30LB40*/
         AL    LINECNT,@CF00045                                    0770
*       END;                        /*                       @Y30LB40*/
*     ELSE                                                         0772
*       ;                           /* VALIDS FOUND,LINE ALREADY   0772
*                                      WRITTEN               @Y30LB40*/
@RF00764 DS    0H                                                  0773
*   ELSE                                                           0773
*     DO;                           /* POINTER NOT 51        @Y30LB40*/
         B     @RC00763                                            0773
@RF00763 DS    0H                                                  0774
*       RFY                                                        0774
*        (R0,                                                      0774
*         R1,                                                      0774
*         R14,                                                     0774
*         R15) RSTD;                /*                       @Y30LB40*/
*       GEN(PUT   PRNTDCB,BLKLINE); /* PRINT LINE            @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*       RFY                                                        0776
*        (R0,                                                      0776
*         R1,                                                      0776
*         R14,                                                     0776
*         R15) UNRSTD;              /*                       @Y30LB40*/
*       LINECNT=LINECNT+1;          /* BUMP LINE COUNTER     @Y30LB40*/
         AL    LINECNT,@CF00045                                    0777
*     END;                          /*                       @Y30LB40*/
*   BLKLINE='0';                    /* CLEAR PRINT LINE      @Y30LB40*/
@RC00763 MVI   BLKLINE+1,C' '                                      0779
         MVC   BLKLINE+2(119),BLKLINE+1                            0779
         MVI   BLKLINE,C'0'                                        0779
*   LINECNT=LINECNT+1;              /* BUMP LINE COUNTER     @Y30LB40*/
         AL    LINECNT,@CF00045                                    0780
*   I=51;                           /* SET SUBSTRING POINTER         */
         LA    I,51                                                0781
*   END HEADPRNT;                   /*                       @OZ05079*/
@EL00008 DS    0H                                                  0782
@EF00008 DS    0H                                                  0782
@ER00008 LM    @14,@05,@SA00008                                    0782
         LM    @08,@12,@SA00008+32                                 0782
         BR    @14                                                 0782
*                                                                  0783
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - REFORMAT                                @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - BUILD REFORMATTED EXTRACT RECORD              @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0783
*REFORMAT:                                                         0783
*   PROCEDURE;                      /*                       @OZ05079*/
REFORMAT STM   @14,@12,@SA00009                                    0783
*   RCDOUT=RCDOUT&&RCDOUT;          /* INIT OUTPUT RECORD TO ZEROS 0784
*                                                            @Y30LB40*/
         XC    RCDOUT(72),RCDOUT                                   0784
*   PTR2=ADDR(FIRSTMIN);            /* SET POINTER TO 1ST MINI HDR   */
         LA    @15,FIRSTMIN                                        0785
         ST    @15,PTR2                                            0785
*   LSTMINAD=ADDR(FIRSTMIN)-ADDR(BLOCKFLG);/* INITIALIZE     @YM31015
*                                      LAST ADDRESS          @YM31015*/
         LA    LSTMINAD,32                                         0786
*   MINI1SW='1'B;                   /* SET FIRST MINI SWITCH @Y30LB40*/
         OI    MINI1SW,B'10000000'                                 0787
*   HIT5TIME=0;                     /* CLEAR HIGH T5 TIME HOLD AREA
*                                                            @Y30LB40*/
         SLR   HIT5TIME,HIT5TIME                                   0788
*MINILOOP:                          /* LOOP THROUGH THE MINI HDRS    */
*   IF FLAG(2:2)='1'B               /* IS THIS A NON DATA MINI HEADER
*                                                            @Y30LB40*/
*       ×T4TIME=0&T5TIME=0          /* IS THIS A NULL MINI   @OZ05079*/
*     THEN                                                         0789
MINILOOP L     @15,PTR2                                            0789
         TM    FLAG(@15),B'01000000'                               0789
         BO    @RT00789                                            0789
         LH    @14,T4TIME(,@15)                                    0789
         N     @14,@CF01285                                        0789
         LTR   @14,@14                                             0789
         BNZ   @RF00789                                            0789
         LH    @15,T5TIME(,@15)                                    0789
         N     @15,@CF01285                                        0789
         LTR   @15,@15                                             0789
         BNZ   @RF00789                                            0789
@RT00789 DS    0H                                                  0790
*     DO;                           /* YES                   @Y30LB40*/
*       IF NXTMINAD^=0              /* IS IT THE LAST MINI   @Y30LB40*/
*         THEN                                                     0791
         L     @15,PTR2                                            0791
         CLI   NXTMINAD(@15),0                                     0791
         BE    @RF00791                                            0791
*         DO;                       /* NO, NOT LAST          @Y30LB40*/
*           IF NXTMINAD<=LSTMINAD   /* SET NEXT POINTER      @YM31015*/
*             THEN                                                 0793
         SLR   @14,@14                                             0793
         IC    @14,NXTMINAD(,@15)                                  0793
         CR    @14,LSTMINAD                                        0793
         BNH   @RT00793                                            0793
*             RETURN;               /* READ ANOTHER RECORD   @OZ05079*/
*           LSTMINAD=NXTMINAD;      /* SET LAST POINTER      @YM31015*/
         LR    LSTMINAD,@14                                        0795
*           PTR2=ADDR(RECIN)+NXTMINAD+8;/* SET               @YM31015
*                                      POINTER               @YM31015*/
         LA    @15,RECIN                                           0796
         ALR   @15,@14                                             0796
         AL    @15,@CF00036                                        0796
         ST    @15,PTR2                                            0796
*           GO TO MINILOOP;         /* PTR OK GO PROCESS NEXT MINI 0797
*                                                            @Y30LB40*/
         B     MINILOOP                                            0797
*         END;                      /*                       @Y30LB40*/
*       ELSE                                                       0799
*         GO TO CKREC;              /* LAST MINI FINISH PROCESS    0799
*                                                            @Y30LB40*/
*     END;                          /*                       @Y30LB40*/
*   IF MINI1SW='1'B                 /* IS THIS THE FIRST DATA MINI 0801
*                                                            @Y30LB40*/
*     THEN                          /* YES,START REFORMATTING WITH 0801
*                                      FIXED DATA                    */
@RF00789 TM    MINI1SW,B'10000000'                                 0801
         BNO   @RF00801                                            0801
*     CALL DOCOMMON;                /* INFO FROM BLOCK HDR   @OZ05079*/
         BAL   @14,DOCOMMON                                        0802
*   ELSE                                                           0803
*     ;                             /*                       @OZ05079*/
@RF00801 DS    0H                                                  0804
*   CALL DOMINIS;                   /* ALWAYS GET MINI       @OZ05079*/
         BAL   @14,DOMINIS                                         0804
*CKREC:                                                            0805
*   IF NXTMINAD=0                   /* IS THIS LAST MINI HEADER    0805
*                                                            @Y30LB40*/
*     THEN                                                         0805
CKREC    L     @01,PTR2                                            0805
         CLI   NXTMINAD(@01),0                                     0805
         BNE   @RF00805                                            0805
*     DO;                           /* CHECK FOR VALID OUTPUT RECORD
*                                                            @Y30LB40*/
*       IF CKTIME<CKSTIME×CKTIME>CKETIME×(STGD+DSTGD)=0×PAGES=0 THEN
         CLC   CKTIME(7),CKSTIME                                   0807
         BL    @RT00807                                            0807
         CLC   CKTIME(7),CKETIME                                   0807
         BH    @RT00807                                            0807
         SLR   @06,@06                                             0807
         L     @15,STGD                                            0807
         AL    @15,DSTGD                                           0807
         CR    @15,@06                                             0807
         BE    @RT00807                                            0807
         CLI   PAGES,0                                             0807
         BE    @RT00807                                            0807
*         RETURN;                   /* RECORD NOT VALID,SKIP IT    0808
*                                                            @Y30LB40*/
*       ELSE                                                       0809
*         DO;                       /* RECORD VALID          @Y30LB40*/
*           IF HOLDT2TM=0&HOLDT3TM=0 THEN                          0810
         C     @06,HOLDT2TM                                        0810
         BNE   @RF00810                                            0810
         C     @06,HOLDT3TM                                        0810
         BNE   @RF00810                                            0810
*             BUSYTIME=DEVSGTM+DEVDSTM;/* CALC BUSY TIME             */
         L     @15,DEVSGTM                                         0811
         AL    @15,DEVDSTM                                         0811
         ST    @15,BUSYTIME                                        0811
*           ELSE                                                   0812
*             BUSYTIME=HIT5TIME-HOLDT2TM;/* CALC BUSY TIME           */
         B     @RC00810                                            0812
@RF00810 LR    @06,HIT5TIME                                        0812
         SL    @06,HOLDT2TM                                        0812
         ST    @06,BUSYTIME                                        0812
*           RFY                                                    0813
*            (R0,                                                  0813
*             R1,                                                  0813
*             R14,                                                 0813
*             R15) RSTD;            /*                       @Y30LB40*/
@RC00810 DS    0H                                                  0814
*           GEN(PUT   OUTDCB,RCDOUT);/* WRITE RECORD AND COUNT IT    */
         PUT   OUTDCB,RCDOUT
*           RFY                                                    0815
*            (R0,                                                  0815
*             R1,                                                  0815
*             R14,                                                 0815
*             R15) UNRSTD;          /*                       @Y30LB40*/
*           OUTCOUNT=OUTCOUNT+1;    /*                       @Y30LB40*/
         LA    @15,1                                               0816
         AL    @15,OUTCOUNT                                        0816
         ST    @15,OUTCOUNT                                        0816
*           RETURN;                 /*                       @OZ05079*/
@EL00009 DS    0H                                                  0817
@EF00009 DS    0H                                                  0817
@ER00009 LM    @14,@12,@SA00009                                    0817
         BR    @14                                                 0817
*         END;                      /*                       @Y30LB40*/
*     END;                          /*                       @Y30LB40*/
*   IF NXTMINAD<=LSTMINAD           /* SET NEXT ADDRESS      @YM31015*/
*     THEN                                                         0820
@RF00805 L     @01,PTR2                                            0820
         SLR   @15,@15                                             0820
         IC    @15,NXTMINAD(,@01)                                  0820
         CR    @15,LSTMINAD                                        0820
         BNH   @RT00820                                            0820
*     RETURN;                       /* GO TO NEXT ROUTINE    @OZ05079*/
*   LSTMINAD=NXTMINAD;              /* SET LAST ADDRESS      @YM31015*/
         LR    LSTMINAD,@15                                        0822
*   PTR2=ADDR(RECIN)+NXTMINAD+8;    /* SET POINTER           @YM31015*/
         LA    @14,RECIN                                           0823
         ALR   @14,@15                                             0823
         AL    @14,@CF00036                                        0823
         ST    @14,PTR2                                            0823
*   GO TO MINILOOP;                 /* PTR OK, GO PROCESS NEXT MINI
*                                                            @Y30LB40*/
         B     MINILOOP                                            0824
*   END REFORMAT;                   /*                       @OZ05079*/
         B     @EL00009                                            0825
*                                                                  0826
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - DOCOMMON                                @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - PICK UP FROM THE BLOCK HEADER PORTION OF THE  @OZ05079*/
*/*            RECORD BEING PROCESSED THE INFORMATION COMMON @OZ05079*/
*/*            TO ALL MINI-HEADERS IN THE RECORD.  THE       @OZ05079*/
*/*            COMMON INFORMATION IS                         @OZ05079*/
*/*            - TIMES T1, T2, AND T3                        @OZ05079*/
*/*            - VOLID AND CO-ORDINATES OF CARTRIDGE         @OZ05079*/
*/*            - DRD, DRC, AND STAGING ADAPTER               @OZ05079*/
*/*            THIS INFORMATION IS CARRIED FORWARD INTO      @OZ05079*/
*/*            THE REFORMATTED RECORD.                       @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0826
*DOCOMMON:                                                         0826
*   PROCEDURE;                      /*                       @OZ05079*/
DOCOMMON STM   @14,@12,@SA00010                                    0826
*   MINI1SW='0'B;                   /* RESET SWITCH          @Y30LB40*/
         NI    MINI1SW,B'01111111'                                 0827
*   CALL SDTABLE;                   /* CONVERT TIMES AND SAVE DATES
*                                                            @Y30LB40*/
         BAL   @14,SDTABLE                                         0828
*   HOLDT1TM=T1TIME;                /* GET MIDDLE TWO BYTES OF T1  0829
*                                      TIME                  @Y30LB40*/
         L     @01,PTR2                                            0829
         L     HOLDT1TM,T1TIME(,@01)                               0829
*   SLL(HOLDT1TM,8);                /*                       @Y30LB40*/
         SLL   HOLDT1TM,8                                          0830
*   SRL(HOLDT1TM,16);               /*                       @Y30LB40*/
         SRL   HOLDT1TM,16                                         0831
*   HOLDT2TM=T2TIME;                /* EXPAND T2 TIME TO FULLWORD  0832
*                                                            @Y30LB40*/
         LH    @03,T2TIME                                          0832
         N     @03,@CF01285                                        0832
         ST    @03,HOLDT2TM                                        0832
*   HOLDT3TM=T3TIME;                /* EXPAND T3 TIME TO FULLWORD  0833
*                                                            @Y30LB40*/
         LH    @15,T3TIME                                          0833
         N     @15,@CF01285                                        0833
         ST    @15,HOLDT3TM                                        0833
*   IF HOLDT2TM=0&HOLDT3TM=0        /* IF T2 AND T3 ZERO     @Y30LB40*/
*     THEN                                                         0834
         SLR   @14,@14                                             0834
         CR    @03,@14                                             0834
         BNE   @RF00834                                            0834
         CR    @15,@14                                             0834
         BE    @RT00834                                            0834
*     ;                             /* NO LOAD,SKIP ROLLOVER CHECK 0835
*                                                            @Y30LB40*/
*   ELSE                                                           0836
*     DO;                           /*                       @Y30LB40*/
@RF00834 DS    0H                                                  0837
*       IF HOLDT1TM>HOLDT2TM        /* IS THERE A ROLLOVER   @Y30LB40*/
*         THEN                                                     0837
         L     @03,HOLDT2TM                                        0837
         CR    HOLDT1TM,@03                                        0837
         BNH   @RF00837                                            0837
*         DO;                       /* YES,BUMP T2 AND T3    @Y30LB40*/
*           HOLDT2TM=HOLDT2TM+ROLLOVER;/*                    @Y30LB40*/
         L     @02,ROLLOVER                                        0839
         ALR   @03,@02                                             0839
         ST    @03,HOLDT2TM                                        0839
*           HOLDT3TM=HOLDT3TM+ROLLOVER;/*                    @Y30LB40*/
         AL    @02,HOLDT3TM                                        0840
         ST    @02,HOLDT3TM                                        0840
*         END;                      /*                       @Y30LB40*/
*       IF HOLDT2TM>HOLDT3TM        /* IS THERE A ROLLOVER   @Y30LB40*/
*         THEN                                                     0842
@RF00837 L     @15,HOLDT3TM                                        0842
         C     @15,HOLDT2TM                                        0842
         BNL   @RF00842                                            0842
*         HOLDT3TM=HOLDT3TM+ROLLOVER;/* YES,BUMP T3                  */
         AL    @15,ROLLOVER                                        0843
         ST    @15,HOLDT3TM                                        0843
*       LOADTIME=LOADTIME+(HOLDT3TM-HOLDT2TM);/* CALC LOADTIME       */
@RF00842 L     @15,HOLDT3TM                                        0844
         SL    @15,HOLDT2TM                                        0844
         AL    @15,LOADTIME                                        0844
         ST    @15,LOADTIME                                        0844
*       LOADNUM=LOADNUM+1;          /* INCREMENT NUMBER OF LOADS     */
         IC    @01,LOADNUM                                         0845
         LA    @01,1(,@01)                                         0845
         STC   @01,LOADNUM                                         0845
*     END;                          /*                       @Y30LB40*/
*   RCOVOLID=VOLID;                 /* PICK UP VOLID         @Y30LB40*/
@RT00834 MVC   RCOVOLID(6),VOLID                                   0847
*   CALL TRDRCDRD;                  /* DRC/LOGICAL DRD TRANS @OZ05079*/
         BAL   @14,TRDRCDRD                                        0848
*   READWRIT=DRDPRINT;              /* PHYSICAL DRD IN BINARY      0849
*                                                            @OZ05079*/
         IC    @15,DRDPRINT                                        0849
         STC   @15,READWRIT                                        0849
*   CHARDRC=DRCPRINT;               /* DRC IN EBCDIC         @OZ05079*/
         MVC   CHARDRC(1),DRCPRINT                                 0850
*   IF PAIRNUM='1'B THEN                                           0851
         TM    PAIRNUM,B'00001000'                                 0851
         BNO   @RF00851                                            0851
*     CARTPAIR(8:8)='1'B;           /* PICKUP CART PAIR              */
         OI    CARTPAIR,B'00000001'                                0852
*   IF L(1:1)='1'B THEN                                            0853
@RF00851 TM    L,B'10000000'                                       0853
         BNO   @RF00853                                            0853
*     LIBRARY(7:7)='1'B;            /* PICKUP LIBRARY                */
         OI    LIBRARY,B'00000010'                                 0854
*   IF L(2:2)='1'B THEN                                            0855
@RF00853 TM    L,B'01000000'                                       0855
         BNO   @RF00855                                            0855
*     LIBRARY(8:8)='1'B;            /*                       @Y30LB40*/
         OI    LIBRARY,B'00000001'                                 0856
*   IF Z='1'B THEN                                                 0857
@RF00855 TM    Z,B'00100000'                                       0857
         BNO   @RF00857                                            0857
*     RCOZ(8:8)='1'B;               /* PICKUP Z COORD                */
         OI    RCOZ,B'00000001'                                    0858
*   IF Y(1:1)='1'B THEN                                            0859
@RF00857 TM    Y,B'00010000'                                       0859
         BNO   @RF00859                                            0859
*     RCOY(4:4)='1'B;               /* PICKUP Y COORD                */
         OI    RCOY,B'00010000'                                    0860
*   IF Y(2:2)='1'B THEN                                            0861
@RF00859 TM    Y,B'00001000'                                       0861
         BNO   @RF00861                                            0861
*     RCOY(5:5)='1'B;               /*                       @Y30LB40*/
         OI    RCOY,B'00001000'                                    0862
*   IF Y(3:3)='1'B THEN                                            0863
@RF00861 TM    Y,B'00000100'                                       0863
         BNO   @RF00863                                            0863
*     RCOY(6:6)='1'B;               /*                       @Y30LB40*/
         OI    RCOY,B'00000100'                                    0864
*   IF Y(4:4)='1'B THEN                                            0865
@RF00863 TM    Y,B'00000010'                                       0865
         BNO   @RF00865                                            0865
*     RCOY(7:7)='1'B;               /*                       @Y30LB40*/
         OI    RCOY,B'00000010'                                    0866
*   IF Y(5:5)='1'B THEN                                            0867
@RF00865 TM    Y,B'00000001'                                       0867
         BNO   @RF00867                                            0867
*     RCOY(8:8)='1'B;               /*                       @Y30LB40*/
         OI    RCOY,B'00000001'                                    0868
*   RCOX=X;                         /* PICKUP X COORD                */
@RF00867 MVC   RCOX(1),X                                           0869
*   IF DS2VALID='1'B&DS2IOS='1'B    /* WAS DS2 USED          @Y30LB40*/
*     THEN                                                         0870
         TM    DS2VALID,B'00010100'                                0870
         BNO   @RF00870                                            0870
*     DO;                           /* YES,PICKUP DS2 ADDRESS        */
*       IF DS2PORT='1'B THEN                                       0872
         TM    DS2PORT,B'00001000'                                 0872
         BNO   @RF00872                                            0872
*         DSPORT(8:8)='1'B;         /*                       @Y30LB40*/
         OI    DSPORT,B'00000001'                                  0873
*       IF DS2CU(1:1)='1'B THEN                                    0874
@RF00872 TM    DS2CU,B'00000100'                                   0874
         BNO   @RF00874                                            0874
*         DSCU(6:6)='1'B;           /*                       @Y30LB40*/
         OI    DSCU,B'00000100'                                    0875
*       IF DS2CU(2:2)='1'B THEN                                    0876
@RF00874 TM    DS2CU,B'00000010'                                   0876
         BNO   @RF00876                                            0876
*         DSCU(7:7)='1'B;           /*                       @Y30LB40*/
         OI    DSCU,B'00000010'                                    0877
*       IF DS2CU(3:3)='1'B THEN                                    0878
@RF00876 TM    DS2CU,B'00000001'                                   0878
         BNO   @RF00878                                            0878
*         DSCU(8:8)='1'B;           /*                       @Y30LB40*/
         OI    DSCU,B'00000001'                                    0879
*     END;                          /*                       @Y30LB40*/
*   ELSE                                                           0881
*     DO;                           /* PICK UP DS1 ADDRESS           */
         B     @RC00870                                            0881
@RF00870 DS    0H                                                  0882
*       IF DS1PORT='1'B THEN                                       0882
         TM    DS1PORT,B'00001000'                                 0882
         BNO   @RF00882                                            0882
*         DSPORT(8:8)='1'B;         /*                       @Y30LB40*/
         OI    DSPORT,B'00000001'                                  0883
*       IF DS1CU(1:1)='1'B THEN                                    0884
@RF00882 TM    DS1CU,B'00000100'                                   0884
         BNO   @RF00884                                            0884
*         DSCU(6:6)='1'B;           /*                       @Y30LB40*/
         OI    DSCU,B'00000100'                                    0885
*       IF DS1CU(2:2)='1'B THEN                                    0886
@RF00884 TM    DS1CU,B'00000010'                                   0886
         BNO   @RF00886                                            0886
*         DSCU(7:7)='1'B;           /*                       @Y30LB40*/
         OI    DSCU,B'00000010'                                    0887
*       IF DS1CU(3:3)='1'B THEN                                    0888
@RF00886 TM    DS1CU,B'00000001'                                   0888
         BNO   @RF00888                                            0888
*         DSCU(8:8)='1'B;           /*                       @Y30LB40*/
         OI    DSCU,B'00000001'                                    0889
*     END;                          /*                       @Y30LB40*/
@RF00888 DS    0H                                                  0891
*   SDGINBIN=RSPINDGP;              /* SDG NUMBER            @ZA13479*/
@RC00870 MVC   SDGINBIN(1),RSPINDGP                                0891
*   END DOCOMMON;                   /*                       @OZ05079*/
@EL00010 DS    0H                                                  0892
@EF00010 DS    0H                                                  0892
@ER00010 LM    @14,@12,@SA00010                                    0892
         BR    @14                                                 0892
*                                                                  0893
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - DOMINIS                                 @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - THIS PROCEDURE PROCESSES ALL STAGE AND        @OZ05079*/
*/*            DESTAGE MINI-HEADERS.  IN THIS PROCEDURE      @OZ05079*/
*/*            T4 TIME AND T5 TIME ARE DEVELOPED, AND A      @OZ05079*/
*/*            COUNT OF THE STAGING AND DESTAGING            @OZ05079*/
*/*            STATISTICS IS MADE.                           @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0893
*DOMINIS:                                                          0893
*   PROCEDURE;                      /*                       @OZ05079*/
DOMINIS  STM   @14,@06,12(@13)                                     0893
         STM   @08,@12,52(@13)                                     0893
*   HOLDT1TM=T1TIME;                /* GET MIDDLE TWO BYTES OF T1  0894
*                                      TIME                  @Y30LB40*/
         L     @06,PTR2                                            0894
         L     HOLDT1TM,T1TIME(,@06)                               0894
*   SLL(HOLDT1TM,8);                /*                       @Y30LB40*/
         SLL   HOLDT1TM,8                                          0895
*   SRL(HOLDT1TM,16);               /*                       @Y30LB40*/
         SRL   HOLDT1TM,16                                         0896
*   HOLDT4TM=T4TIME;                /* EXPAND T4 TO FULLWORD @Y30LB40*/
         LH    HOLDT4TM,T4TIME(,@06)                               0897
         N     HOLDT4TM,@CF01285                                   0897
*   HOLDT5TM=T5TIME;                /* EXPAND T5 TO FULLWORD @Y30LB40*/
         LH    HOLDT5TM,T5TIME(,@06)                               0898
         N     HOLDT5TM,@CF01285                                   0898
*   IF HOLDT1TM>HOLDT4TM            /* IS THERE A ROLLOVER   @Y30LB40*/
*     THEN                                                         0899
         CR    HOLDT1TM,HOLDT4TM                                   0899
         BNH   @RF00899                                            0899
*     DO;                           /* YES                   @Y30LB40*/
*       HOLDT4TM=HOLDT4TM+ROLLOVER; /* BUMP T4               @Y30LB40*/
         L     @06,ROLLOVER                                        0901
         ALR   HOLDT4TM,@06                                        0901
*       HOLDT5TM=HOLDT5TM+ROLLOVER; /* BUMP T5               @Y30LB40*/
         ALR   HOLDT5TM,@06                                        0902
*     END;                          /*                       @Y30LB40*/
*   IF HOLDT4TM>HOLDT5TM            /* IS THERE A ROLLOVER   @Y30LB40*/
*     THEN                                                         0904
@RF00899 CR    HOLDT4TM,HOLDT5TM                                   0904
         BNH   @RF00904                                            0904
*     HOLDT5TM=HOLDT5TM+ROLLOVER;   /* YES,BUMP T5           @Y30LB40*/
         AL    HOLDT5TM,ROLLOVER                                   0905
*   IF HOLDT5TM>HIT5TIME            /* SAVE HIGHEST T5 IN BLOCK    0906
*                                                            @Y30LB40*/
*     THEN                                                         0906
@RF00904 CR    HOLDT5TM,HIT5TIME                                   0906
         BNH   @RF00906                                            0906
*     HIT5TIME=HOLDT5TM;            /*                       @Y30LB40*/
         LR    HIT5TIME,HOLDT5TM                                   0907
*   FLD2=COUNT;                     /*                       @Y30LB40*/
@RF00906 L     @01,PTR2                                            0908
         MVC   FLD2(1),COUNT(@01)                                  0908
*   PAGES=PAGES+CONVERT;            /* PICKUP NUMBER OF PAGES      0909
*                                                            @Y30LB40*/
         LH    @15,CONVERT                                         0909
         SLR   @14,@14                                             0909
         IC    @14,PAGES                                           0909
         ALR   @14,@15                                             0909
         STC   @14,PAGES                                           0909
*   K=0;                            /*                       @Y30LB40*/
         SLR   @14,@14                                             0910
         STH   @14,K                                               0910
*   J=CONVERT;                      /*                       @Y30LB40*/
         STH   @15,J                                               0911
*   HOLDCYLS=0;                     /* CLEAR CYLINDER ACCUMULATOR  0912
*                                                            @Y30LB40*/
         SLR   HOLDCYLS,HOLDCYLS                                   0912
*   HOLDVTOC=0;                     /* CLEAR VTOC STAGING ACCUMULATOR
*                                                            @Y30LB40*/
         SLR   HOLDVTOC,HOLDVTOC                                   0913
*   DO WHILE(K^=J);                 /* LOOP THROUGH ALL PAGE LISTS 0914
*                                                            @Y30LB40*/
         B     @DE00914                                            0914
@DL00914 DS    0H                                                  0915
*     K=K+1;                        /*                       @Y30LB40*/
         LA    @15,1                                               0915
         LH    @14,K                                               0915
         ALR   @14,@15                                             0915
         STH   @14,K                                               0915
*     CONVERT=0;                    /*                       @Y30LB40*/
         SLR   @01,@01                                             0916
         STH   @01,CONVERT                                         0916
*     DECODCYL=CYLIND(K);           /*                       @Y30LB40*/
         L     @01,PTR2                                            0917
         SLA   @14,2                                               0917
         ST    @14,@TF00001                                        0917
         ALR   @14,@01                                             0917
         MVC   DECODCYL(1),CYLIND-4(@14)                           0917
*     IF DECODCYL(1:1)='1'B&VIRTPAGE(K)='00000000'B THEN           0918
         TM    DECODCYL,B'10000000'                                0918
         BNO   @RF00918                                            0918
         AL    @01,@TF00001                                        0918
         CLI   VIRTPAGE-4(@01),B'00000000'                         0918
         BNE   @RF00918                                            0918
*       HOLDVTOC=HOLDVTOC+1;        /* IF VTOC STAGING ACCUMULATE  0919
*                                                            @Y30LB40*/
*                                                                  0919
         ALR   HOLDVTOC,@15                                        0919
*     /***************************************************************/
*     /*                                                             */
*     /* COUNT CYLINDERS STAGED OR DESTAGED                  @Y30LB40*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0920
*     IF DECODCYL(1:1)='1'B THEN                                   0920
@RF00918 TM    DECODCYL,B'10000000'                                0920
         BNO   @RF00920                                            0920
*       CONVERT=CONVERT+1;          /*                       @Y30LB40*/
         LH    @01,CONVERT                                         0921
         LA    @01,1(,@01)                                         0921
         STH   @01,CONVERT                                         0921
*     IF DECODCYL(2:2)='1'B THEN                                   0922
@RF00920 TM    DECODCYL,B'01000000'                                0922
         BNO   @RF00922                                            0922
*       CONVERT=CONVERT+1;          /*                       @Y30LB40*/
         LH    @01,CONVERT                                         0923
         LA    @01,1(,@01)                                         0923
         STH   @01,CONVERT                                         0923
*     IF DECODCYL(3:3)='1'B THEN                                   0924
@RF00922 TM    DECODCYL,B'00100000'                                0924
         BNO   @RF00924                                            0924
*       CONVERT=CONVERT+1;          /*                       @Y30LB40*/
         LH    @01,CONVERT                                         0925
         LA    @01,1(,@01)                                         0925
         STH   @01,CONVERT                                         0925
*     IF DECODCYL(4:4)='1'B THEN                                   0926
@RF00924 TM    DECODCYL,B'00010000'                                0926
         BNO   @RF00926                                            0926
*       CONVERT=CONVERT+1;          /*                       @Y30LB40*/
         LH    @01,CONVERT                                         0927
         LA    @01,1(,@01)                                         0927
         STH   @01,CONVERT                                         0927
*     IF DECODCYL(5:5)='1'B THEN                                   0928
@RF00926 TM    DECODCYL,B'00001000'                                0928
         BNO   @RF00928                                            0928
*       CONVERT=CONVERT+1;          /*                       @Y30LB40*/
         LH    @01,CONVERT                                         0929
         LA    @01,1(,@01)                                         0929
         STH   @01,CONVERT                                         0929
*     IF DECODCYL(6:6)='1'B THEN                                   0930
@RF00928 TM    DECODCYL,B'00000100'                                0930
         BNO   @RF00930                                            0930
*       CONVERT=CONVERT+1;          /*                       @Y30LB40*/
         LH    @01,CONVERT                                         0931
         LA    @01,1(,@01)                                         0931
         STH   @01,CONVERT                                         0931
*     IF DECODCYL(7:7)='1'B THEN                                   0932
@RF00930 TM    DECODCYL,B'00000010'                                0932
         BNO   @RF00932                                            0932
*       CONVERT=CONVERT+1;          /*                       @Y30LB40*/
         LH    @01,CONVERT                                         0933
         LA    @01,1(,@01)                                         0933
         STH   @01,CONVERT                                         0933
*     IF DECODCYL(8:8)='1'B THEN                                   0934
@RF00932 TM    DECODCYL,B'00000001'                                0934
         BNO   @RF00934                                            0934
*       CONVERT=CONVERT+1;          /*                       @Y30LB40*/
         LH    @01,CONVERT                                         0935
         LA    @01,1(,@01)                                         0935
         STH   @01,CONVERT                                         0935
*     HOLDCYLS=HOLDCYLS+CONVERT;    /*                       @Y30LB40*/
@RF00934 AH    HOLDCYLS,CONVERT                                    0936
*   END;                            /*                       @Y30LB40*/
@DE00914 CLC   K(2),J                                              0937
         BNE   @DL00914                                            0937
*   IF PLSTDEST='00'B               /* WAS THIS A STAGE OPERATION  0938
*                                                            @Y30LB40*/
*     THEN                                                         0938
         L     @15,PTR2                                            0938
         TM    PLSTDEST(@15),B'11000000'                           0938
         BNZ   @RF00938                                            0938
*     DO;                           /* YES                   @Y30LB40*/
*       STGD=STGD+HOLDCYLS;         /* ACCUM STAGED CYLINDERS      0940
*                                                            @Y30LB40*/
         LR    @14,HOLDCYLS                                        0940
         AL    @14,STGD                                            0940
         ST    @14,STGD                                            0940
*       VTOCSTG=VTOCSTG+HOLDVTOC;   /* ACCUM VTOC STAGES     @Y30LB40*/
         SLR   @14,@14                                             0941
         IC    @14,VTOCSTG                                         0941
         ALR   @14,HOLDVTOC                                        0941
         STC   @14,VTOCSTG                                         0941
*       STGDNUM=STGDNUM+1;          /* ACCUM NUMBER OF STAGES      0942
*                                                            @Y30LB40*/
*                                                                  0942
         IC    @06,STGDNUM                                         0942
         LA    @06,1(,@06)                                         0942
         STC   @06,STGDNUM                                         0942
*       /*************************************************************/
*       /*                                                           */
*       /* IF STAGING CAUSED CYLINDER FAULT ACCUM CFAULT     @Y30LB40*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0943
*       IF FUNCID='00110000'B×PLNOTU(1:1)='1'B THEN                0943
         CLI   FUNCID(@15),B'00110000'                             0943
         BE    @RT00943                                            0943
         TM    PLNOTU(@15),B'00100000'                             0943
         BNO   @RF00943                                            0943
@RT00943 DS    0H                                                  0944
*         CFAULT=CFAULT+HOLDCYLS;   /*                       @Y30LB40*/
         LR    @06,HOLDCYLS                                        0944
         AL    @06,CFAULT                                          0944
         ST    @06,CFAULT                                          0944
*       SYSSGTM=SYSSGTM+(HOLDT5TM-HOLDT1TM);/* CALC SYSTEM TIME      */
@RF00943 LR    @06,HOLDT5TM                                        0945
         SLR   @06,HOLDT1TM                                        0945
         AL    @06,SYSSGTM                                         0945
         ST    @06,SYSSGTM                                         0945
*       DEVSGTM=DEVSGTM+(HOLDT5TM-HOLDT4TM);/* CALC DEVICE TIME      */
         LR    @06,HOLDT5TM                                        0946
         SLR   @06,HOLDT4TM                                        0946
         AL    @06,DEVSGTM                                         0946
         ST    @06,DEVSGTM                                         0946
*     END;                          /*                       @Y30LB40*/
*   ELSE                                                           0948
*     IF PLSTDEST='10'B             /* WAS THIS A DESTAGE OPERATION  */
*       THEN                                                       0948
         B     @RC00938                                            0948
@RF00938 L     @15,PTR2                                            0948
         TM    PLSTDEST(@15),B'10000000'                           0948
         BNO   @RF00948                                            0948
         TM    PLSTDEST(@15),B'01000000'                           0948
         BNZ   @RF00948                                            0948
*       DO;                         /* YES                   @Y30LB40*/
*         DSTGD=DSTGD+HOLDCYLS;     /* ACCUM DESTAGES CYLINDERS      */
         LR    @14,HOLDCYLS                                        0950
         AL    @14,DSTGD                                           0950
         ST    @14,DSTGD                                           0950
*         VTOCDSTG=VTOCDSTG+HOLDVTOC;/* ACCUM VTOC DESTAGINGS        */
         SLR   @14,@14                                             0951
         IC    @14,VTOCDSTG                                        0951
         ALR   @14,HOLDVTOC                                        0951
         STC   @14,VTOCDSTG                                        0951
*         DSTGDNUM=DSTGDNUM+1;      /* ACCUM NUMBER OF DESTAGES    0952
*                                                            @Y30LB40*/
         IC    @06,DSTGDNUM                                        0952
         LA    @06,1(,@06)                                         0952
         STC   @06,DSTGDNUM                                        0952
*         IF FUNCID='00001000'B×    /* MOUNT OR ACQUIRE OR LRU     0953
*                                                            @ZA28570*/
*             FUNCID='00000010'B×FUNCID='00110000'B THEN           0953
         CLI   FUNCID(@15),B'00001000'                             0953
         BE    @RT00953                                            0953
         CLI   FUNCID(@15),B'00000010'                             0953
         BE    @RT00953                                            0953
         CLI   FUNCID(@15),B'00110000'                             0953
         BNE   @RF00953                                            0953
@RT00953 DS    0H                                                  0954
*           SALLOC=SALLOC+HOLDCYLS; /* SPACE ALLOC CAUSED            */
         LR    @06,HOLDCYLS                                        0954
         AL    @06,SALLOC                                          0954
         ST    @06,SALLOC                                          0954
*         SYSDSTM=SYSDSTM+(HOLDT5TM-HOLDT1TM);/* CALC SYSTEM TIME    */
@RF00953 LR    @06,HOLDT5TM                                        0955
         SLR   @06,HOLDT1TM                                        0955
         AL    @06,SYSDSTM                                         0955
         ST    @06,SYSDSTM                                         0955
*         DEVDSTM=DEVDSTM+(HOLDT5TM-HOLDT4TM);/* CALC DEVICE TIME    */
         LR    @06,HOLDT5TM                                        0956
         SLR   @06,HOLDT4TM                                        0956
         AL    @06,DEVDSTM                                         0956
         ST    @06,DEVDSTM                                         0956
*       END;                        /*                       @Y30LB40*/
*   MININUM=MININUM+1;              /* COUNT NUMBER OF MINI HEADERS  */
@RF00948 DS    0H                                                  0958
@RC00938 IC    @06,MININUM                                         0958
         LA    @06,1(,@06)                                         0958
         STC   @06,MININUM                                         0958
*   IF HOLDT2TM=0&HOLDT3TM=0        /* WAS THERE A CARTRIDGE LOAD    */
*     THEN                                                         0959
         SLR   @06,@06                                             0959
         C     @06,HOLDT2TM                                        0959
         BNE   @RF00959                                            0959
         C     @06,HOLDT3TM                                        0959
         BE    @RT00959                                            0959
*     ;                             /* NO                    @Y30LB40*/
*   ELSE                                                           0961
*     DO;                           /* YES                   @Y30LB40*/
@RF00959 DS    0H                                                  0962
*       IF HOLDT1TM>HOLDT2TM        /* WAS CARTRIDGE ALREADY LOADED  */
*         THEN                                                     0962
         C     HOLDT1TM,HOLDT2TM                                   0962
         BNH   @RF00962                                            0962
*         HITNUM=HITNUM+1;          /* YES,COUNT NUMBER OF PRELOADS  */
         IC    @06,HITNUM                                          0963
         LA    @06,1(,@06)                                         0963
         STC   @06,HITNUM                                          0963
*     END;                          /*                       @Y30LB40*/
*   END DOMINIS;                    /*                       @OZ05079*/
@EL00011 DS    0H                                                  0965
@EF00011 DS    0H                                                  0965
@ER00011 LM    @14,@06,12(@13)                                     0965
         LM    @08,@12,52(@13)                                     0965
         BR    @14                                                 0965
*                                                                  0966
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - BLKHDR                                  @OZ09557*/
*/*                                                          @OZ05079*/
*/* FUNCTION - PRINT TRACE BLOCK HEADERS WHEN VALID STAGE    @OZ09557*/
*/*            OR DETSAGE DATA AND 'INTERPRET' OR 'BOTH'     @OZ09557*/
*/*            WAS SPECIFIED AS THE PARM OPTION.             @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  0966
*BLKHDR:                                                           0966
*   PROCEDURE;                      /*                       @OZ09557*/
BLKHDR   STM   @14,@06,@SA00012                                    0966
         STM   @08,@12,@SA00012+36                                 0966
*   MINI1SW='0'B;                   /* RESET 1ST TIME        @OZ11670*/
         NI    MINI1SW,B'01111111'                                 0967
*   IF LINECNT>52                   /* FORCE PAGE BREAK IF NECESSARY
*                                                            @Y30LB40*/
*     THEN                                                         0968
         C     LINECNT,@CF00040                                    0968
         BNH   @RF00968                                            0968
*     CALL NEWPAGE;                 /*                       @Y30LB40*/
         BAL   @14,NEWPAGE                                         0969
*   RFY                                                            0970
*    (R0,                                                          0970
*     R1,                                                          0970
*     R14,                                                         0970
*     R15) RSTD;                    /*                       @Y30LB40*/
@RF00968 DS    0H                                                  0971
*   GEN(PUT   PRNTDCB,HDNG2);       /* PRINT BLOCK HEADER HEADLINES
*                                                            @Y30LB40*/
         PUT   PRNTDCB,HDNG2
*   GEN(PUT   PRNTDCB,HDNG3);       /*                       @Y30LB40*/
         PUT   PRNTDCB,HDNG3
*   RFY                                                            0973
*    (R0,                                                          0973
*     R1,                                                          0973
*     R14,                                                         0973
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   LINECNT=LINECNT+3;              /*                       @Y30LB40*/
         AL    LINECNT,@CF00117                                    0974
*   BLKLINE=' ';                    /* SET BLOCK LINE TO BLANKS    0975
*                                                            @Y30LB40*/
         MVI   BLKLINE+1,C' '                                      0975
         MVC   BLKLINE+2(119),BLKLINE+1                            0975
         MVI   BLKLINE,C' '                                        0975
*   CALL EDITBIT(ADDR(BLKOFLG));    /*                       @Y30LB40*/
         LA    @06,BLKOFLG                                         0976
         ST    @06,@AFTEMPS+4                                      0976
         LA    @06,@AFTEMPS+4                                      0976
         ST    @06,@AL00001                                        0976
         LA    @01,@AL00001                                        0976
         BAL   @14,EDITBIT                                         0976
*   BLKFLAG=BITOUT;                 /* PRINT BLOCK FLAG      @Y30LB40*/
         MVC   BLKFLAG(8),BITOUT                                   0977
*   CALL EDITHEX(ADDR(MINIPTR),1);  /*                       @YD00173*/
         LA    @06,MINIPTR                                         0978
         ST    @06,@AFTEMPS+4                                      0978
         LA    @06,@AFTEMPS+4                                      0978
         ST    @06,@AL00001                                        0978
         LA    @06,@CF00045                                        0978
         ST    @06,@AL00001+4                                      0978
         LA    @01,@AL00001                                        0978
         BAL   @14,EDITHEX                                         0978
*   BLKMINPT=HEXOUT(1:2);           /* PRINT CURRENT MINI PTR      0979
*                                                            @YD00173*/
         MVC   BLKMINPT(2),HEXOUT                                  0979
*   CALL EDITHEX(ADDR(LIBRID),1);   /*                       @YD00173*/
         LA    @06,LIBRID                                          0980
         ST    @06,@AFTEMPS+4                                      0980
         LA    @06,@AFTEMPS+4                                      0980
         ST    @06,@AL00001                                        0980
         LA    @06,@CF00045                                        0980
         ST    @06,@AL00001+4                                      0980
         LA    @01,@AL00001                                        0980
         BAL   @14,EDITHEX                                         0980
*   BLKLIBID=HEXOUT(1:2);           /* PRINT LIBRARY ID      @YD00173*/
         MVC   BLKLIBID(2),HEXOUT                                  0981
*   CALL EDITHEX(ADDR(RSPINDGP),1); /*                       @YD00173*/
*                                                                  0982
         LA    @06,RSPINDGP                                        0982
         ST    @06,@AFTEMPS+4                                      0982
         LA    @06,@AFTEMPS+4                                      0982
         ST    @06,@AL00001                                        0982
         LA    @06,@CF00045                                        0982
         ST    @06,@AL00001+4                                      0982
         LA    @01,@AL00001                                        0982
         BAL   @14,EDITHEX                                         0982
*   /*****************************************************************/
*   /*                                                               */
*   /* *************************************************     @OZ08841*/
*   /* SAVE STAGING DRIVE GROUP TO BUILD DASD SSID IN        @OZ08841*/
*   /* PAGE LIST                                             @OZ08841*/
*   /* *************************************************     @OZ08841*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0983
*   SAVESDG='00'X;                  /* ZERO SAVE AREA        @OZ08841*/
         MVI   SAVESDG,X'00'                                       0983
*   IF RSPINDGP(4)='1'B             /* SHIFT LEFT 3 BITS     @OZ08841*/
*     THEN                          /*                       @OZ08841*/
         TM    RSPINDGP,B'00010000'                                0984
         BNO   @RF00984                                            0984
*     SAVESDG(1)='1'B;              /*                       @OZ08841*/
         OI    SAVESDG,B'10000000'                                 0985
*   IF RSPINDGP(5)='1'B             /* SHIFT LEFT 3 BITS     @OZ08841*/
*     THEN                          /*                       @OZ08841*/
@RF00984 TM    RSPINDGP,B'00001000'                                0986
         BNO   @RF00986                                            0986
*     SAVESDG(2)='1'B;              /*                       @OZ08841*/
         OI    SAVESDG,B'01000000'                                 0987
*   IF RSPINDGP(6)='1'B             /* SHIFT LEFT 3 BITS     @OZ08841*/
*     THEN                          /*                       @OZ08841*/
@RF00986 TM    RSPINDGP,B'00000100'                                0988
         BNO   @RF00988                                            0988
*     SAVESDG(3)='1'B;              /*                       @OZ08841*/
         OI    SAVESDG,B'00100000'                                 0989
*   IF RSPINDGP(7)='1'B             /* SHIFT LEFT 3 BITS     @OZ08841*/
*     THEN                          /*                       @OZ08841*/
@RF00988 TM    RSPINDGP,B'00000010'                                0990
         BNO   @RF00990                                            0990
*     SAVESDG(4)='1'B;              /*                       @OZ08841*/
         OI    SAVESDG,B'00010000'                                 0991
*   IF RSPINDGP(8)='1'B             /* SHIFT LEFT 3 BITS     @OZ08841*/
*     THEN                          /*                       @OZ08841*/
@RF00990 TM    RSPINDGP,B'00000001'                                0992
         BNO   @RF00992                                            0992
*     SAVESDG(5)='1'B;              /*                       @OZ08841*/
         OI    SAVESDG,B'00001000'                                 0993
*   BLKRSPPT=HEXOUT(1:2);           /* PRINT REAL SPINDLE GROUP    0994
*                                                            @YD00173*/
*                                                                  0994
@RF00992 MVC   BLKRSPPT(2),HEXOUT                                  0994
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD SSID OF STAGING ADAPTER 1 AND STAGING           @OZ05079*/
*   /* ADAPTER 2 (IF PRESENT)                                @OZ05079*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0995
*   CHAR8SA1='8';                   /* FIRST DIGIT ALWAYS 8  @OZ05079*/
         MVI   CHAR8SA1,C'8'                                       0995
*   SAWORK='00'X;                   /* CLEAR WORK AREA       @OZ05079*/
         MVI   SAWORK,X'00'                                        0996
*   SAWORK=DS1ADDR;                 /* FOUR LOW-ORDER BITS OF SA   0997
*                                                            @OZ05079*/
         MVC   SAWORK(1),DS1ADDR                                   0997
*   SAWORK(1:1)='0'B;               /*                       @OZ05079*/
*   SAWORK(2:2)='0'B;               /*                       @OZ05079*/
*   SAWORK(3:3)='0'B;               /*                       @OZ05079*/
*   SAWORK(4:4)='0'B;               /*                       @OZ05079*/
         NI    SAWORK,B'00001111'                                  1001
*   SA1ID=SALOOKUP(SAWORK+1);       /* TRANSLATE SECOND DIGIT      1002
*                                                            @OZ05079*/
         SLR   @06,@06                                             1002
         IC    @06,SAWORK                                          1002
         LA    @01,SALOOKUP(@06)                                   1002
         MVC   SA1ID(1),0(@01)                                     1002
*   CHAR0SA1='0';                   /* THIRD DIGIT ALWAYS 0  @OZ05079*/
         MVI   CHAR0SA1,C'0'                                       1003
*   IF DS2VALID='1'B                /* CHECK SECOND SA VALID @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         TM    DS2VALID,B'00010000'                                1004
         BNO   @RF01004                                            1004
*     DO;                           /*                       @OZ05079*/
*       CHAR8SA2='8';               /* FIRST DIGIT ALWAYS 8  @OZ05079*/
         MVI   CHAR8SA2,C'8'                                       1006
*       SAWORK='00'X;               /* CLEAR WORK AREA       @OZ05079*/
         MVI   SAWORK,X'00'                                        1007
*       SAWORK=DS2ADDR;             /* FOUR LOW-ORDER BITS   @OZ05079*/
         MVC   SAWORK(1),DS2ADDR                                   1008
*       SAWORK(1:1)='0'B;           /*                       @OZ05079*/
*       SAWORK(2:2)='0'B;           /*                       @OZ05079*/
*       SAWORK(3:3)='0'B;           /*                       @OZ05079*/
*       SAWORK(4:4)='0'B;           /*                       @OZ05079*/
         NI    SAWORK,B'00001111'                                  1012
*       SA2ID=SALOOKUP(SAWORK+1);   /* TRANSLATE 2ND DIGIT   @OZ05079*/
         SLR   @06,@06                                             1013
         IC    @06,SAWORK                                          1013
         LA    @01,SALOOKUP(@06)                                   1013
         MVC   SA2ID(1),0(@01)                                     1013
*       CHAR0SA2='0';               /* THIRD DIGIT ALWAYS 0  @OZ05079*/
         MVI   CHAR0SA2,C'0'                                       1014
*     END;                          /*                       @OZ05079*/
*   ELSE                            /*                       @OZ05079*/
*     SA2SSID='***';                /* NO SECOND SA          @OZ05079*/
         B     @RC01004                                            1016
@RF01004 MVC   SA2SSID(3),@CC01192                                 1016
*   CALL EDITHEX(ADDR(VVADDR1),1);  /*                       @YD00173*/
@RC01004 LA    @06,VVADDR1                                         1017
         ST    @06,@AFTEMPS+4                                      1017
         LA    @06,@AFTEMPS+4                                      1017
         ST    @06,@AL00001                                        1017
         LA    @06,@CF00045                                        1017
         ST    @06,@AL00001+4                                      1017
         LA    @01,@AL00001                                        1017
         BAL   @14,EDITHEX                                         1017
*   BLKVV1=HEXOUT(1:2);             /* PRINT VVA1            @YD00173*/
         MVC   BLKVV1(2),HEXOUT                                    1018
*   CALL EDITHEX(ADDR(VVADDR2),1);  /*                       @YD00173*/
         LA    @06,VVADDR2                                         1019
         ST    @06,@AFTEMPS+4                                      1019
         LA    @06,@AFTEMPS+4                                      1019
         ST    @06,@AL00001                                        1019
         LA    @06,@CF00045                                        1019
         ST    @06,@AL00001+4                                      1019
         LA    @01,@AL00001                                        1019
         BAL   @14,EDITHEX                                         1019
*   BLKVV2=HEXOUT(1:2);             /* PRINT VVA2            @YD00173*/
         MVC   BLKVV2(2),HEXOUT                                    1020
*   CALL EDITHEX(ADDR(QCBENTS),6);  /*                       @Y30LB40*/
         LA    @06,QCBENTS                                         1021
         ST    @06,@AFTEMPS+4                                      1021
         LA    @06,@AFTEMPS+4                                      1021
         ST    @06,@AL00001                                        1021
         LA    @06,@CF00344                                        1021
         ST    @06,@AL00001+4                                      1021
         LA    @01,@AL00001                                        1021
         BAL   @14,EDITHEX                                         1021
*   BLKQCB=HEXOUT(1:12);            /* PRINT QCB ENTRIES     @Y30LB40*/
         MVC   BLKQCB(12),HEXOUT                                   1022
*   BLKVOLID=VOLID;                 /* PRINT VOLUME IDENTIFICATION 1023
*                                                            @Y30LB40*/
         MVC   BLKVOLID(6),VOLID                                   1023
*   IF T2TIME=0                     /*                       @ZA13498*/
*       &T3TIME=0                   /*                       @ZA13498*/
*     THEN                          /*                       @ZA13498*/
         LH    @06,T2TIME                                          1024
         N     @06,@CF01285                                        1024
         LTR   @06,@06                                             1024
         BNZ   @RF01024                                            1024
         LH    @06,T3TIME                                          1024
         N     @06,@CF01285                                        1024
         LTR   @06,@06                                             1024
         BNZ   @RF01024                                            1024
*     DO;                           /*                       @ZA13498*/
*       T2SECOND(2:2)='0';          /*                       @ZA13498*/
         MVI   T2SECOND+1,C'0'                                     1026
*       T3SECOND(2:2)='0';          /*                       @ZA13498*/
         MVI   T3SECOND+1,C'0'                                     1027
*     END;                          /*                       @ZA13498*/
*   ELSE                            /*                       @ZA13498*/
*     DO;                           /*                       @ZA13498*/
         B     @RC01024                                            1029
@RF01024 DS    0H                                                  1030
*       HOLDTXTM=T2TIME;            /*                       @ZA13498*/
         LH    HOLDTXTM,T2TIME                                     1030
         N     HOLDTXTM,@CF01285                                   1030
*       CALL TIME2345;              /*                       @ZA13498*/
         BAL   @14,TIME2345                                        1031
*       CALL EDITFIX(ADDR(HOUR),2,'S');/*                    @ZA13498*/
         MVC   @AL00001+4(8),@AL01032                              1032
         LA    @06,HOUR                                            1032
         ST    @06,@AFTEMPS+4                                      1032
         LA    @06,@AFTEMPS+4                                      1032
         ST    @06,@AL00001                                        1032
         LA    @01,@AL00001                                        1032
         BAL   @14,EDITFIX                                         1032
*       T2HOUR=FIXOUT(12:13);       /*                       @ZA13498*/
         MVC   T2HOUR(2),FIXOUT+11                                 1033
*       T2SEP1=':';                 /*                       @ZA13498*/
         MVI   T2SEP1,C':'                                         1034
*       CALL EDITFIX(ADDR(MINUTE),2,'N');/*                  @ZA13498*/
         MVC   @AL00001+4(8),@AL01035                              1035
         LA    @06,MINUTE                                          1035
         ST    @06,@AFTEMPS+4                                      1035
         LA    @06,@AFTEMPS+4                                      1035
         ST    @06,@AL00001                                        1035
         LA    @01,@AL00001                                        1035
         BAL   @14,EDITFIX                                         1035
*       T2MINUTE=FIXOUT(12:13);     /*                       @ZA13498*/
         MVC   T2MINUTE(2),FIXOUT+11                               1036
*       T2SEP2=':';                 /*                       @ZA13498*/
         MVI   T2SEP2,C':'                                         1037
*       CALL EDITFIX(ADDR(SECOND),2,'N');/*                  @ZA13498*/
         MVC   @AL00001+4(8),@AL01038                              1038
         LA    @06,SECOND                                          1038
         ST    @06,@AFTEMPS+4                                      1038
         LA    @06,@AFTEMPS+4                                      1038
         ST    @06,@AL00001                                        1038
         LA    @01,@AL00001                                        1038
         BAL   @14,EDITFIX                                         1038
*       T2SECOND=FIXOUT(12:13);     /*                       @ZA13498*/
         MVC   T2SECOND(2),FIXOUT+11                               1039
*       HOLDTXTM=T3TIME;            /*                       @ZA13498*/
         LH    HOLDTXTM,T3TIME                                     1040
         N     HOLDTXTM,@CF01285                                   1040
*       CALL TIME2345;              /*                       @ZA13498*/
         BAL   @14,TIME2345                                        1041
*       CALL EDITFIX(ADDR(HOUR),2,'S');/*                    @ZA13498*/
         MVC   @AL00001+4(8),@AL01042                              1042
         LA    @06,HOUR                                            1042
         ST    @06,@AFTEMPS+4                                      1042
         LA    @06,@AFTEMPS+4                                      1042
         ST    @06,@AL00001                                        1042
         LA    @01,@AL00001                                        1042
         BAL   @14,EDITFIX                                         1042
*       T3HOUR=FIXOUT(12:13);       /*                       @ZA13498*/
         MVC   T3HOUR(2),FIXOUT+11                                 1043
*       T3SEP1=':';                 /*                       @ZA13498*/
         MVI   T3SEP1,C':'                                         1044
*       CALL EDITFIX(ADDR(MINUTE),2,'N');/*                  @ZA13498*/
         MVC   @AL00001+4(8),@AL01045                              1045
         LA    @06,MINUTE                                          1045
         ST    @06,@AFTEMPS+4                                      1045
         LA    @06,@AFTEMPS+4                                      1045
         ST    @06,@AL00001                                        1045
         LA    @01,@AL00001                                        1045
         BAL   @14,EDITFIX                                         1045
*       T3MINUTE=FIXOUT(12:13);     /*                       @ZA13498*/
         MVC   T3MINUTE(2),FIXOUT+11                               1046
*       T3SEP2=':';                 /*                       @ZA13498*/
         MVI   T3SEP2,C':'                                         1047
*       CALL EDITFIX(ADDR(SECOND),2,'N');/*                  @ZA13498*/
         MVC   @AL00001+4(8),@AL01048                              1048
         LA    @06,SECOND                                          1048
         ST    @06,@AFTEMPS+4                                      1048
         LA    @06,@AFTEMPS+4                                      1048
         ST    @06,@AL00001                                        1048
         LA    @01,@AL00001                                        1048
         BAL   @14,EDITFIX                                         1048
*       T3SECOND=FIXOUT(12:13);     /*                       @ZA13498*/
         MVC   T3SECOND(2),FIXOUT+11                               1049
*     END;                          /*                       @ZA13498*/
*   CALL EDITHEX(ADDR(QCBADDR),1);  /*                       @YD00173*/
@RC01024 LA    @06,QCBADDR                                         1051
         ST    @06,@AFTEMPS+4                                      1051
         LA    @06,@AFTEMPS+4                                      1051
         ST    @06,@AL00001                                        1051
         LA    @06,@CF00045                                        1051
         ST    @06,@AL00001+4                                      1051
         LA    @01,@AL00001                                        1051
         BAL   @14,EDITHEX                                         1051
*   BLKQCBPT=HEXOUT(1:2);           /* PRINT QCB PTR         @YD00173*/
*                                                                  1052
         MVC   BLKQCBPT(2),HEXOUT                                  1052
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT SSIDS OF BOTH DRC AND DRD                       @OZ05079*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1053
*   IF PARMSW='I'                   /* IF INTERPRET ONLY     @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         CLI   PARMSW,C'I'                                         1053
         BNE   @RF01053                                            1053
*     CALL TRDRCDRD;                /* NEED TRANSLATE HERE   @OZ05079*/
         BAL   @14,TRDRCDRD                                        1054
*   ELSE                                                           1055
*     ;                             /*                       @OZ05079*/
@RF01053 DS    0H                                                  1056
*   CHAR4='4';                      /* FIRST CHAR ALWAYS 4   @OZ05079*/
         MVI   CHAR4,C'4'                                          1056
*   MSFDRC=LIBRID;                  /* MSFID IN BINARY       @OZ05079*/
         MVC   MSFDRC(1),LIBRID                                    1057
*   MSFDRC=MSFDRC×FOXZERO;          /* CONCATENATE SIGN      @OZ05079*/
         OI    MSFDRC,B'11110000'                                  1058
*   PRINTDRC=DRCPRINT;              /* ALREADY EBCDIC        @OZ05079*/
         MVC   PRINTDRC(1),DRCPRINT                                1059
*   CHAR2='2';                      /* FIRST CHAR ALWAYS 2   @OZ05079*/
         MVI   CHAR2,C'2'                                          1060
*   MSFDRD=MSFDRC;                  /* MUST BE SAME MSF      @OZ05079*/
         MVC   MSFDRD(1),MSFDRC                                    1061
*   PRINTDRD=DRDPRINT;              /* PHYSICAL DRD IN BINARY      1062
*                                                            @OZ05079*/
         MVC   PRINTDRD(1),DRDPRINT                                1062
*   PRINTDRD=PRINTDRD×FOXZERO;      /* CONCATENATE SIGN      @OZ05079*/
         OI    PRINTDRD,B'11110000'                                1063
*   FLD2='00000000'B;               /*                       @Y30LB40*/
         MVI   FLD2,B'00000000'                                    1064
*   IF L(1:1)='1'B THEN                                            1065
         TM    L,B'10000000'                                       1065
         BNO   @RF01065                                            1065
*     FLD2(7:7)='1'B;               /*                       @Y30LB40*/
         OI    FLD2,B'00000010'                                    1066
*   IF L(2:2)='1'B THEN                                            1067
@RF01065 TM    L,B'01000000'                                       1067
         BNO   @RF01067                                            1067
*     FLD2(8:8)='1'B;               /*                       @Y30LB40*/
         OI    FLD2,B'00000001'                                    1068
*   CALL EDITFIX(ADDR(FLD2),1,'N'); /* PRINT L COORDINATE    @Y30LB40*/
@RF01067 MVC   @AL00001+4(8),@AL01069                              1069
         LA    @06,FLD2                                            1069
         ST    @06,@AFTEMPS+4                                      1069
         LA    @06,@AFTEMPS+4                                      1069
         ST    @06,@AL00001                                        1069
         LA    @01,@AL00001                                        1069
         BAL   @14,EDITFIX                                         1069
*   BLKL=FIXOUT(13:13);             /*                       @Y30LB40*/
         MVC   BLKL(1),FIXOUT+12                                   1070
*   IF Z='1'B THEN                                                 1071
         TM    Z,B'00100000'                                       1071
         BNO   @RF01071                                            1071
*     BLKZ='1';                     /*                       @Y30LB40*/
         MVI   BLKZ,C'1'                                           1072
*   ELSE                                                           1073
*     BLKZ='0';                     /* PRINT Z COORDINATE    @Y30LB40*/
         B     @RC01071                                            1073
@RF01071 MVI   BLKZ,C'0'                                           1073
*   FLD2='00000000'B;               /*                       @Y30LB40*/
@RC01071 MVI   FLD2,B'00000000'                                    1074
*   IF Y(1:1)='1'B THEN                                            1075
         TM    Y,B'00010000'                                       1075
         BNO   @RF01075                                            1075
*     FLD2(4:4)='1'B;               /*                       @Y30LB40*/
         OI    FLD2,B'00010000'                                    1076
*   IF Y(2:2)='1'B THEN                                            1077
@RF01075 TM    Y,B'00001000'                                       1077
         BNO   @RF01077                                            1077
*     FLD2(5:5)='1'B;               /*                       @Y30LB40*/
         OI    FLD2,B'00001000'                                    1078
*   IF Y(3:3)='1'B THEN                                            1079
@RF01077 TM    Y,B'00000100'                                       1079
         BNO   @RF01079                                            1079
*     FLD2(6:6)='1'B;               /*                       @Y30LB40*/
         OI    FLD2,B'00000100'                                    1080
*   IF Y(4:4)='1'B THEN                                            1081
@RF01079 TM    Y,B'00000010'                                       1081
         BNO   @RF01081                                            1081
*     FLD2(7:7)='1'B;               /*                       @Y30LB40*/
         OI    FLD2,B'00000010'                                    1082
*   IF Y(5:5)='1'B THEN                                            1083
@RF01081 TM    Y,B'00000001'                                       1083
         BNO   @RF01083                                            1083
*     FLD2(8:8)='1'B;               /*                       @Y30LB40*/
         OI    FLD2,B'00000001'                                    1084
*   CALL EDITFIX(ADDR(FLD2),1,'S'); /* PRINT Y COORDINATE    @Y30LB40*/
@RF01083 MVC   @AL00001+4(8),@AL01085                              1085
         LA    @06,FLD2                                            1085
         ST    @06,@AFTEMPS+4                                      1085
         LA    @06,@AFTEMPS+4                                      1085
         ST    @06,@AL00001                                        1085
         LA    @01,@AL00001                                        1085
         BAL   @14,EDITFIX                                         1085
*   BLKY=FIXOUT(12:13);             /*                       @Y30LB40*/
         MVC   BLKY(2),FIXOUT+11                                   1086
*   CALL EDITFIX(ADDR(X),1,'S');    /* PRINT X COORDINATE    @Y30LB40*/
         MVC   @AL00001+4(8),@AL01087                              1087
         LA    @06,X                                               1087
         ST    @06,@AFTEMPS+4                                      1087
         LA    @06,@AFTEMPS+4                                      1087
         ST    @06,@AL00001                                        1087
         LA    @01,@AL00001                                        1087
         BAL   @14,EDITFIX                                         1087
*   BLKX=FIXOUT(11:13);             /*                       @Y30LB40*/
         MVC   BLKX(3),FIXOUT+10                                   1088
*   RFY                                                            1089
*    (R0,                                                          1089
*     R1,                                                          1089
*     R14,                                                         1089
*     R15) RSTD;                    /*                       @Y30LB40*/
*   GEN(PUT   PRNTDCB,BLKLINE);     /* PRINT BLOCK LINE      @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*   RFY                                                            1091
*    (R0,                                                          1091
*     R1,                                                          1091
*     R14,                                                         1091
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   LINECNT=LINECNT+1;              /*                       @Y30LB40*/
         AL    LINECNT,@CF00045                                    1092
*   END BLKHDR;                     /*                       @OZ09557*/
@EL00012 DS    0H                                                  1093
@EF00012 DS    0H                                                  1093
@ER00012 LM    @14,@06,@SA00012                                    1093
         LM    @08,@12,@SA00012+36                                 1093
         BR    @14                                                 1093
*                                                                  1094
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - BLOCK                                   @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - PRINT TRACE BLOCK HEADERS, MINI HEADERS, AND  @OZ05079*/
*/*            PAGE LISTS WHEN EITHER 'INTERPRET' OR 'BOTH'  @OZ05079*/
*/*            WAS SPECIFIED AS THE PARM OPTION.             @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  1094
*BLOCK:                                                            1094
*   PROCEDURE;                                                     1094
BLOCK    STM   @14,@06,@SA00013                                    1094
         STM   @08,@12,@SA00013+36                                 1094
*   IF LINECNT>52                   /* FORCE PAGE BREAK IF NECESSARY
*                                                            @Y30LB40*/
*     THEN                                                         1095
         C     LINECNT,@CF00040                                    1095
         BNH   @RF01095                                            1095
*     CALL NEWPAGE;                 /*                       @Y30LB40*/
         BAL   @14,NEWPAGE                                         1096
*   IF LIBRID='11111111'B           /* TRAILER RECORD        @Y30LB40*/
*     THEN                                                         1097
@RF01095 CLI   LIBRID,B'11111111'                                  1097
         BNE   @RF01097                                            1097
*     DO;                           /*                       @Y30LB40*/
*       RFY                                                        1099
*        (R0,                                                      1099
*         R1,                                                      1099
*         R14,                                                     1099
*         R15) RSTD;                /*                       @Y30LB40*/
*       GEN(PUT   PRNTDCB,TRLINE);  /* PRINT TRAILER         @Y30LB40*/
         PUT   PRNTDCB,TRLINE
*       RFY                                                        1101
*        (R0,                                                      1101
*         R1,                                                      1101
*         R14,                                                     1101
*         R15) UNRSTD;              /*                       @Y30LB40*/
*       LINECNT=LINECNT+2;          /*                       @Y30LB40*/
         AL    LINECNT,@CF00052                                    1102
*       RETURN;                     /* GO GET NEXT RECORD    @OZ05079*/
@EL00013 DS    0H                                                  1103
@EF00013 DS    0H                                                  1103
@ER00013 LM    @14,@06,@SA00013                                    1103
         LM    @08,@12,@SA00013+36                                 1103
         BR    @14                                                 1103
*     END;                          /*                       @Y30LB40*/
*/*  PRINT MINI HEADERS                                      @Y30LB40*/
*                                                                  1105
*   PTR2=ADDR(FIRSTMIN);            /* SET POINTER TO 1ST MINI HEADER*/
@RF01097 LA    @15,FIRSTMIN                                        1105
         ST    @15,PTR2                                            1105
*   LSTMINAD=ADDR(FIRSTMIN)-ADDR(BLOCKFLG);/* INITIALIZE     @YM31015
*                                      LAST ADDRESS          @YM31015*/
         LA    LSTMINAD,32                                         1106
*   MINI1SW='1'B;                   /* SET FIRST MINI HEADER SWITCH
*                                                            @Y30LB40*/
         OI    MINI1SW,B'10000000'                                 1107
*   STDESTSW='1'B;                  /* SET FIRST STAGE/DESTAGE MINI
*                                                            @ZA13498*/
         OI    STDESTSW,B'10000000'                                1108
*MINI:                                                             1109
*   IF FLAG(2:2)='1'B               /* IS THIS A NON DATA MINI HEADER
*                                                            @Y30LB40*/
*       ×T4TIME=0&T5TIME=0          /* IS THIS A NULL MINI   @OZ05079*/
*     THEN                                                         1109
MINI     L     @15,PTR2                                            1109
         TM    FLAG(@15),B'01000000'                               1109
         BO    @RT01109                                            1109
         LH    @14,T4TIME(,@15)                                    1109
         N     @14,@CF01285                                        1109
         LTR   @14,@14                                             1109
         BNZ   @RF01109                                            1109
         LH    @15,T5TIME(,@15)                                    1109
         N     @15,@CF01285                                        1109
         LTR   @15,@15                                             1109
         BNZ   @RF01109                                            1109
@RT01109 DS    0H                                                  1110
*     DO;                           /* YES                   @Y30LB40*/
*       IF NXTMINAD=0               /* LAST MINI             @OZ05079*/
*           ×NXTMINAD<=LSTMINAD     /* CHECK LAST MINI HEADER      1111
*                                                            @OZ05079*/
*         THEN                                                     1111
         L     @15,PTR2                                            1111
         CLI   NXTMINAD(@15),0                                     1111
         BE    @RT01111                                            1111
         SLR   @14,@14                                             1111
         IC    @14,NXTMINAD(,@15)                                  1111
         CR    @14,LSTMINAD                                        1111
         BNH   @RT01111                                            1111
*         RETURN;                   /* GO TO NEXT ROUTINE    @OZ05079*/
*       LSTMINAD=NXTMINAD;          /* SET LAST MINI HEADER  @YM31015*/
         LR    LSTMINAD,@14                                        1113
*       PTR2=ADDR(RECIN)+NXTMINAD+8;/* SET POINTER           @YM31015*/
         LA    @15,RECIN                                           1114
         ALR   @15,@14                                             1114
         AL    @15,@CF00036                                        1114
         ST    @15,PTR2                                            1114
*       GO TO MINI;                 /* GO TO NEXT ROUTINE    @YM31015*/
         B     MINI                                                1115
*     END;                          /*                       @Y30LB40*/
*   MINILINE=' ';                   /* BLANK OUT MINI LINE   @OZ09557*/
@RF01109 MVI   MINILINE+1,C' '                                     1117
         MVC   MINILINE+2(119),MINILINE+1                          1117
         MVI   MINILINE,C' '                                       1117
*   IF MINI1SW='1'B                 /* TEST IF FIRST MINI    @Y30LB40*/
*     THEN                                                         1118
         TM    MINI1SW,B'10000000'                                 1118
         BNO   @RF01118                                            1118
*     DO;                           /* YES,FIRST MINI        @Y30LB40
*                                      IF TIME NOT YET CONTERTED THEN*/
*       IF PARMSW='I' THEN                                         1120
         CLI   PARMSW,C'I'                                         1120
         BNE   @RF01120                                            1120
*         CALL SDTABLE;             /* GO SAVE AND CONVERTS TIME     */
         BAL   @14,SDTABLE                                         1121
*       MINICDAT='  /   ';          /* SETUP DATE PRINT PATTERN      */
@RF01120 MVC   MINICDAT(6),@CC01200                                1122
*       MINICTIM='  :  :  ';        /* SETUP TIME PRINT PATTERN      */
         MVC   MINICTIM(8),@CC01201                                1123
*       CALL EDITFIX(ADDR(SVEYEAR),1,'N');/*                 @Y30LB40*/
         MVC   @AL00001+4(8),@AL01124                              1124
         LA    @15,SVEYEAR                                         1124
         ST    @15,@AFTEMPS+8                                      1124
         LA    @15,@AFTEMPS+8                                      1124
         ST    @15,@AL00001                                        1124
         LA    @01,@AL00001                                        1124
         BAL   @14,EDITFIX                                         1124
*       MINICDAT(1:2)=FIXOUT(12:13);/* PRINT CONVERTED YEAR          */
         MVC   MINICDAT(2),FIXOUT+11                               1125
*       CALL EDITFIX(ADDR(SVEJUL),2,'N');/*                  @Y30LB40*/
         MVC   @AL00001+4(8),@AL01126                              1126
         LA    @15,SVEJUL                                          1126
         ST    @15,@AFTEMPS+8                                      1126
         LA    @15,@AFTEMPS+8                                      1126
         ST    @15,@AL00001                                        1126
         LA    @01,@AL00001                                        1126
         BAL   @14,EDITFIX                                         1126
*       MINICDAT(4:6)=FIXOUT(11:13);/* PRINT CONVERTED DAY           */
         MVC   MINICDAT+3(3),FIXOUT+10                             1127
*       DAYS=SVETME;                /*                       @Y30LB40*/
         L     @15,SVETME                                          1128
         ST    @15,DAYS                                            1128
*       CALL CONVERTM;              /* CONVERT TIME TO HOURS,MINUTES
*                                      AND SECONDS                   */
         BAL   @14,CONVERTM                                        1129
*       CALL EDITFIX(ADDR(HOUR),2,'S');/*                    @Y30LB40*/
         MVC   @AL00001+4(8),@AL01130                              1130
         LA    @15,HOUR                                            1130
         ST    @15,@AFTEMPS+8                                      1130
         LA    @15,@AFTEMPS+8                                      1130
         ST    @15,@AL00001                                        1130
         LA    @01,@AL00001                                        1130
         BAL   @14,EDITFIX                                         1130
*       MINICTIM(1:2)=FIXOUT(12:13);/* PRINT HOURS           @Y30LB40*/
         MVC   MINICTIM(2),FIXOUT+11                               1131
*       CALL EDITFIX(ADDR(MINUTE),2,'N');/*                  @Y30LB40*/
         MVC   @AL00001+4(8),@AL01132                              1132
         LA    @15,MINUTE                                          1132
         ST    @15,@AFTEMPS+8                                      1132
         LA    @15,@AFTEMPS+8                                      1132
         ST    @15,@AL00001                                        1132
         LA    @01,@AL00001                                        1132
         BAL   @14,EDITFIX                                         1132
*       MINICTIM(4:5)=FIXOUT(12:13);/* PRINT MINUTES         @Y30LB40*/
         MVC   MINICTIM+3(2),FIXOUT+11                             1133
*       CALL EDITFIX(ADDR(SECOND),2,'N');/*                  @Y30LB40*/
         MVC   @AL00001+4(8),@AL01134                              1134
         LA    @15,SECOND                                          1134
         ST    @15,@AFTEMPS+8                                      1134
         LA    @15,@AFTEMPS+8                                      1134
         ST    @15,@AL00001                                        1134
         LA    @01,@AL00001                                        1134
         BAL   @14,EDITFIX                                         1134
*       MINICTIM(7:8)=FIXOUT(12:13);/* PRINT SECONDS         @Y30LB40*/
         MVC   MINICTIM+6(2),FIXOUT+11                             1135
*     END;                          /*                       @Y30LB40*/
*                                                                  1136
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @OZ09557*/
*   /* CHECK THE TIME IN THE FIRST STAGE OR DESTAGE          @OZ09557*/
*   /* MINI AGAINST THE TIME RANGE SPECIFIED IN THE          @OZ09557*/
*   /* PARM FIELD OF THE EXECUTE STATEMENT. IF               @OZ09557*/
*   /* WITHIN THE SPECIFIED RANGE, PRINT THE BLOCK           @OZ09557*/
*   /* HEADER AND PROCESS THE APPROPRIATE MINI               @OZ09557*/
*   /* HEADERS. IF NOT WITHIN THE SPECIFIED RANGE,           @OZ09557*/
*   /* RETURN TO THE MAINLINE WITHOUT PROCESSING             @OZ09557*/
*   /* EITHER THE HEADER OR THE MINIS.                       @OZ09557*/
*   /* ***********************************************       @OZ09557*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1137
*   IF CKTIME<CKSTIME               /*                       @OZ09557*/
*       ×CKTIME>CKETIME             /*                       @OZ09557*/
*     THEN                          /*                       @OZ09557*/
@RF01118 CLC   CKTIME(7),CKSTIME                                   1137
         BL    @RT01137                                            1137
         CLC   CKTIME(7),CKETIME                                   1137
         BH    @RT01137                                            1137
*     RETURN;                       /*                       @OZ09557*/
*   IF MINI1SW='1'B                 /* HEADER NOT WRITTEN    @OZ11670*/
*     THEN                          /*                       @OZ11670*/
         TM    MINI1SW,B'10000000'                                 1139
         BNO   @RF01139                                            1139
*     CALL BLKHDR;                  /* PRINT BLOCK HEADER    @OZ11670*/
*                                                                  1140
         BAL   @14,BLKHDR                                          1140
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @ZA13498*/
*   /* CONVERT T1 TIME (BUT NOT DATE) FOR SECOND OR          @ZA13498*/
*   /* SUBSEQUENT STAGE/DESTAGE MINIS FOR THE SAME           @ZA13498*/
*   /* BLOCK HEADER.                                         @ZA13498*/
*   /* ***********************************************       @ZA13498*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1141
*   IF STDESTSW='0'B                /*                       @ZA13498*/
*     THEN                          /*                       @ZA13498*/
@RF01139 TM    STDESTSW,B'10000000'                                1141
         BNZ   @RF01141                                            1141
*     DO;                           /*                       @ZA13498*/
*       MINICTIM='  :  :  ';        /*                       @ZA13498*/
         MVC   MINICTIM(8),@CC01201                                1143
*       HOLDTXTM=T1TIME;            /*                       @ZA13498*/
         L     @01,PTR2                                            1144
         L     HOLDTXTM,T1TIME(,@01)                               1144
*       SLL(HOLDTXTM,8);            /*                       @ZA13498*/
         SLL   HOLDTXTM,8                                          1145
*       SRL(HOLDTXTM,16);           /*                       @ZA13498*/
         SRL   HOLDTXTM,16                                         1146
*       CALL TIME2345;              /*                       @ZA13498*/
         BAL   @14,TIME2345                                        1147
*       CALL EDITFIX(ADDR(HOUR),2,'S');/*                    @ZA13498*/
         MVC   @AL00001+4(8),@AL01148                              1148
         LA    @15,HOUR                                            1148
         ST    @15,@AFTEMPS+8                                      1148
         LA    @15,@AFTEMPS+8                                      1148
         ST    @15,@AL00001                                        1148
         LA    @01,@AL00001                                        1148
         BAL   @14,EDITFIX                                         1148
*       MINICTIM(1:2)=FIXOUT(12:13);/*                       @ZA13498*/
         MVC   MINICTIM(2),FIXOUT+11                               1149
*       CALL EDITFIX(ADDR(MINUTE),2,'N');/*                  @ZA13498*/
         MVC   @AL00001+4(8),@AL01150                              1150
         LA    @15,MINUTE                                          1150
         ST    @15,@AFTEMPS+8                                      1150
         LA    @15,@AFTEMPS+8                                      1150
         ST    @15,@AL00001                                        1150
         LA    @01,@AL00001                                        1150
         BAL   @14,EDITFIX                                         1150
*       MINICTIM(4:5)=FIXOUT(12:13);/*                       @ZA13498*/
         MVC   MINICTIM+3(2),FIXOUT+11                             1151
*       CALL EDITFIX(ADDR(SECOND),2,'N');/*                  @ZA13498*/
         MVC   @AL00001+4(8),@AL01152                              1152
         LA    @15,SECOND                                          1152
         ST    @15,@AFTEMPS+8                                      1152
         LA    @15,@AFTEMPS+8                                      1152
         ST    @15,@AL00001                                        1152
         LA    @01,@AL00001                                        1152
         BAL   @14,EDITFIX                                         1152
*       MINICTIM(7:8)=FIXOUT(12:13);/*                       @ZA13498*/
         MVC   MINICTIM+6(2),FIXOUT+11                             1153
*     END;                          /*                       @ZA13498*/
*   STDESTSW='0'B;                  /*                       @ZA13498*/
@RF01141 NI    STDESTSW,B'01111111'                                1155
*   IF LINECNT>52                   /* NEW PAGE HEADING NEEDED     1156
*                                                            @Y30LB40*/
*     THEN                                                         1156
         C     LINECNT,@CF00040                                    1156
         BNH   @RF01156                                            1156
*     CALL NEWPAGE;                 /*                       @Y30LB40*/
         BAL   @14,NEWPAGE                                         1157
*   HOLDHDG4=HDNG4;                 /*                       @CCCCCCC*/
@RF01156 MVC   HOLDHDG4(121),HDNG4                                 1158
*   IF FLAG(1:2)='00'B              /*                       @CCCCCCC*/
*     THEN                          /*                       @CCCCCCC*/
         L     @01,PTR2                                            1159
         TM    FLAG(@01),B'11000000'                               1159
         BNZ   @RF01159                                            1159
*     HOLDDEST='DESTGE';            /*                       @CCCCCCC*/
         MVC   HOLDDEST(6),@CC01202                                1160
*   RFY                                                            1161
*    (R0,                                                          1161
*     R1,                                                          1161
*     R14,                                                         1161
*     R15) RSTD;                    /*                       @Y30LB40*/
@RF01159 DS    0H                                                  1162
*   GEN(PUT   PRNTDCB,HOLDHDG4);    /* MINI HEADER HEADLINES 1     1162
*                                                            @CCCCCCC*/
         PUT   PRNTDCB,HOLDHDG4
*   GEN(PUT   PRNTDCB,HDNG5);       /*                       @Y30LB40*/
         PUT   PRNTDCB,HDNG5
*   RFY                                                            1164
*    (R0,                                                          1164
*     R1,                                                          1164
*     R14,                                                         1164
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   LINECNT=LINECNT+3;              /*                       @Y30LB40*/
         AL    LINECNT,@CF00117                                    1165
*   CALL EDITBIT(ADDR(SEQUENCE));   /* BUILD SEQUENCE FIELD  @Y30LB40*/
         LA    @15,PTR2                                            1166
         ST    @15,@AL00001                                        1166
         LA    @01,@AL00001                                        1166
         BAL   @14,EDITBIT                                         1166
*   MINISEQ=BITOUT;                 /*                       @Y30LB40*/
         MVC   MINISEQ(8),BITOUT                                   1167
*   CALL EDITBIT(ADDR(FLAG));       /* BUILD MINI FLAG FIELD @Y30LB40*/
         L     @01,PTR2                                            1168
         LA    @15,FLAG(,@01)                                      1168
         ST    @15,@AFTEMPS+8                                      1168
         LA    @15,@AFTEMPS+8                                      1168
         ST    @15,@AL00001                                        1168
         LA    @01,@AL00001                                        1168
         BAL   @14,EDITBIT                                         1168
*   MINIFLAG=BITOUT;                /*                       @Y30LB40*/
         MVC   MINIFLAG(8),BITOUT                                  1169
*   CALL EDITHEX(ADDR(NXTMINAD),1); /*                       @YD00173*/
         L     @01,PTR2                                            1170
         LA    @15,NXTMINAD(,@01)                                  1170
         ST    @15,@AFTEMPS+8                                      1170
         LA    @15,@AFTEMPS+8                                      1170
         ST    @15,@AL00001                                        1170
         LA    @15,@CF00045                                        1170
         ST    @15,@AL00001+4                                      1170
         LA    @01,@AL00001                                        1170
         BAL   @14,EDITHEX                                         1170
*   MINIADDR=HEXOUT(1:2);           /* PRINT NEXT MINI ADDRESS     1171
*                                                            @YD00173*/
         MVC   MINIADDR(2),HEXOUT                                  1171
*   RCDTME=T1TIME;                  /*                       @Y30LB40*/
         L     @01,PTR2                                            1172
         L     @15,T1TIME(,@01)                                    1172
         ST    @15,RCDTME                                          1172
*   SRL(RCDTME,8);                  /* GET HIGH ORDER THREE BYTES OF
*                                      T1                    @Y30LB40*/
         SRL   @15,8                                               1173
         ST    @15,RCDTME                                          1173
*   CALL EDITFIX(ADDR(RCDTME),4,'S');/* EDIT T1 TIME         @Y30LB40*/
         MVC   @AL00001+4(8),@AL01174                              1174
         LA    @15,RCDTME                                          1174
         ST    @15,@AFTEMPS+8                                      1174
         LA    @15,@AFTEMPS+8                                      1174
         ST    @15,@AL00001                                        1174
         LA    @01,@AL00001                                        1174
         BAL   @14,EDITFIX                                         1174
*   MINIT1A=FIXOUT(6:13);           /*                       @Y30LB40*/
         MVC   MINIT1A(8),FIXOUT+5                                 1175
*   RCDTME=T1TIME;                  /*                       @Y30LB40*/
         L     @01,PTR2                                            1176
         L     @15,T1TIME(,@01)                                    1176
         ST    @15,RCDTME                                          1176
*   SLL(RCDTME,24);                 /* GET LOW ORDER BYTE OF T1    1177
*                                                            @Y30LB40*/
         SLL   @15,24                                              1177
         ST    @15,RCDTME                                          1177
*   SRL(RCDTME,24);                 /*                       @Y30LB40*/
         L     @15,RCDTME                                          1178
         SRL   @15,24                                              1178
         ST    @15,RCDTME                                          1178
*   CALL EDITFIX(ADDR(RCDTME),4,'N');/*                      @Y30LB40*/
         MVC   @AL00001+4(8),@AL01179                              1179
         LA    @15,RCDTME                                          1179
         ST    @15,@AFTEMPS+8                                      1179
         LA    @15,@AFTEMPS+8                                      1179
         ST    @15,@AL00001                                        1179
         LA    @01,@AL00001                                        1179
         BAL   @14,EDITFIX                                         1179
*   MINIT1C=FIXOUT(11:13);          /* PRINT T1              @Y30LB40*/
         MVC   MINIT1C(3),FIXOUT+10                                1180
*   MINIT1B='-';                    /*                       @Y30LB40*/
         MVI   MINIT1B,C'-'                                        1181
*   HOLDTXTM=T4TIME;                /*                       @ZA13498*/
         L     @01,PTR2                                            1182
         LH    HOLDTXTM,T4TIME(,@01)                               1182
         N     HOLDTXTM,@CF01285                                   1182
*   CALL TIME2345;                  /*                       @ZA13498*/
         BAL   @14,TIME2345                                        1183
*   CALL EDITFIX(ADDR(HOUR),2,'S'); /*                       @ZA13498*/
         MVC   @AL00001+4(8),@AL01184                              1184
         LA    @15,HOUR                                            1184
         ST    @15,@AFTEMPS+8                                      1184
         LA    @15,@AFTEMPS+8                                      1184
         ST    @15,@AL00001                                        1184
         LA    @01,@AL00001                                        1184
         BAL   @14,EDITFIX                                         1184
*   T4HOUR=FIXOUT(12:13);           /*                       @ZA13498*/
         MVC   T4HOUR(2),FIXOUT+11                                 1185
*   T4SEP1=':';                     /*                       @ZA13498*/
         MVI   T4SEP1,C':'                                         1186
*   CALL EDITFIX(ADDR(MINUTE),2,'N');/*                      @ZA13498*/
         MVC   @AL00001+4(8),@AL01187                              1187
         LA    @15,MINUTE                                          1187
         ST    @15,@AFTEMPS+8                                      1187
         LA    @15,@AFTEMPS+8                                      1187
         ST    @15,@AL00001                                        1187
         LA    @01,@AL00001                                        1187
         BAL   @14,EDITFIX                                         1187
*   T4MINUTE=FIXOUT(12:13);         /*                       @ZA13498*/
         MVC   T4MINUTE(2),FIXOUT+11                               1188
*   T4SEP2=':';                     /*                       @ZA13498*/
         MVI   T4SEP2,C':'                                         1189
*   CALL EDITFIX(ADDR(SECOND),2,'N');/*                      @ZA13498*/
         MVC   @AL00001+4(8),@AL01190                              1190
         LA    @15,SECOND                                          1190
         ST    @15,@AFTEMPS+8                                      1190
         LA    @15,@AFTEMPS+8                                      1190
         ST    @15,@AL00001                                        1190
         LA    @01,@AL00001                                        1190
         BAL   @14,EDITFIX                                         1190
*   T4SECOND=FIXOUT(12:13);         /*                       @ZA13498*/
         MVC   T4SECOND(2),FIXOUT+11                               1191
*   HOLDTXTM=T5TIME;                /*                       @ZA13498*/
         L     @01,PTR2                                            1192
         LH    HOLDTXTM,T5TIME(,@01)                               1192
         N     HOLDTXTM,@CF01285                                   1192
*   CALL TIME2345;                  /*                       @ZA13498*/
         BAL   @14,TIME2345                                        1193
*   CALL EDITFIX(ADDR(HOUR),2,'S'); /*                       @ZA13498*/
         MVC   @AL00001+4(8),@AL01194                              1194
         LA    @15,HOUR                                            1194
         ST    @15,@AFTEMPS+8                                      1194
         LA    @15,@AFTEMPS+8                                      1194
         ST    @15,@AL00001                                        1194
         LA    @01,@AL00001                                        1194
         BAL   @14,EDITFIX                                         1194
*   T5HOUR=FIXOUT(12:13);           /*                       @ZA13498*/
         MVC   T5HOUR(2),FIXOUT+11                                 1195
*   T5SEP1=':';                     /*                       @ZA13498*/
         MVI   T5SEP1,C':'                                         1196
*   CALL EDITFIX(ADDR(MINUTE),2,'N');/*                      @ZA13498*/
         MVC   @AL00001+4(8),@AL01197                              1197
         LA    @15,MINUTE                                          1197
         ST    @15,@AFTEMPS+8                                      1197
         LA    @15,@AFTEMPS+8                                      1197
         ST    @15,@AL00001                                        1197
         LA    @01,@AL00001                                        1197
         BAL   @14,EDITFIX                                         1197
*   T5MINUTE=FIXOUT(12:13);         /*                       @ZA13498*/
         MVC   T5MINUTE(2),FIXOUT+11                               1198
*   T5SEP2=':';                     /*                       @ZA13498*/
         MVI   T5SEP2,C':'                                         1199
*   CALL EDITFIX(ADDR(SECOND),2,'N');/*                      @ZA13498*/
         MVC   @AL00001+4(8),@AL01200                              1200
         LA    @15,SECOND                                          1200
         ST    @15,@AFTEMPS+8                                      1200
         LA    @15,@AFTEMPS+8                                      1200
         ST    @15,@AL00001                                        1200
         LA    @01,@AL00001                                        1200
         BAL   @14,EDITFIX                                         1200
*   T5SECOND=FIXOUT(12:13);         /*                       @ZA13498*/
         MVC   T5SECOND(2),FIXOUT+11                               1201
*   CALL EDITHEX(ADDR(FUNCID),1);   /*                       @Y30LB40*/
         L     @01,PTR2                                            1202
         LA    @15,FUNCID(,@01)                                    1202
         ST    @15,@AFTEMPS+8                                      1202
         LA    @15,@AFTEMPS+8                                      1202
         ST    @15,@AL00001                                        1202
         LA    @15,@CF00045                                        1202
         ST    @15,@AL00001+4                                      1202
         LA    @01,@AL00001                                        1202
         BAL   @14,EDITHEX                                         1202
*   MINIFUNC=HEXOUT(1:2);           /* PRINT COMMAND CODE    @Y30LB40*/
         MVC   MINIFUNC(2),HEXOUT                                  1203
*   CALL EDITHEX(ADDR(CPUID),1);    /*                       @Y30LB40*/
         L     @01,PTR2                                            1204
         LA    @15,CPUID(,@01)                                     1204
         ST    @15,@AFTEMPS+8                                      1204
         LA    @15,@AFTEMPS+8                                      1204
         ST    @15,@AL00001                                        1204
         LA    @15,@CF00045                                        1204
         ST    @15,@AL00001+4                                      1204
         LA    @01,@AL00001                                        1204
         BAL   @14,EDITHEX                                         1204
*   MINICPU=HEXOUT(1:2);            /* PRINT HOST CPU ID     @Y30LB40*/
         MVC   MINICPU(2),HEXOUT                                   1205
*   CALL EDITBIT(ADDR(PLFLAG));     /*                       @Y30LB40*/
         L     @01,PTR2                                            1206
         LA    @15,PLFLAG(,@01)                                    1206
         ST    @15,@AFTEMPS+8                                      1206
         LA    @15,@AFTEMPS+8                                      1206
         ST    @15,@AL00001                                        1206
         LA    @01,@AL00001                                        1206
         BAL   @14,EDITBIT                                         1206
*   MINIPGFL=BITOUT;                /* PRINT PAGE LIST FLAG  @Y30LB40*/
         MVC   MINIPGFL(8),BITOUT                                  1207
*   CALL EDITHEX(ADDR(VUA),1);      /*                       @Y30LB40*/
         L     @01,PTR2                                            1208
         LA    @15,VUA(,@01)                                       1208
         ST    @15,@AFTEMPS+8                                      1208
         LA    @15,@AFTEMPS+8                                      1208
         ST    @15,@AL00001                                        1208
         LA    @15,@CF00045                                        1208
         ST    @15,@AL00001+4                                      1208
         LA    @01,@AL00001                                        1208
         BAL   @14,EDITHEX                                         1208
*   MINIVUA=HEXOUT(1:2);            /* PRINT VIRTUAL UNIT ADDRESS  1209
*                                                            @Y30LB40*/
         MVC   MINIVUA(2),HEXOUT                                   1209
*   CALL EDITHEX(ADDR(VVA),1);      /*                       @Y30LB40*/
         L     @01,PTR2                                            1210
         LA    @15,VVA(,@01)                                       1210
         ST    @15,@AFTEMPS+8                                      1210
         LA    @15,@AFTEMPS+8                                      1210
         ST    @15,@AL00001                                        1210
         LA    @15,@CF00045                                        1210
         ST    @15,@AL00001+4                                      1210
         LA    @01,@AL00001                                        1210
         BAL   @14,EDITHEX                                         1210
*   MINIVVA=HEXOUT(1:2);            /* PRINT VIRTUAL VOLUME ADDRESS
*                                                            @Y30LB40*/
         MVC   MINIVVA(2),HEXOUT                                   1211
*   CALL EDITFIX(ADDR(COUNT),1,'S');/*                       @Y30LB40*/
         MVC   @AL00001+4(8),@AL01212                              1212
         L     @01,PTR2                                            1212
         LA    @15,COUNT(,@01)                                     1212
         ST    @15,@AFTEMPS+8                                      1212
         LA    @15,@AFTEMPS+8                                      1212
         ST    @15,@AL00001                                        1212
         LA    @01,@AL00001                                        1212
         BAL   @14,EDITFIX                                         1212
*   MINICNT=FIXOUT(11:13);          /* PRINT PAGE COUNT      @Y30LB40*/
         MVC   MINICNT(3),FIXOUT+10                                1213
*   CONVERT=0;                      /*                       @Y30LB40*/
         SLR   @15,@15                                             1214
         STH   @15,CONVERT                                         1214
*   FLD2=COUNT;                     /*                       @Y30LB40*/
         L     @01,PTR2                                            1215
         MVC   FLD2(1),COUNT(@01)                                  1215
*   J=CONVERT;                      /* SAVE PAGE LIST COUNT  @Y30LB40*/
         LH    @14,CONVERT                                         1216
         STH   @14,J                                               1216
*   K=0;                            /*                       @Y30LB40*/
         STH   @15,K                                               1217
*   RFY                                                            1218
*    (R0,                                                          1218
*     R1,                                                          1218
*     R14,                                                         1218
*     R15) RSTD;                    /*                       @Y30LB40*/
*   GEN(PUT   PRNTDCB,PRNTLINE);    /* PRINT MINI HEADER LINE      1219
*                                                            @OZ09557*/
         PUT   PRNTDCB,PRNTLINE
*   RFY                                                            1220
*    (R0,                                                          1220
*     R1,                                                          1220
*     R14,                                                         1220
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   PRNTLINE=' ';                   /*                       @OZ09557*/
         MVI   PRNTLINE+1,C' '                                     1221
         MVC   PRNTLINE+2(119),PRNTLINE+1                          1221
         MVI   PRNTLINE,C' '                                       1221
*   LINECNT=LINECNT+1;              /*                       @Y30LB40*/
         AL    LINECNT,@CF00045                                    1222
*   IF J^=0                         /* IF ANY PAGE LIST      @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         LH    @15,J                                               1223
         LTR   @15,@15                                             1223
         BZ    @RF01223                                            1223
*     CALL PAGE;                    /* PRINT PAGE LISTS      @OZ05079*/
         BAL   @14,PAGE                                            1224
*   IF NXTMINAD=0                   /* LAST MINI             @OZ05079*/
*       ×NXTMINAD<=LSTMINAD         /* CHECK LAST MINI HEADER      1225
*                                                            @YM31015*/
*     THEN                                                         1225
@RF01223 L     @15,PTR2                                            1225
         CLI   NXTMINAD(@15),0                                     1225
         BE    @RT01225                                            1225
         SLR   @14,@14                                             1225
         IC    @14,NXTMINAD(,@15)                                  1225
         CR    @14,LSTMINAD                                        1225
         BNH   @RT01225                                            1225
*     RETURN;                       /* GO TO NEXT ROUTINE    @OZ05079*/
*   LSTMINAD=NXTMINAD;              /* SET LAST MINI HEADER  @YM31015*/
         LR    LSTMINAD,@14                                        1227
*   PTR2=ADDR(RECIN)+NXTMINAD+8;    /* SET POINTER           @YM31015*/
         LA    @15,RECIN                                           1228
         ALR   @15,@14                                             1228
         AL    @15,@CF00036                                        1228
         ST    @15,PTR2                                            1228
*   GO TO MINI;                     /* PTR OK, GO GET NEXT MINI    1229
*                                                            @Y30LB40*/
         B     MINI                                                1229
*   END BLOCK;                      /*                       @OZ05079*/
         B     @EL00013                                            1230
*                                                                  1231
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - PAGE                                    @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - PRINT PAGE LIST                               @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  1231
*PAGE:                                                             1231
*   PROCEDURE;                      /*                       @OZ05079*/
PAGE     STM   @14,@06,@SA00014                                    1231
         STM   @08,@12,@SA00014+36                                 1231
*STARTPG:                           /*                       @OZ05079*/
*   IF LINECNT>52 THEN                                             1232
STARTPG  C     LINECNT,@CF00040                                    1232
         BNH   @RF01232                                            1232
*     CALL NEWPAGE;                 /*                       @Y30LB40*/
         BAL   @14,NEWPAGE                                         1233
*   RFY                                                            1234
*    (R0,                                                          1234
*     R1,                                                          1234
*     R14,                                                         1234
*     R15) RSTD;                    /*                       @Y30LB40*/
@RF01232 DS    0H                                                  1235
*   GEN(PUT   PRNTDCB,HDNG6);       /* PRINT PAGE LIST HEADLINES 1 1235
*                                      AND 2                         */
         PUT   PRNTDCB,HDNG6
*   GEN(PUT   PRNTDCB,HDNG7);       /*                       @Y30LB40*/
         PUT   PRNTDCB,HDNG7
*   RFY                                                            1237
*    (R0,                                                          1237
*     R1,                                                          1237
*     R14,                                                         1237
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   LINECNT=LINECNT+3;              /*                       @Y30LB40*/
         AL    LINECNT,@CF00117                                    1238
*   DO WHILE(K^=J);                 /* NUMBER PAGES EQUAL COUNT    1239
*                                                            @Y30LB40*/
         B     @DE01239                                            1239
@DL01239 DS    0H                                                  1240
*     IF LINECNT>55                 /* PAGE FULL             @Y30LB40*/
*       THEN                                                       1240
         C     LINECNT,@CF01089                                    1240
         BNH   @RF01240                                            1240
*       DO;                         /*                       @Y30LB40*/
*         CALL NEWPAGE;             /*                       @Y30LB40*/
         BAL   @14,NEWPAGE                                         1242
*         GO TO STARTPG;            /*                       @OZ05079*/
         B     STARTPG                                             1243
*       END;                        /*                       @Y30LB40*/
*     PAGELINE=' ';                 /*                       @Y30LB40*/
@RF01240 MVI   PAGELINE+1,C' '                                     1245
         MVC   PAGELINE+2(119),PAGELINE+1                          1245
         MVI   PAGELINE,C' '                                       1245
*     K=K+1;                        /*                       @Y30LB40*/
         LA    @06,1                                               1246
         AH    @06,K                                               1246
         STH   @06,K                                               1246
*     FLD2=SAVESDG;                 /* SDG PART OF DASD SSID @OZ08841*/
         MVC   FLD2(1),SAVESDG                                     1247
*     IF DEVICE(K,1:1)='1'B THEN                                   1248
         SLA   @06,2                                               1248
         L     @01,PTR2                                            1248
         ALR   @01,@06                                             1248
         TM    DEVICE-4(@01),B'00000100'                           1248
         BNO   @RF01248                                            1248
*       FLD2(6:6)='1'B;             /*                       @Y30LB40*/
         OI    FLD2,B'00000100'                                    1249
*     IF DEVICE(K,2:2)='1'B THEN                                   1250
@RF01248 LH    @06,K                                               1250
         SLA   @06,2                                               1250
         L     @01,PTR2                                            1250
         ALR   @01,@06                                             1250
         TM    DEVICE-4(@01),B'00000010'                           1250
         BNO   @RF01250                                            1250
*       FLD2(7:7)='1'B;             /*                       @Y30LB40*/
         OI    FLD2,B'00000010'                                    1251
*     IF DEVICE(K,3:3)='1'B THEN                                   1252
@RF01250 LH    @06,K                                               1252
         SLA   @06,2                                               1252
         L     @01,PTR2                                            1252
         ALR   @01,@06                                             1252
         TM    DEVICE-4(@01),B'00000001'                           1252
         BNO   @RF01252                                            1252
*       FLD2(8:8)='1'B;             /*                       @Y30LB40*/
         OI    FLD2,B'00000001'                                    1253
*     CALL EDITHEX(ADDR(FLD2),1);   /* 2 LOW-ORDER DIGITS    @OZ08841*/
@RF01252 LA    @06,FLD2                                            1254
         ST    @06,@AFTEMPS+12                                     1254
         LA    @06,@AFTEMPS+12                                     1254
         ST    @06,@AL00001                                        1254
         LA    @06,@CF00045                                        1254
         ST    @06,@AL00001+4                                      1254
         LA    @01,@AL00001                                        1254
         BAL   @14,EDITHEX                                         1254
*     PAGEDEV(2:3)=HEXOUT(1:2);     /* TO PRINT LINE         @OZ08841*/
         MVC   PAGEDEV+1(2),HEXOUT                                 1255
*     PAGEDEV(1:1)='0';             /* HIGH-ORDER DIGIT      @OZ08841*/
         MVI   PAGEDEV,C'0'                                        1256
*     CALL EDITFIX(ADDR(VIRTPAGE(K)),1,'S');/*               @Y30LB40*/
         MVC   @AL00001+4(8),@AL01257                              1257
         LH    @06,K                                               1257
         SLA   @06,2                                               1257
         L     @01,PTR2                                            1257
         LA    @06,VIRTPAGE-4(@06,@01)                             1257
         ST    @06,@AFTEMPS+12                                     1257
         LA    @06,@AFTEMPS+12                                     1257
         ST    @06,@AL00001                                        1257
         LA    @01,@AL00001                                        1257
         BAL   @14,EDITFIX                                         1257
*     PAGEVP=FIXOUT(11:13);         /* PRINT VIRTUAL PAGE NUMBER   1258
*                                                            @Y30LB40*/
         MVC   PAGEVP(3),FIXOUT+10                                 1258
*     CALL EDITFIX(ADDR(REALPAGE(K)),1,'S');/*               @Y30LB40*/
         MVC   @AL00001+4(8),@AL01259                              1259
         LH    @06,K                                               1259
         SLA   @06,2                                               1259
         L     @01,PTR2                                            1259
         LA    @06,REALPAGE-4(@06,@01)                             1259
         ST    @06,@AFTEMPS+12                                     1259
         LA    @06,@AFTEMPS+12                                     1259
         ST    @06,@AL00001                                        1259
         LA    @01,@AL00001                                        1259
         BAL   @14,EDITFIX                                         1259
*     PAGERP=FIXOUT(11:13);         /* PRINT REAL PAGE NUMBER      1260
*                                                            @Y30LB40*/
         MVC   PAGERP(3),FIXOUT+10                                 1260
*     CALL EDITBIT(ADDR(CYLIND(K)));/*                       @Y30LB40*/
         LH    @06,K                                               1261
         SLA   @06,2                                               1261
         L     @01,PTR2                                            1261
         LA    @06,CYLIND-4(@06,@01)                               1261
         ST    @06,@AFTEMPS+12                                     1261
         LA    @06,@AFTEMPS+12                                     1261
         ST    @06,@AL00001                                        1261
         LA    @01,@AL00001                                        1261
         BAL   @14,EDITBIT                                         1261
*     PAGECYL=BITOUT;               /* PRINT CYLINDER INDICATORS   1262
*                                                            @Y30LB40*/
         MVC   PAGECYL(8),BITOUT                                   1262
*     RFY                                                          1263
*      (R0,                                                        1263
*       R1,                                                        1263
*       R14,                                                       1263
*       R15) RSTD;                  /*                       @Y30LB40*/
*     GEN(PUT   PRNTDCB,PAGELINE);  /* PRINT PAGE LIST LINE  @Y30LB40*/
         PUT   PRNTDCB,PAGELINE
*     RFY                                                          1265
*      (R0,                                                        1265
*       R1,                                                        1265
*       R14,                                                       1265
*       R15) UNRSTD;                /*                       @Y30LB40*/
*     LINECNT=LINECNT+1;            /*                       @Y30LB40*/
         AL    LINECNT,@CF00045                                    1266
*   END;                            /*                       @Y30LB40*/
@DE01239 CLC   K(2),J                                              1267
         BNE   @DL01239                                            1267
*   END PAGE;                       /*                       @OZ05079*/
@EL00014 DS    0H                                                  1268
@EF00014 DS    0H                                                  1268
@ER00014 LM    @14,@06,@SA00014                                    1268
         LM    @08,@12,@SA00014+36                                 1268
         BR    @14                                                 1268
*                                                                  1269
*/********************************************************** @OZ09557*/
*/*                                                          @OZ09557*/
*/* PROCEDURE NAME - SDTABLE                                 @OZ09557*/
*/*                                                          @OZ09557*/
*/* FUNCTION - THIS PROCEDURE IS CALLED TO PROCESS THE FIRST @OZ09557*/
*/*            STAGE OR DESTAGE MINI IN EACH TRACE DETAIL    @OZ09557*/
*/*            RECORD.  IF A TRACE HEADER HAS BEEN           @OZ09557*/
*/*            PROCESSED, THE MSC TIME IN THE DETAIL RECORD  @OZ09557*/
*/*            IS CONVERTED TO SECONDS FROM HUNDREDTHS OF A  @OZ09557*/
*/*            SECOND, AND COMPARED TO THE MSC TIME IN THE   @OZ09557*/
*/*            LAST HEADER RECORD.                           @OZ09557*/
*/********************************************************** @OZ09557*/
*                                                                  1269
*SDTABLE:                                                          1269
*   PROC OPTIONS(SAVE);                                            1269
SDTABLE  STM   @14,@12,12(@13)                                     1269
*   CKTIME=CKTIME&&CKTIME;          /* CLEAR DATES AND TIME  @Y30LB40*/
         XC    CKTIME(7),CKTIME                                    1270
*   IF M>0                          /* WAS A HEADER STORED   @Y30LB40*/
*     THEN                                                         1271
         LH    @15,M                                               1271
         LTR   @15,@15                                             1271
         BNP   @RF01271                                            1271
*     DO;                           /* CONVERT DATE AND TIME @Y30LB40*/
*       RCDTME=T1TIME;              /* SAVE TIME             @Y30LB40*/
         L     @01,PTR2                                            1273
         L     @15,T1TIME(,@01)                                    1273
         ST    @15,RCDTME                                          1273
*       SRL(RCDTME,8);              /* TO QUARTER SECONDS    @Y30LB40*/
         SRL   @15,8                                               1274
         ST    @15,RCDTME                                          1274
*       RCDTME=RCDTME/4;            /* REDUCE TO SECONDS     @Y30LB40*/
*                                                                  1275
         L     @00,RCDTME                                          1275
         SRDA  @00,32                                              1275
         D     @00,@CF00104                                        1275
         ST    @01,RCDTME                                          1275
*       /*************************************************************/
*       /*                                                           */
*       /* ************************************************* @OZ09557*/
*       /* IF THE MSC TIME IN THE DETAIL RECORD IS GREATER   @OZ09557*/
*       /* THAN THE MSC TIME IN THE HEADER RECORD, THEN      @OZ09557*/
*       /* CALCULATE THE EQUIVALENT JULIAN DATE AND TIME FOR @OZ09557*/
*       /* THIS RECORD FROM THE RELATIVE HOST DATE AND TIME  @OZ09557*/
*       /* IN THE HEADER RECORD.                             @OZ09557*/
*       /* ************************************************* @OZ09557*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1276
*       IF RCDTME>HDRTME            /* RCD TIME LATER THAN HDR TIME
*                                                            @OZ09557*/
*         THEN                                                     1276
         L     @15,HDRTME                                          1276
         CR    @01,@15                                             1276
         BNH   @RF01276                                            1276
*         DO;                       /* YES                   @Y30LB40*/
*           SVETME=HOSTTME+(RCDTME-HDRTME);/* CALC TOD       @OZ09557*/
         SLR   @01,@15                                             1278
         AL    @01,HOSTTME                                         1278
         ST    @01,SVETME                                          1278
*           SVEYEAR=HOSTYEAR;       /* SET YEAR              @OZ09557*/
         LH    @15,HOSTYEAR                                        1279
         STC   @15,SVEYEAR                                         1279
*           SVEJUL=HOSTJUL;         /* SET JULIAN DAY        @OZ09557*/
         LH    @15,HOSTJUL                                         1280
         STH   @15,SVEJUL                                          1280
*           DO WHILE(SVETME>86399); /* A FULL DAY OR MORE    @Y30LB40*/
         B     @DE01281                                            1281
@DL01281 DS    0H                                                  1282
*             SVEJUL=SVEJUL+1;      /* BUMP DAY              @Y30LB40*/
         LA    @15,1                                               1282
         AH    @15,SVEJUL                                          1282
         STH   @15,SVEJUL                                          1282
*             SVETME=SVETME-86400;  /* DECREMENT BY 1 DAY    @Y30LB40*/
         L     @14,SVETME                                          1283
         SL    @14,@CF01088                                        1283
         ST    @14,SVETME                                          1283
*             IF SVEJUL>365         /* ADJUST YEAR AND DATE  @Y30LB40*/
*               THEN                                               1284
         C     @15,@CF01095                                        1284
         BNH   @RF01284                                            1284
*               DO;                 /* CHECK FOR LEAP YEAR   @Y30LB40*/
*                 IF(CKTIME(1:1)&'00000011'B)='00000000'B THEN     1286
         MVC   @TS00001(1),CKTIME                                  1286
         NI    @TS00001,B'00000011'                                1286
         CLI   @TS00001,B'00000000'                                1286
         BNE   @RF01286                                            1286
*                   IF SVEJUL=366   /* LEARYR,IS DAY 366     @Y30LB40*/
*                     THEN                                         1287
         C     @15,@CF01110                                        1287
         BE    @RT01287                                            1287
*                     ;             /* YES,LEAVE YEAR ALONE          */
*                   ELSE                                           1289
*                     DO;           /* NO                    @Y30LB40*/
*                       SVEYEAR=SVEYEAR+1;/* BUMP YEAR       @Y30LB40*/
         LA    @15,1                                               1290
         SLR   @14,@14                                             1290
         IC    @14,SVEYEAR                                         1290
         ALR   @14,@15                                             1290
         STC   @14,SVEYEAR                                         1290
*                       SVEJUL=1;   /* RESET DAY             @Y30LB40*/
         STH   @15,SVEJUL                                          1291
*                     END;          /*                       @Y30LB40*/
*                 ELSE                                             1293
*                   DO;             /* NOT LEAP YEAR         @Y30LB40*/
         B     @RC01286                                            1293
@RF01286 DS    0H                                                  1294
*                     SVEYEAR=SVEYEAR+1;/* BUMP YEAR         @Y30LB40*/
         LA    @15,1                                               1294
         SLR   @14,@14                                             1294
         IC    @14,SVEYEAR                                         1294
         ALR   @14,@15                                             1294
         STC   @14,SVEYEAR                                         1294
*                     SVEJUL=1;     /* RESET DAY             @Y30LB40*/
         STH   @15,SVEJUL                                          1295
*                   END;            /*                       @Y30LB40*/
*               END;                /*                       @Y30LB40*/
@RC01286 DS    0H                                                  1298
*           END;                    /*                       @Y30LB40*/
@RF01284 DS    0H                                                  1298
@DE01281 L     @15,SVETME                                          1298
         C     @15,@CF01096                                        1298
         BH    @DL01281                                            1298
*         END;                      /*                       @Y30LB40*/
*                                                                  1299
*       /*************************************************************/
*       /*                                                           */
*       /* ************************************************* @OZ09557*/
*       /* IF THE MSC TIME IN THE DETAIL RECORD IS LESS THAN @OZ09557*/
*       /* THE MSC TIME IN THE HEADER RECORD, EITHER THE     @OZ09557*/
*       /* DETAIL RECORD WAS PROCESSED BEFORE THE HEADER     @OZ09557*/
*       /* RECORD (UNLIKELY), OR THE MSC CLOCK HAS ROLLED    @OZ09557*/
*       /* OVER. THIS ROUTINE IGNORES THE POSSIBILITY OF     @OZ09557*/
*       /* CLOCK ROLL-OVER, AND ATTEMPTS TO PROCESS RESIDUAL @OZ09557*/
*       /* DATA LEFT FROM A DUMP MAXIMUM.                    @OZ09557*/
*       /* ************************************************* @OZ09557*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1300
*       ELSE                                                       1300
*         DO;                       /*                       @OZ09557*/
         B     @RC01276                                            1300
@RF01276 DS    0H                                                  1301
*           SVETME=HOSTTME-(HDRTME-RCDTME);/* CALC TOD       @OZ09557*/
         L     @15,RCDTME                                          1301
         SL    @15,HDRTME                                          1301
         AL    @15,HOSTTME                                         1301
         ST    @15,SVETME                                          1301
*           SVEYEAR=HOSTYEAR;       /* SET YEAR              @OZ09557*/
         LH    @15,HOSTYEAR                                        1302
         STC   @15,SVEYEAR                                         1302
*           SVEJUL=HOSTJUL;         /* SET JULIAN DAY        @OZ09557*/
         LH    @15,HOSTJUL                                         1303
         STH   @15,SVEJUL                                          1303
*           DO WHILE(SVETME<0);     /* A FULL DAY OR MORE    @Y30LB40*/
         B     @DE01304                                            1304
@DL01304 DS    0H                                                  1305
*             SVEJUL=SVEJUL-1;      /* DECREMENT DAY         @Y30LB40*/
         LH    @15,SVEJUL                                          1305
         BCTR  @15,0                                               1305
         STH   @15,SVEJUL                                          1305
*             SVETME=SVETME+86400;  /* BUMP BY 1 DAY         @Y30LB40*/
         L     @14,@CF01088                                        1306
         AL    @14,SVETME                                          1306
         ST    @14,SVETME                                          1306
*             IF SVEJUL<1           /* ADJUST YEAR AND DATE  @Y30LB40*/
*               THEN                                               1307
         LTR   @15,@15                                             1307
         BP    @RF01307                                            1307
*               DO;                 /* CHECK FOR LEAP YEAR   @Y30LB40*/
*                 SVEYEAR=SVEYEAR-1;/* DECREMENT YEAR        @Y30LB40*/
         SLR   @15,@15                                             1309
         IC    @15,SVEYEAR                                         1309
         BCTR  @15,0                                               1309
         STC   @15,SVEYEAR                                         1309
*                 IF(CKTIME(1:1)&'00000011'B)='00000000'B THEN     1310
         MVC   @TS00001(1),CKTIME                                  1310
         NI    @TS00001,B'00000011'                                1310
         CLI   @TS00001,B'00000000'                                1310
         BNE   @RF01310                                            1310
*                   SVEJUL=366;     /* LEAP YEAR             @Y30LB40*/
         MVC   SVEJUL(2),@CH01110                                  1311
*                 ELSE                                             1312
*                   SVEJUL=365;     /* NOT LEAP YEAR         @Y30LB40*/
         B     @RC01310                                            1312
@RF01310 MVC   SVEJUL(2),@CH01095                                  1312
*               END;                /*                       @Y30LB40*/
@RC01310 DS    0H                                                  1314
*           END;                    /*                       @Y30LB40*/
@RF01307 DS    0H                                                  1314
@DE01304 L     @15,SVETME                                          1314
         LTR   @15,@15                                             1314
         BM    @DL01304                                            1314
*         END;                      /*                       @Y30LB40*/
*       N=(RCDTME/86400);           /* CHECK DAY LATER       @OZ09557*/
@RC01276 L     @00,RCDTME                                          1316
         SRDA  @00,32                                              1316
         D     @00,@CF01088                                        1316
         STH   @01,N                                               1316
*       P=M+N;                      /* MAYBE NEW BUCKET      @OZ09557*/
         AH    @01,M                                               1317
         LR    P,@01                                               1317
*       IF P>750                    /* CHECK BUCKET CTR      @OZ09557*/
*         THEN                      /*                       @OZ09557*/
         LA    @03,750                                             1318
         CR    P,@03                                               1318
         BNH   @RF01318                                            1318
*         P=750;                    /* MAXIMUM BUCKETS       @OZ09557*/
         LR    P,@03                                               1319
*       DATECNT(P)=DATECNT(P)+1;    /* COUNT FOR DAY         @OZ09557*/
@RF01318 LR    @03,P                                               1320
         SLA   @03,4                                               1320
         LA    @15,1                                               1320
         AL    @15,DATECNT-16(@03)                                 1320
         ST    @15,DATECNT-16(@03)                                 1320
*       STOREYR(P)=SVEYEAR;         /* SAVE JULIAN YEAR      @OZ09557*/
         SLR   @15,@15                                             1321
         IC    @15,SVEYEAR                                         1321
         STH   @15,STOREYR-16(@03)                                 1321
*       STOREJUL(P)=SVEJUL;         /* SAVE JULIAN DAY       @OZ09557*/
*                                                                  1322
         LH    @15,SVEJUL                                          1322
         STH   @15,STOREJUL-16(@03)                                1322
*       /*************************************************************/
*       /*                                                           */
*       /* ************************************************* @OZ09557*/
*       /* THE VALUES SAVED FOR MSC TIME AND CONVERTED TIME  @OZ09557*/
*       /* ARE THE ENDING TIMES FOR THE TRACE PERIOD. (THE   @OZ09557*/
*       /* TRACE HEADERS CONTAIN THE STARTING TIMES OF THE   @OZ09557*/
*       /* TRACE PERIODS.                                    @OZ09557*/
*       /* ************************************************* @OZ09557*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1323
*       IF RCDTME>STOREDSM(P)       /*                       @OZ09557*/
*         THEN                                                     1323
         L     @15,RCDTME                                          1323
         C     @15,STOREDSM-16(@03)                                1323
         BNH   @RF01323                                            1323
*         DO;                       /*                       @Y30LB40*/
*           STORETIM(P)=SVETME;     /*                       @OZ09557*/
         L     @14,SVETME                                          1325
         ST    @14,STORETIM-16(@03)                                1325
*           STOREDSM(P)=RCDTME;     /*                       @OZ09557*/
         ST    @15,STOREDSM-16(@03)                                1326
*         END;                      /*                       @Y30LB40*/
*     END;                          /*                       @Y30LB40*/
*   END SDTABLE;                    /*                       @Y30LB40*/
@EL00015 DS    0H                                                  1329
@EF00015 DS    0H                                                  1329
@ER00015 LM    @14,@12,12(@13)                                     1329
         BR    @14                                                 1329
*                                                                  1330
*/********************************************************************
*                                                                    */
*/**ROUTINE TO CONVERT TIME TO HH MM SS*                     @Y30LB40*/
*/********************************************************************
*                                                                    */
*                                                                  1330
*CONVERTM:                                                         1330
*   PROC OPTIONS(SAVE);             /*                       @Y30LB40*/
CONVERTM STM   @14,@12,12(@13)                                     1330
*   HOUR=(DAYS/3600);               /* CALCULATE HOUR OF THE DAY     */
         L     @15,DAYS                                            1331
         LA    @14,3600                                            1331
         LR    @00,@15                                             1331
         SRDA  @00,32                                              1331
         DR    @00,@14                                             1331
         STH   @01,HOUR                                            1331
*   MINUTE=(DAYS-(HOUR*3600))/60;   /* CALCULATE MINUTES OF DAY      */
         LA    @07,60                                              1332
         MR    @00,@14                                             1332
         LR    @02,@15                                             1332
         SLR   @02,@01                                             1332
         SRDA  @02,32                                              1332
         DR    @02,@07                                             1332
         STH   @03,MINUTE                                          1332
*   SECOND=DAYS-((HOUR*3600)+(MINUTE*60));/* CALC SECONDS            */
         MR    @02,@07                                             1333
         ALR   @01,@03                                             1333
         SLR   @15,@01                                             1333
         STH   @15,SECOND                                          1333
*   END CONVERTM;                   /*                       @Y30LB40*/
@EL00016 DS    0H                                                  1334
@EF00016 DS    0H                                                  1334
@ER00016 LM    @14,@12,12(@13)                                     1334
         BR    @14                                                 1334
*                                                                  1335
*/********************************************************************
*                                                                    */
*/* ROUTINE TO PRINT NEW PAGE HEADINGS                       @Y30LB40*/
*/********************************************************************
*                                                                    */
*                                                                  1335
*NEWPAGE:                                                          1335
*   PROC OPTIONS(SAVE);             /*                       @Y30LB40*/
NEWPAGE  STM   @14,@06,@SA00017                                    1335
         STM   @08,@12,@SA00017+36                                 1335
*   LINECNT=1;                      /* RESET LINE COUNT      @Y30LB40*/
         LA    @15,1                                               1336
         LR    LINECNT,@15                                         1336
*   PAGECNT=PAGECNT+1;              /* UPDATE PAGE COUNT     @Y30LB40*/
         AH    @15,PAGECNT                                         1337
         STH   @15,PAGECNT                                         1337
*   BLKLINE=HDNG1;                  /*                       @Y30LB40*/
         MVC   BLKLINE(121),HDNG1                                  1338
*   CALL EDITFIX(ADDR(PAGECNT),2,'S');/*                     @Y30LB40*/
         MVC   @AL00001+4(8),@AL01339                              1339
         LA    @06,PAGECNT                                         1339
         ST    @06,@AFTEMPS+16                                     1339
         LA    @06,@AFTEMPS+16                                     1339
         ST    @06,@AL00001                                        1339
         LA    @01,@AL00001                                        1339
         BAL   @14,EDITFIX                                         1339
*   BLKLINE(118:121)=FIXOUT(10:13); /*                       @Y30LB40*/
         MVC   BLKLINE+117(4),FIXOUT+9                             1340
*   BLKLINE(107:111)=TODAY;         /*                       @Y30LB40*/
         MVC   BLKLINE+106(5),TODAY                                1341
*   RFY                                                            1342
*    (R0,                                                          1342
*     R1,                                                          1342
*     R14,                                                         1342
*     R15) RSTD;                    /*                       @Y30LB40*/
*   GEN(PUT   PRNTDCB,BLKLINE);     /*                       @Y30LB40*/
         PUT   PRNTDCB,BLKLINE
*   RFY                                                            1344
*    (R0,                                                          1344
*     R1,                                                          1344
*     R14,                                                         1344
*     R15) UNRSTD;                  /*                       @Y30LB40*/
*   END NEWPAGE;                    /*                       @Y30LB40*/
@EL00017 DS    0H                                                  1345
@EF00017 DS    0H                                                  1345
@ER00017 LM    @14,@06,@SA00017                                    1345
         LM    @08,@12,@SA00017+36                                 1345
         BR    @14                                                 1345
*                                                                  1346
*/********************************************************************
*                                                                    */
*/* ROUTINE TO CONVERT A BYTE TO PRINTABLE BIT STRING        @Y30LB40*/
*/********************************************************************
*                                                                    */
*                                                                  1346
*EDITBIT:                                                          1346
*   PROC(BITADDR) OPTIONS(SAVE);    /*                       @Y30LB40*/
EDITBIT  STM   @14,@12,@SA00018                                    1346
         MVC   @PC00018(4),0(@01)                                  1346
*   DCL                                                            1347
*     BITADDR PTR(31);              /* ADDRESS OF BYTE TO BE       1347
*                                      CONVERTED             @Y30LB40*/
*   DCL                                                            1348
*     EIGHT0 CHAR(8) STATIC INIT('00000000');/*              @Y30LB40*/
*   RFY                                                            1349
*    (R2) RSTD;                     /*                       @Y30LB40*/
*   R2=BITADDR;                     /*                       @Y30LB40*/
         L     @15,@PC00018                                        1350
         L     R2,BITADDR(,@15)                                    1350
*   GEN;                                                           1351
*                                                         /*@Y30LB40*/
         MVC   BITOUT,EIGHT0
         TM    0(R2),X'80'
         BZ    EB1
         MVI   BITOUT,C'1'
EB1      EQU   *
         TM    0(R2),X'40'
         BZ    EB2
         MVI   BITOUT+1,C'1'
EB2      EQU   *
         TM    0(R2),X'20'
         BZ    EB3
         MVI   BITOUT+2,C'1'
EB3      EQU   *
         TM    0(R2),X'10'
         BZ    EB4
         MVI   BITOUT+3,C'1'
EB4      EQU   *
         TM    0(R2),X'08'
         BZ    EB5
         MVI   BITOUT+4,C'1'
EB5      EQU   *
         TM    0(R2),X'04'
         BZ    EB6
         MVI   BITOUT+5,C'1'
EB6      EQU   *
         TM    0(R2),X'02'
         BZ    EB7
         MVI   BITOUT+6,C'1'
EB7      EQU   *
         TM    0(R2),X'01'
         BZ    EB8
         MVI   BITOUT+7,C'1'
EB8      EQU   *
*   RFY                                                            1352
*    (R2) UNRSTD;                   /*                       @Y30LB40*/
*   END EDITBIT;                    /*                       @Y30LB40*/
@EL00018 DS    0H                                                  1353
@EF00018 DS    0H                                                  1353
@ER00018 LM    @14,@12,@SA00018                                    1353
         BR    @14                                                 1353
*                                                                  1354
*/********************************************************************
*                                                                    */
*/* EDITFIX IS CALLED TO CONVERT BINARY FIELDS INTO CHARACTER FORM   */
*/* FOR PRINTING. IT IS CALLED WITH THE FOLLOWING PARAMETERS -       */
*/*   1. FIXADDR - THE ADDRESS OF THE FIELD TO BE CONVERTED  @Y30LB40*/
*/*   2. FIXLEN - THE LENGTH OF THE FIELD TO BE CONVERTED - 1, 2, OR 4
*                                                                    */
*/*   3. FIXOPT - THE TYPE OF EDITING OPTION DESIRED WHERE   @Y30LB40*/
*/*               N = CONVERT TO CHARACTER, NO EDITING       @Y30LB40*/
*/*               S = CONVERT TO CHARACTER AND ZERO SUPPRESS @Y30LB40*/
*/*               E = CONVERT TO CHARACTER, INSERT COMMAS    @Y30LB40*/
*/*                   TO DIVIDE HUNDREDS,THOUSANDS AND MILLIONS      */
*/*                   AND ZERO AND COMMA SUPPRESS            @Y30LB40*/
*/* OUTPUT IS PROVIDED IN A FIELD CALLED FIXOUT WHICH IS 13 BYTES    */
*/* LONG.                                                    @Y30LB40*/
*/********************************************************************
*                                                                    */
*                                                                  1354
*EDITFIX:                                                          1354
*   PROC(FIXADDR,FIXLEN,FIXOPT) OPTIONS(SAVE);/*             @Y30LB40*/
EDITFIX  STM   @14,@12,@SA00019                                    1354
         MVC   @PC00019(12),0(@01)                                 1354
*   DCL                                                            1355
*     FIXADDR PTR(31);              /* ADDRESS OF INPUT FIELD      1355
*                                                            @Y30LB40*/
*   DCL                                                            1356
*     FIXLEN PTR(31);               /* LENGTH OF INPUT FIELD @Y30LB40*/
*   DCL                                                            1357
*     FIXOPT CHAR(1);               /* EDITING OPTION DESIRED      1357
*                                                            @Y30LB40*/
*   RFY                                                            1358
*    (R2,                                                          1358
*     R3) RSTD;                     /*                       @Y30LB40*/
*   R2=FIXADDR;                     /*                       @Y30LB40*/
         L     @15,@PC00019                                        1359
         L     R2,FIXADDR(,@15)                                    1359
*   DOUBLEWD=DOUBLEWD&&DOUBLEWD;    /*                       @Y30LB40*/
         XC    DOUBLEWD(8),DOUBLEWD                                1360
*   IF FIXLEN=1                     /* IF LENGTH IS 1 PICKUP ONE BYTE
*                                                            @Y30LB40*/
*     THEN                                                         1361
         L     @15,@PC00019+4                                      1361
         CLC   FIXLEN(4,@15),@CF00045                              1361
         BNE   @RF01361                                            1361
*     DO;                           /*                       @Y30LB40*/
*       GEN(MVC   DOUBLEWD+3(1),0(R2));/*                    @Y30LB40*/
         MVC   DOUBLEWD+3(1),0(R2)
*     END;                          /*                       @Y30LB40*/
*   ELSE                                                           1365
*     IF FIXLEN=2                   /* IF LENGTH IS 2 PICKUP TWO   1365
*                                      BYTES                 @Y30LB40*/
*       THEN                                                       1365
         B     @RC01361                                            1365
@RF01361 L     @15,@PC00019+4                                      1365
         CLC   FIXLEN(4,@15),@CF00052                              1365
         BNE   @RF01365                                            1365
*       DO;                         /*                       @Y30LB40*/
*         GEN(MVC   DOUBLEWD+2(2),0(R2));/*                  @Y30LB40*/
         MVC   DOUBLEWD+2(2),0(R2)
*       END;                        /*                       @Y30LB40*/
*     ELSE                                                         1369
*       DO;                         /* PICKUP 4 BYTES        @Y30LB40*/
         B     @RC01365                                            1369
@RF01365 DS    0H                                                  1370
*         GEN(MVC   DOUBLEWD(4),0(R2));/*                    @Y30LB40*/
         MVC   DOUBLEWD(4),0(R2)
*       END;                        /*                       @Y30LB40*/
*   GEN;                                                           1372
@RC01365 DS    0H                                                  1372
@RC01361 DS    0H                                                  1372
*                   /*CONVERT FROM BINARY TO CHARACTER      @Y30LB40*/
  L     R2,DOUBLEWD
  CVD   R2,DOUBLEWD
  OI    DOUBLEWD+7,X'0F'
  UNPK  FIXOUT(13),DOUBLEWD+2(6)
*   IF FIXOPT='N' THEN                                             1373
         L     @15,@PC00019+8                                      1373
         CLI   FIXOPT(@15),C'N'                                    1373
         BE    @RT01373                                            1373
*     GO TO EFEND;                  /* NO EDITING WANTED,GET OUT     */
*   IF FIXOPT='S' THEN                                             1375
         CLI   FIXOPT(@15),C'S'                                    1375
         BE    @RT01375                                            1375
*     GO TO EF4;                    /* NO COMMAS WANTED,SKIP       1376
*                                      INSERTION                     */
*   GEN;                                                           1377
*             /*INSERT COMMA DIVIDERS                       @Y30LB40*/
  MVC   FIXOUT(1),FIXOUT+3
  MVI   FIXOUT+1,C','
  MVC   FIXOUT+2(3),FIXOUT+4
  MVI   FIXOUT+5,C','
  MVC   FIXOUT+6(3),FIXOUT+7
  MVI   FIXOUT+9,C','
*EF4:                               /* ZERO AND COMMA SUPPRESS     1378
*                                                            @Y30LB40*/
*   GEN;                                                           1378
EF4      DS    0H                                                  1378
*                                                         /*@Y30LB40*/
         LA    R2,FIXOUT
         LA    R3,12
EF5      EQU   *
         CLI   0(R2),C','
         BE    EF6
         CLI   0(R2),C'0'
         BNE   EFEND
EF6      EQU   *
         MVI   0(R2),C' '
         LA    R2,1(R2)
         BCT   R3,EF5
*EFEND:                                                            1379
*   RFY                                                            1379
*    (R2,                                                          1379
*     R3) UNRSTD;                   /*                       @Y30LB40*/
*   END EDITFIX;                    /*                       @Y30LB40*/
@EL00019 DS    0H                                                  1380
@EF00019 DS    0H                                                  1380
@ER00019 LM    @14,@12,@SA00019                                    1380
         BR    @14                                                 1380
*                                                                  1381
*/********************************************************************
*                                                                    */
*/* ROUTINE TO CONVERT BYTES TO PRINTABLE HEXADECIMAL        @Y30LB40*/
*/********************************************************************
*                                                                    */
*                                                                  1381
*EDITHEX:                                                          1381
*   PROC(HEXADDR,HEXLEN) OPTIONS(SAVE);/*                    @Y30LB40*/
EDITHEX  STM   @14,@12,@SA00020                                    1381
         MVC   @PC00020(8),0(@01)                                  1381
*   DCL                                                            1382
*     HEXADDR PTR(31);              /* ADDRESS OF BYTES TO BE      1382
*                                      CONVERTED             @Y30LB40*/
*   DCL                                                            1383
*     HEXLEN PTR(31);               /* NUMBER OF BYTES TO BE       1383
*                                      CONVERTED             @Y30LB40*/
*   DCL                                                            1384
*     NINE FIXED(15) STATIC INIT(9);/*                       @Y30LB40*/
*   DCL                                                            1385
*     MASK FIXED(31) STATIC INIT('0000000F'X);/*             @Y30LB40*/
*   RFY                                                            1386
*    (R2,                                                          1386
*     R3,                                                          1386
*     R4,                                                          1386
*     R5) RSTD;                     /*                       @Y30LB40*/
*   R2=HEXADDR;                     /*                       @Y30LB40*/
         L     @15,@PC00020                                        1387
         L     R2,HEXADDR(,@15)                                    1387
*   R3=HEXLEN;                      /*                       @Y30LB40*/
         L     @15,@PC00020+4                                      1388
         L     R3,HEXLEN(,@15)                                     1388
*   R4=0;                           /*                       @Y30LB40*/
         SLR   R4,R4                                               1389
*   R5=ADDR(HEXOUT);                /*                       @Y30LB40*/
         LA    R5,HEXOUT                                           1390
*   GEN;                                                           1391
*                                                         /*@Y30LB40*/
EH0      EQU   *
         IC    R4,0(R2)
         SRA   R4,4
         STC   R4,0(R5)
         CH    R4,NINE
         BNH   EH1
         SH    R4,NINE
         STC   R4,0(R5)
         OI    0(R5),X'C0'
         B     EH2
EH1      EQU   *
         OI    0(R5),X'F0'
EH2      EQU   *
         LA    R5,1(R5)
         IC    R4,0(R2)
         N     R4,MASK
         STC   R4,0(R5)
         CH    R4,NINE
         BNH   EH3
         SH    R4,NINE
         STC   R4,0(R5)
         OI    0(R5),X'C0'
         B     EH4
EH3      EQU   *
         OI    0(R5),X'F0'
EH4      EQU   *
         LA    R5,1(R5)
         LA    R2,1(R2)
         BCT   R3,EH0
*   RFY                                                            1392
*    (R2,                                                          1392
*     R3,                                                          1392
*     R4,                                                          1392
*     R5) UNRSTD;                   /*                       @Y30LB40*/
*   END EDITHEX;                    /*                       @Y30LB40*/
@EL00020 DS    0H                                                  1393
@EF00020 DS    0H                                                  1393
@ER00020 LM    @14,@12,@SA00020                                    1393
         BR    @14                                                 1393
*                                                                  1394
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - GENCONFG                                @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - THIS PROCEDURE EXTRACTS FROM THE TRACE        @OZ05079*/
*/*            HEADER (COPY OF VERIFICATION RECORD 6) THE    @OZ05079*/
*/*            NUMBER OF DATA RECORDING DEVICES THAT         @OZ05079*/
*/*            ARE VALID FOR EACH MSF.  THIS INFORMATION     @OZ05079*/
*/*            IS USED TO TRANSLATE THE LOGICAL DRD/DRD PATH @OZ05079*/
*/*            INTO THE SSIDS FOR THE DATA RECORDING         @OZ05079*/
*/*            CONTROLLER AND DATA RECORDING DEVICE.         @OZ05079*/
*/*            THE ONLY MSF SIZE THAT REQUIRES SPECIAL       @OZ05079*/
*/*            HANDLING IS A3/B3.                            @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  1394
*GENCONFG:                                                         1394
*   PROCEDURE;                      /*                       @OZ05079*/
GENCONFG STM   @14,@12,12(@13)                                     1394
*   DO INDEX=1 TO MAXMSF;           /*                       @OZ05079*/
         LA    INDEX,1                                             1395
@DL01395 DS    0H                                                  1396
*     MSFCONFG(INDEX)=NOSIZE;       /*                       @OZ05079*/
         SLR   @03,@03                                             1396
         STC   @03,MSFCONFG-1(INDEX)                               1396
*     IF VRW(INDEX)=SIZEA3B3        /*                       @OZ05079*/
*       THEN                        /*                       @OZ05079*/
         LA    @03,VRW-1(INDEX)                                    1397
         CLI   0(@03),B'11111100'                                  1397
         BNE   @RF01397                                            1397
*       MSFCONFG(INDEX)=MSFA3B3;    /*                       @OZ05079*/
         LA    @03,3                                               1398
         STC   @03,MSFCONFG-1(INDEX)                               1398
*   END;                            /*                       @OZ05079*/
@RF01397 AL    INDEX,@CF00045                                      1399
         C     INDEX,@CF00104                                      1399
         BNH   @DL01395                                            1399
*   END GENCONFG;                   /*                       @OZ05079*/
@EL00021 DS    0H                                                  1400
@EF00021 DS    0H                                                  1400
@ER00021 LM    @14,@12,12(@13)                                     1400
         BR    @14                                                 1400
*                                                                  1401
*/********************************************************** @OZ05079*/
*/*                                                          @OZ05079*/
*/* PROCEDURE NAME - TRDRCDRD                                @OZ05079*/
*/*                                                          @OZ05079*/
*/* FUNCTION - THIS PROCEDURE TRANSLATES CONTROLLER AND      @OZ05079*/
*/*            AND LOGICAL DATA RECORDING DEVICE FOR THE     @OZ05079*/
*/*            DRC INTO THE SSIDS FOR BOTH DRC AND DRD BASED @OZ05079*/
*/*            ON THE CONFIGURATION OF THE MSF AS SPECIFIED  @OZ05079*/
*/*            IN THE TRACE HEADER RECORD.                   @OZ05079*/
*/*                                                          @OZ05079*/
*/********************************************************** @OZ05079*/
*                                                                  1401
*TRDRCDRD:                                                         1401
*   PROCEDURE;                      /*                       @OZ05079*/
TRDRCDRD STM   @14,@12,12(@13)                                     1401
*   DRDINDEX=0;                     /*                       @OZ05079*/
         SLR   DRDINDEX,DRDINDEX                                   1402
*   DRCINDEX=0;                     /*                       @OZ05079*/
*                                                                  1403
         SLR   DRCINDEX,DRCINDEX                                   1403
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @OZ05079*/
*   /* DETERMINE THE LOW-ORDER DIGIT OF THE SSID OF          @OZ05079*/
*   /* THE DATA RECORDING CONTROLLER FROM THE FIFTH          @OZ05079*/
*   /* AND SIXTH BITS OF 'DRD ADDRESS'.                      @OZ05079*/
*   /* ***********************************************       @OZ05079*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1404
*   IF CONTRLR=ZEROZERO             /* DRC = 4X0             @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         TM    CONTRLR,B'00001100'                                 1404
         BNZ   @RF01404                                            1404
*     DO;                           /*                       @OZ05079*/
*       DRCPRINT='0';               /* PRINT LOW-ORDER       @OZ05079*/
         MVI   DRCPRINT,C'0'                                       1406
*       DRCINDEX=1;                 /* TO DEVELOP DRD        @OZ05079*/
         LA    DRCINDEX,1                                          1407
*     END;                          /*                       @OZ05079*/
*   ELSE                                                           1409
*     ;                             /*                       @OZ05079*/
@RF01404 DS    0H                                                  1410
*   IF CONTRLR=ZEROONE              /* DRC = 4X1             @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         TM    CONTRLR,B'00000100'                                 1410
         BNO   @RF01410                                            1410
         TM    CONTRLR,B'00001000'                                 1410
         BNZ   @RF01410                                            1410
*     DO;                           /*                       @OZ05079*/
*       DRCPRINT='1';               /* PRINT LOW-ORDER       @OZ05079*/
         MVI   DRCPRINT,C'1'                                       1412
*       DRCINDEX=2;                 /* TO DEVELOP DRD        @OZ05079*/
         LA    DRCINDEX,2                                          1413
*     END;                          /*                       @OZ05079*/
*   ELSE                                                           1415
*     ;                             /*                       @OZ05079*/
@RF01410 DS    0H                                                  1416
*   IF CONTRLR=ONEZERO              /* DRC = 4X2             @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         TM    CONTRLR,B'00001000'                                 1416
         BNO   @RF01416                                            1416
         TM    CONTRLR,B'00000100'                                 1416
         BNZ   @RF01416                                            1416
*     DO;                           /*                       @OZ05079*/
*       DRCPRINT='2';               /* PRINT LOW-ORDER       @OZ05079*/
         MVI   DRCPRINT,C'2'                                       1418
*       DRCINDEX=3;                 /* TO DEVELOP DRD        @OZ05079*/
         LA    DRCINDEX,3                                          1419
*     END;                          /*                       @OZ05079*/
*   ELSE                                                           1421
*     ;                             /*                       @OZ05079*/
@RF01416 DS    0H                                                  1422
*   IF CONTRLR=ONEONE               /* DRC = 4X3             @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         TM    CONTRLR,B'00001100'                                 1422
         BNO   @RF01422                                            1422
*     DO;                           /*                       @OZ05079*/
*       DRCPRINT='3';               /* PRINT LOW-ORDER       @OZ05079*/
         MVI   DRCPRINT,C'3'                                       1424
*       DRCINDEX=4;                 /* TO DEVELOP DRD        @OZ05079*/
         LA    DRCINDEX,4                                          1425
*     END;                          /*                       @OZ05079*/
*   ELSE                                                           1427
*     ;                             /*                       @OZ05079*/
*                                                                  1427
@RF01422 DS    0H                                                  1428
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @OZ05079*/
*   /* DETERMINE THE INDEX VALUE FOR LOGICAL DRD BY          @OZ05079*/
*   /* EXTRACTING THE TWO LOW-ORDER BITS FROM THE DRD        @OZ05079*/
*   /* FIELD AND ADDING BINARY ONE.                          @OZ05079*/
*   /* ***********************************************       @OZ05079*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1428
*   IF RWU=ZEROZERO                 /*                       @OZ05079*/
*     THEN                          /*                       @OZ05079*/
         TM    RWU,B'00000011'                                     1428
         BNZ   @RF01428                                            1428
*     DRDINDEX=1;                   /*                       @OZ05079*/
         LA    DRDINDEX,1                                          1429
*   IF RWU=ZEROONE                  /*                       @OZ05079*/
*     THEN                          /*                       @OZ05079*/
@RF01428 TM    RWU,B'00000001'                                     1430
         BNO   @RF01430                                            1430
         TM    RWU,B'00000010'                                     1430
         BNZ   @RF01430                                            1430
*     DRDINDEX=2;                   /*                       @OZ05079*/
         LA    DRDINDEX,2                                          1431
*   IF RWU=ONEZERO                  /*                       @OZ05079*/
*     THEN                          /*                       @OZ05079*/
@RF01430 TM    RWU,B'00000010'                                     1432
         BNO   @RF01432                                            1432
         TM    RWU,B'00000001'                                     1432
         BNZ   @RF01432                                            1432
*     DRDINDEX=3;                   /*                       @OZ05079*/
         LA    DRDINDEX,3                                          1433
*   IF RWU=ONEONE                   /*                       @OZ05079*/
*     THEN                          /*                       @OZ05079*/
@RF01432 TM    RWU,B'00000011'                                     1434
         BNO   @RF01434                                            1434
*     DRDINDEX=4;                   /*                       @OZ05079*/
*                                                                  1435
         LA    DRDINDEX,4                                          1435
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @OZ05079*/
*   /* IF THIS MSF WAS DESCRIBED IN THE TRACE HEADER         @OZ05079*/
*   /* RECORD AS AN A3/B3 MODEL, USE SPECIAL A3/B3           @OZ05079*/
*   /* TRANSLATE ROUTINE. OTHERWISE, USE REGULAR             @OZ05079*/
*   /* TRANSLATE ROUTINE.                                    @OZ05079*/
*   /* ***********************************************       @OZ05079*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1436
*   IF MSFCONFG(LIBRID+1)=MSFA3B3   /*                       @OZ05079*/
*     THEN                          /*                       @OZ05079*/
@RF01434 SLR   @01,@01                                             1436
         IC    @01,LIBRID                                          1436
         SLR   @00,@00                                             1436
         IC    @00,MSFCONFG(@01)                                   1436
         C     @00,@CF00831                                        1436
         BNE   @RF01436                                            1436
*     DRDPRINT=SPECLKUP(DRCINDEX,DRDINDEX);/*                @OZ05079*/
         LR    @15,DRCINDEX                                        1437
         SLA   @15,2                                               1437
         ALR   @15,DRDINDEX                                        1437
         LA    @14,SPECLKUP-5(@15)                                 1437
         MVC   DRDPRINT(1),0(@14)                                  1437
*   ELSE                            /*                       @OZ05079*/
*     DRDPRINT=REGLOKUP(DRCINDEX,DRDINDEX);/*                @OZ05079*/
         B     @RC01436                                            1438
@RF01436 LR    @15,DRCINDEX                                        1438
         SLA   @15,2                                               1438
         ALR   @15,DRDINDEX                                        1438
         LA    @14,REGLOKUP-5(@15)                                 1438
         MVC   DRDPRINT(1),0(@14)                                  1438
*   END TRDRCDRD;                   /*                       @OZ05079*/
@EL00022 DS    0H                                                  1439
@EF00022 DS    0H                                                  1439
@ER00022 LM    @14,@12,12(@13)                                     1439
         BR    @14                                                 1439
*                                                                  1440
*/********************************************************** @OZ05124*/
*/* SYNAD EXIT FOR TRACEIN, TAKEN FOR READ ERRORS.           @OZ05124*/
*/********************************************************** @OZ05124*/
*                                                                  1440
*READERR:                                                          1440
*   ;                               /*                       @OZ05124*/
READERR  DS    0H                                                  1441
*   GEN(SYNADAF ACSMETH=QSAM);      /*                       @OZ05124*/
         SYNADAF ACSMETH=QSAM
*   PRNTLINE=' ';                   /*                       @ZA17158*/
         MVI   PRNTLINE+1,C' '                                     1442
         MVC   PRNTLINE+2(119),PRNTLINE+1                          1442
         MVI   PRNTLINE,C' '                                       1442
*   GEN(MVC   PRNTLINE+30(79),49(R1));/*                     @OZ05124*/
         MVC   PRNTLINE+30(79),49(R1)
*   PRNTLINE(1:30)=ICGTR904;        /*                       @OZ05124*/
         MVC   PRNTLINE(30),ICGTR904                               1444
*   INCNT1=INCNT1+1;                /*                       @ZA17158*/
         LH    @07,INCNT1                                          1445
         LA    @07,1(,@07)                                         1445
         STH   @07,INCNT1                                          1445
*   SAVE14=R14;                     /*                       @OZ09522*/
         LR    SAVE14,R14                                          1446
*   RFY                                                            1447
*    (R0,                                                          1447
*     R1,                                                          1447
*     R14,                                                         1447
*     R15) RSTD;                    /*                       @OZ05124*/
*   GEN(PUT PRNTDCB,PRNTLINE);      /*                       @OZ05124*/
         PUT PRNTDCB,PRNTLINE
*   RFY                                                            1449
*    (R0,                                                          1449
*     R1,                                                          1449
*     R14,                                                         1449
*     R15) UNRSTD;                  /*                       @OZ05124*/
*   R14=SAVE14;                     /*                       @OZ09522*/
         LR    R14,SAVE14                                          1450
*   GEN(SYNADRLS);                  /*                       @OZ05124*/
         SYNADRLS
*   RETURNCD=4;                     /*                       @OZ05124*/
         MVC   RETURNCD(2),@CH00104                                1452
*   IF INCNT1=>100                  /*                       @ZA17158*/
*     THEN                          /*                       @ZA17158*/
         LH    @15,INCNT1                                          1453
         C     @15,@CF01050                                        1453
         BL    @RF01453                                            1453
*     DO;                           /*                       @ZA17158*/
*       DCBPTR=ADDR(INDCB);         /*                       @ZA17158*/
         LA    DCBPTR,INDCB                                        1455
*       DCBERACC=OFF;               /*                       @ZA17158*/
*       DCBERSKP=OFF;               /*                       @ZA17158*/
*       DCBERABE=ON;                /*                       @ZA17158*/
         OI    DCBERABE+72(DCBPTR),B'00100000'                     1458
         NI    DCBERACC+72(DCBPTR),B'00111111'                     1458
*     END;                          /*                       @ZA17158*/
*   GEN(BR    R14);                 /* RETURN TO IOS         @OZ05124*/
@RF01453 DS    0H                                                  1460
         BR    R14
*                                                                  1461
*/********************************************************** @OZ05124*/
*/* SYNAD EXIT FOR TRACEOUT, TAKEN FOR WRITE ERRORS.         @OZ05124*/
*/********************************************************** @OZ05124*/
*                                                                  1461
*WRITEERR:                                                         1461
*   ;                               /*                       @OZ05124*/
WRITEERR DS    0H                                                  1462
*   GEN(SYNADAF ACSMETH=QSAM);      /*                       @OZ05124*/
         SYNADAF ACSMETH=QSAM
*   PRNTLINE=' ';                   /*                       @ZA17158*/
         MVI   PRNTLINE+1,C' '                                     1463
         MVC   PRNTLINE+2(119),PRNTLINE+1                          1463
         MVI   PRNTLINE,C' '                                       1463
*   GEN(MVC   PRNTLINE+30(79),49(R1));/*                     @OZ05124*/
         MVC   PRNTLINE+30(79),49(R1)
*   PRNTLINE(1:30)=ICGTR905;        /*                       @OZ05124*/
         MVC   PRNTLINE(30),ICGTR905                               1465
*   SAVE14=R14;                     /*                       @OZ09522*/
         LR    SAVE14,R14                                          1466
*   RFY                                                            1467
*    (R0,                                                          1467
*     R1,                                                          1467
*     R14,                                                         1467
*     R15) RSTD;                    /*                       @OZ05124*/
*   GEN(PUT PRNTDCB,PRNTLINE);      /*                       @OZ05124*/
         PUT PRNTDCB,PRNTLINE
*   RFY                                                            1469
*    (R0,                                                          1469
*     R1,                                                          1469
*     R14,                                                         1469
*     R15) UNRSTD;                  /*                       @OZ05124*/
*   R14=SAVE14;                     /*                       @OZ09522*/
         LR    R14,SAVE14                                          1470
*   GEN(SYNADRLS);                  /*                       @OZ05124*/
         SYNADRLS
*   RETURNCD=4;                     /*                       @OZ05124*/
         MVC   RETURNCD(2),@CH00104                                1472
*   GEN(BR    R14);                 /* RETURN TO IOS         @OZ05124*/
         BR    R14
*                                                                  1474
*/********************************************************** @ZA13498*/
*/*                                                          @ZA13498*/
*/* PROCEDURE NAME - TIME2345                                @ZA13498*/
*/*                                                          @ZA13498*/
*/* FUNCTION - T2TIME, T3TIME, T4,TIME, OR T5TIME IS         @ZA13498*/
*/*            PASSED AS 'HOLDTXTM'.  COMPARE HOLDTXTM TO    @ZA13498*/
*/*            TO THE MIDDLE TWO BYTE OF T1TIME TO           @ZA13498*/
*/*            DETERMINE WHETHER THE HOLDTXTM SHOULD BE      @ZA13498*/
*/*            INCREMENTED BY 65,536 (10000 HEX).  EXTRACT   @ZA13498*/
*/*            THE HIGH-ORDER BYTE OF T1TIME AND USE IT FOR  @ZA13498*/
*/*            THE HIGH-ORDER BYTE OF HOLDTXTM.  CONVERT     @ZA13498*/
*/*            HOLDTXTM FROM QUARTER-SECONDS TO SECONDS.     @ZA13498*/
*/*            EXTRACT TIME PORTION OF DATE RELATIVE TO THE  @ZA13498*/
*/*            TO THE JULIAN DATE IN THE TRACE HEADER.       @ZA13498*/
*/*            CONVERT BINARY TIME TO HOURS/MINUTES/SECONDS. @ZA13498*/
*/*                                                          @ZA13498*/
*/********************************************************** @ZA13498*/
*                                                                  1474
*TIME2345:                                                         1474
*   PROCEDURE;                      /*                       @ZA13498*/
         B     @PB00023                                            1474
TIME2345 STM   @14,@12,@SA00023                                    1474
*   HOLDT1TM=T1TIME;                /*                       @ZA13498*/
         L     @01,PTR2                                            1475
         L     HOLDT1TM,T1TIME(,@01)                               1475
*   SLL(HOLDT1TM,8);                /*                       @ZA13498*/
         SLL   HOLDT1TM,8                                          1476
*   SRL(HOLDT1TM,16);               /*                       @ZA13498*/
         SRL   HOLDT1TM,16                                         1477
*   IF HOLDT1TM>HOLDTXTM            /*                       @ZA13498*/
*     THEN                          /*                       @ZA13498*/
         CR    HOLDT1TM,HOLDTXTM                                   1478
         BNH   @RF01478                                            1478
*     HOLDTXTM=HOLDTXTM+ROLLOVER;   /*                       @ZA13498*/
         AL    HOLDTXTM,ROLLOVER                                   1479
*   HOLDT1TM=T1TIME;                /*                       @ZA13498*/
@RF01478 L     @01,PTR2                                            1480
         L     HOLDT1TM,T1TIME(,@01)                               1480
*   SRL(HOLDT1TM,24);               /*                       @ZA13498*/
         SRL   HOLDT1TM,24                                         1481
*   SLL(HOLDT1TM,16);               /*                       @ZA13498*/
         SLL   HOLDT1TM,16                                         1482
*   HOLDTXTM=HOLDTXTM+HOLDT1TM;     /*                       @ZA13498*/
         ALR   HOLDTXTM,HOLDT1TM                                   1483
*   HOLDTXTM=HOLDTXTM/4;            /*                       @ZA13498*/
         LR    @00,HOLDTXTM                                        1484
         SRDA  @00,32                                              1484
         D     @00,@CF00104                                        1484
         LR    HOLDTXTM,@01                                        1484
*   IF HOLDTXTM>HDRTME              /*                       @ZA13498*/
*     THEN                          /*                       @ZA13498*/
         L     @02,HDRTME                                          1485
         CR    HOLDTXTM,@02                                        1485
         BNH   @RF01485                                            1485
*     DO;                           /*                       @ZA13498*/
*       SAVETIME=HOSTTME+(HOLDTXTM-HDRTME);/*                @ZA13498*/
         L     @15,HDRTME                                          1487
         LCR   @15,@15                                             1487
         ALR   @15,HOLDTXTM                                        1487
         AL    @15,HOSTTME                                         1487
         LR    SAVETIME,@15                                        1487
*       DO WHILE(SAVETIME>86399);   /*                       @ZA13498*/
         B     @DE01488                                            1488
@DL01488 DS    0H                                                  1489
*         SAVETIME=SAVETIME-86400;  /*                       @ZA13498*/
         SL    SAVETIME,@CF01088                                   1489
*       END;                        /*                       @ZA13498*/
@DE01488 C     SAVETIME,@CF01096                                   1490
         BH    @DL01488                                            1490
*     END;                          /*                       @ZA13498*/
*   ELSE                            /*                       @ZA13498*/
*     DO;                           /*                       @ZA13498*/
         B     @RC01485                                            1492
@RF01485 DS    0H                                                  1493
*       SAVETIME=HOSTTME-(HDRTME-HOLDTXTM);/*                @ZA28189*/
         LR    SAVETIME,HOLDTXTM                                   1493
         SL    SAVETIME,HDRTME                                     1493
         AL    SAVETIME,HOSTTME                                    1493
*       DO WHILE(SAVETIME<0);       /*                       @ZA13498*/
         B     @DE01494                                            1494
@DL01494 DS    0H                                                  1495
*         SAVETIME=SAVETIME+86400;  /*                       @ZA13498*/
         AL    SAVETIME,@CF01088                                   1495
*       END;                        /*                       @ZA13498*/
@DE01494 LTR   SAVETIME,SAVETIME                                   1496
         BM    @DL01494                                            1496
*     END;                          /*                       @ZA13498*/
*   DAYS=SAVETIME;                  /*                       @ZA13498*/
@RC01485 ST    SAVETIME,DAYS                                       1498
*   CALL CONVERTM;                  /*                       @ZA13498*/
         BAL   @14,CONVERTM                                        1499
*   END TIME2345;                   /*                       @ZA13498*/
@EL00023 DS    0H                                                  1500
@EF00023 DS    0H                                                  1500
@ER00023 LM    @14,@12,@SA00023                                    1500
         BR    @14                                                 1500
*   END ICGTRINT                    /*                       @ZA13498*/
*                                                                  1501
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*                                                                  1501
*       ;                                                          1501
@EL00001 L     @13,4(,@13)                                         1501
@EF00001 L     @00,@SIZDATD                                        1501
         LR    @01,@08                                             1501
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     1501
         BR    @14                                                 1501
@DATA    DS    0H
@CH00339 DC    H'60'
@CH01112 DC    H'3600'
@SC01278 CLC   HOLDVOL(0),VOLID
@SM01280 MVC   SELECTID(0),HOLDVOL
@SM01283 MVC   PARMHOLD(0),PARMS(PARMPTR)
         DS    0F
@AL00224 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00228 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00579 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00582 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00650 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00655 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00732 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01069 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01124 DC    A(@CF00045)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CC01083)
@AL00226 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00230 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00234 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00236 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00240 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00242 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00267 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00269 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00273 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00275 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00277 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00284 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00286 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00288 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01035 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01038 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01045 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01048 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01126 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01132 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01134 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01150 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01152 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01187 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01190 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01197 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01200 DC    A(@CF00052)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CC01083)
@AL00244 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00246 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00265 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00280 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00558 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00560 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01174 DC    A(@CF00104)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CC01085)
@AL01032 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01042 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01130 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01148 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01184 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01194 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01339 DC    A(@CF00052)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CC01085)
@AL01085 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01087 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01212 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01257 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL01259 DC    A(@CF00045)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CC01085)
@AL01179 DC    A(@CF00104)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CC01083)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00006 DS    15F
@SA00013 DS    14F
@SA00007 DS    14F
@SA00009 DS    15F
@SA00017 DS    14F
@SA00019 DS    15F
@PC00019 DS    3F
@SA00008 DS    13F
@SA00020 DS    15F
@PC00020 DS    2F
@SA00010 DS    15F
@SA00012 DS    14F
@SA00018 DS    15F
@PC00018 DS    1F
@SA00023 DS    15F
@SA00014 DS    14F
@AL00001 DS    3A
@TF00001 DS    F
@AFTEMPS DS    6F
ICGTRINT CSECT
         DS    0F
@CF00045 DC    F'1'
@CF00052 DC    F'2'
@CF00117 DC    F'3'
@CF00104 DC    F'4'
@CH00104 EQU   @CF00104+2
@CF00376 DC    F'5'
@CF00344 DC    F'6'
@CF00036 DC    F'8'
@CH00036 EQU   @CF00036+2
@CF00035 DC    F'9'
@CF00033 DC    F'11'
@CF01111 DC    F'23'
@CF00869 DC    F'28'
@CF00447 DC    F'30'
@CF00484 DC    F'51'
@CF00040 DC    F'52'
@CF01089 DC    F'55'
@CF01113 DC    F'59'
@CF01050 DC    F'100'
@CF00528 DC    F'121'
@CF01095 DC    F'365'
@CH01095 EQU   @CF01095+2
@CF01110 DC    F'366'
@CH01110 EQU   @CF01110+2
@CF01035 DC    F'750'
@CF01096 DC    F'86399'
@CF01088 DC    F'86400'
@CF01285 DC    XL4'0000FFFF'
@CF00831 DC    BL4'00000011'
@DATD    DSECT
         DS    0D
PTR2     DS    A
OPENCLOS DS    FL4
         ORG   OPENCLOS
OPCLB1   DS    BL1
OPCLB234 DS    CL3
         ORG   OPENCLOS+4
RCDCOUNT DS    F
OUTCOUNT DS    F
HOLDT2TM DS    F
HOLDT3TM DS    F
DAYS     DS    F
RCDTME   DS    F
LENVOLID DS    H
RETURNCD DS    H
INCNT1   DS    H
J        DS    H
K        DS    H
M        DS    H
N        DS    H
HOUR     DS    H
MINUTE   DS    H
SECOND   DS    H
PAGECNT  DS    H
CONVERT  DS    H
WORK1    DS    FL1
         DS    0D
@TS00001 DS    CL8
RECIN    DS    CL264
RCDOUT   DS    CL72
         ORG   RCDOUT
STGD     DS    FL4
CFAULT   DS    FL4
SYSSGTM  DS    FL4
DEVSGTM  DS    FL4
DSTGD    DS    FL4
SALLOC   DS    FL4
SYSDSTM  DS    FL4
DEVDSTM  DS    FL4
BUSYTIME DS    FL4
LOADTIME DS    FL4
LOADNUM  DS    FL1
CKTIME   DS    CL7
         ORG   CKTIME
SVEYEAR  DS    FL1
SVEJUL   DS    FL2
SVETME   DS    FL4
         ORG   RCDOUT+48
PAGES    DS    FL1
MININUM  DS    FL1
HITNUM   DS    FL1
STGDNUM  DS    FL1
DSTGDNUM DS    FL1
VTOCSTG  DS    FL1
VTOCDSTG DS    FL1
LIBRARY  DS    BL1
DSPORT   DS    BL1
DSCU     DS    BL1
RCOZ     DS    BL1
RCOY     DS    BL1
RCOX     DS    BL1
CARTPAIR DS    BL1
READWRIT DS    FL1
RCOVOLID DS    CL6
CHARDRC  DS    CL1
SDGINBIN DS    CL1
@NM00044 DS    CL1
         ORG   RCDOUT+72
BLKLINE  DS    CL121
         ORG   BLKLINE
@NM00045 DS    CL11
BLKFLAG  DS    CL8
@NM00046 DS    CL3
BLKMINPT DS    CL2
@NM00047 DS    CL2
BLKLIBID DS    CL2
@NM00048 DS    CL4
BLKRSPPT DS    CL2
@NM00049 DS    CL2
SA1SSID  DS    CL3
         ORG   SA1SSID
CHAR8SA1 DS    CL1
SA1ID    DS    CL1
CHAR0SA1 DS    CL1
         ORG   BLKLINE+39
@NM00050 DS    CL2
SA2SSID  DS    CL3
         ORG   SA2SSID
CHAR8SA2 DS    CL1
SA2ID    DS    CL1
CHAR0SA2 DS    CL1
         ORG   BLKLINE+44
@NM00051 DS    CL3
BLKVV1   DS    CL2
@NM00052 DS    CL2
BLKVV2   DS    CL2
@NM00053 DS    CL2
BLKQCB   DS    CL12
@NM00054 DS    CL2
DRCSSID  DS    CL3
         ORG   DRCSSID
CHAR4    DS    CL1
MSFDRC   DS    CL1
PRINTDRC DS    CL1
         ORG   BLKLINE+72
@NM00055 DS    CL2
DRDSSID  DS    CL3
         ORG   DRDSSID
CHAR2    DS    CL1
MSFDRD   DS    CL1
PRINTDRD DS    CL1
         ORG   BLKLINE+77
@NM00056 DS    CL3
BLKQCBPT DS    CL2
@NM00057 DS    CL2
BLKVOLID DS    CL6
@NM00058 DS    CL2
BLKL     DS    CL1
@NM00059 DS    CL1
BLKX     DS    CL3
@NM00060 DS    CL1
BLKY     DS    CL2
@NM00061 DS    CL1
BLKZ     DS    CL1
@NM00062 DS    CL2
BLKT2TIM DS    CL8
         ORG   BLKT2TIM
T2HOUR   DS    CL2
T2SEP1   DS    CL1
T2MINUTE DS    CL2
T2SEP2   DS    CL1
T2SECOND DS    CL2
         ORG   BLKLINE+112
@NM00063 DS    CL1
BLKT3TIM DS    CL8
         ORG   BLKT3TIM
T3HOUR   DS    CL2
T3SEP1   DS    CL1
T3MINUTE DS    CL2
T3SEP2   DS    CL1
T3SECOND DS    CL2
         ORG   BLKLINE+121
PRNTLINE DS    CL121
HOLDHDG4 DS    CL121
         ORG   HOLDHDG4
@NM00117 DS    CL2
HOLDDEST DS    CL6
@NM00118 DS    CL113
         ORG   HOLDHDG4+121
DRCPRINT DS    CL1
DRDPRINT DS    CL1
SAWORK   DS    BL1
SDGSELSW DS    BL1
VOLSELSW DS    BL1
STDESTSW DS    BL1
HOLDSDG  DS    BL1
HOLDVOL  DS    CL6
SDGSAVE  DS    CL6
STATMASK DS    BL1
         DS    CL1
STARTTIM DS    CL16
         ORG   STARTTIM
@NM00141 DS    CL1
CKSTIME  DS    CL7
         ORG   CKSTIME
HLDSYR   DS    FL1
HLDSDAY  DS    FL2
HLDSTIME DS    FL4
         ORG   STARTTIM+8
@NM00142 DS    CL1
CKETIME  DS    CL7
         ORG   CKETIME
HLDEYR   DS    FL1
HLDEDAY  DS    FL2
HLDETIME DS    FL4
         ORG   STARTTIM+16
FRSTSW   DS    BL1
FOUNDSW  DS    BL1
MINI1SW  DS    BL1
PARMERR  DS    BL1
DATEINSW DS    BL1
DECODCYL DS    BL1
         DS    CL2
DOUBLEWD DS    CL8
DATETABL DS    CL12
         ORG   DATETABL
HOSTYEAR DS    FL2
HOSTJUL  DS    FL2
HOSTTME  DS    FL4
HDRTME   DS    FL4
         ORG   DATETABL+12
PARMSW   DS    CL1
BITOUT   DS    CL8
HEXOUT   DS    CL16
FIXOUT   DS    CL13
TODAY    DS    CL5
DATEWORK DS    CL4
PARMHOLD DS    CL29
PRNTDCB  DS    CL100
INDCB    DS    CL100
OUTDCB   DS    CL100
SAVESDG  DS    BL1
IMLSAVE  DS    CL2
IMLFLAG  DS    CL1
MSFCONFG DS    4AL1
DATETABA DS    CL16
         ORG   DATETABA+0
STOREYR  DS    FL2
STOREJUL DS    FL2
STORETIM DS    FL4
STOREDSM DS    FL4
DATECNT  DS    FL4
         ORG   DATETABA+12000
ICGTRINT CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ROLLOVER DC    XL4'00010000'
MASK     DC    XL4'0000000F'
NINE     DC    H'9'
@CC01145 DC    C'DATA RECORDING CONTROLLERS'
@CC01136 DC    C'DATA RECORDING DEVICES'
@CC01149 DC    C'STAGING DRIVE GROUP XX'
@CC01154 DC    C'STAGING DRIVE GROUPS'
@CC01158 DC    C'ACCESSOR CONTROLS'
@CC01141 DC    C'STAGING ADAPTERS'
@CC01201 DC    C'  :  :  '
@CC01086 DC    C'******'
@CC01087 DC    C'NONE  '
@CC01120 DC    C'      '
@CC01200 DC    C'  /   '
@CC01202 DC    C'DESTGE'
@CC01138 DC    C'200-V'
@CC01143 DC    C'800-V'
@CC01148 DC    C'400-V'
@CC01153 DC    C'000-V'
@CC01161 DC    C'101-V'
@CC01162 DC    C'102-V'
@CC01156 EQU   @CC01087
@CC01119 DC    C'SDG'
@CC01192 EQU   @CC01086
@CC01083 EQU   @CC01087
@CC01085 EQU   @CC01149
HDNG1    DS    CL121
         ORG   HDNG1
@NM00102 DC    CL41'1ICGTRINT'
@NM00103 DC    CL60'MSS TRACE DATA INTERPRETATION'
@NM00104 DC    CL20'DATE        PAGE    '
         ORG   HDNG1+121
HDNG2    DS    CL121
         ORG   HDNG2
@NM00105 DC    CL1'0'
@NM00106 DC    CL40'*BLOCK *    BLOCK   M/H  MSF  SDG  SA1  '
@NM00107 DC    CL40'SA2   VVA VVA               DRC  DRD  QC'
@NM00108 DC    CL40'B          COORDINATES      T2       T3 '
         ORG   HDNG2+121
HDNG3    DS    CL121
         ORG   HDNG3
@NM00109 DC    CL1' '
@NM00110 DC    CL40'*HEADER*    FLAG    PTR  ID   PTR  SSID '
@NM00111 DC    CL40'SSID  1   2   QCB ENTRIES   SSID SSID PT'
@NM00112 DC    CL40'R  VOLID   L   X  Y Z      TIME     TIME'
         ORG   HDNG3+121
HDNG4    DS    CL121
         ORG   HDNG4
@NM00113 DC    CL1'0'
@NM00114 DC    CL40'*STAGE *                      NXT  FUNC '
@NM00115 DC    CL40' CPU   P-LIST   NO.OF             UNCONV'
@NM00116 DC    CL40'ERTED     T1       T1       T4       T5 '
         ORG   HDNG4+121
HDNG5    DS    CL121
         ORG   HDNG5
@NM00119 DC    CL1' '
@NM00120 DC    CL40'* MINI *  SEQUENCE    FLAG    M/H   ID  '
@NM00121 DC    CL40' ID     FLAG    PAGES  VUA  VVA     T1 T'
@NM00122 DC    CL40'IME      DATE     TIME     TIME     TIME'
         ORG   HDNG5+121
HDNG6    DS    CL121
         ORG   HDNG6
@NM00123 DC    CL1'0'
@NM00124 DC    CL40'* PAGE *  DASD  VIRT  REAL              '
@NM00125 DC    CL80' '
         ORG   HDNG6+121
HDNG7    DS    CL121
         ORG   HDNG7
@NM00126 DC    CL1' '
@NM00127 DC    CL40'* LIST *  SSID  PAGE  PAGE  CYLINDERS   '
@NM00128 DC    CL80' '
         ORG   HDNG7+121
HDLINE   DS    CL121
         ORG   HDLINE
@NM00129 DC    CL1'0'
@NM00130 DC    CL40'*FILE HEADER*  HOST DATE - YYDDD        '
@NM00131 DC    CL40'HOST TIME - XXXXX             MSC TIME -'
@NM00132 DC    CL40' XXXXXXXX                               '
         ORG   HDLINE+121
TRLINE   DS    CL121
         ORG   TRLINE
@NM00133 DC    CL121'0*FILE TRAILER*'
         ORG   TRLINE+121
DTLHDR   DS    CL121
         ORG   DTLHDR
@NM00134 DC    CL1'-'
@NM00135 DC    CL40'PARM OPTION X, DATES YYDDD-YYDDD, TIMES '
@NM00136 DC    CL40'HHMM-HHMM, INPUT RECORD COUNT XXXXXX, OU'
@NM00137 DC    CL40'TPUT RECORD COUNT XXXXXX, SELECT XXXXXX '
         ORG   DTLHDR+121
DATEHDR2 DS    CL121
         ORG   DATEHDR2
@NM00138 DC    CL1'0'
@NM00139 DC    CL40'FILE DATES ENCOUNTERED    MSC TIME    JU'
@NM00140 DC    CL80'LIAN CONVERSION    COUNT'
         ORG   DATEHDR2+121
PARMMSG  DC    CL28'1ICG900I INVALID PARM VALUES'
TRINMSG  DC    CL31'1ICG901I OPEN ERROR FOR TRACEIN'
TROUTMSG DC    CL32'1ICG902I OPEN ERROR FOR TRACEOUT'
ICGTR904 DC    CL30' ICG904I I/O ERROR ON TRACEIN '
ICGTR905 DC    CL30' ICG905I I/O ERROR ON TRACEOUT'
ICGTR906 DC    CL121' ICG906I IML COUNT MISMATCH'
FLAGONE  DC    X'FF'
FOXES    DC    X'FFFF'
         DS    CL2
FIXAREA  DS    CL200
         ORG   FIXAREA
@NM00143 DC    200CL1'Z'
         ORG   FIXAREA+200
EIGHT0   DC    CL8'00000000'
REGLOKUP DC    X'00'
         DC    X'01'
         DC    X'02'
         DC    X'03'
         DC    X'02'
         DC    X'03'
         DC    X'00'
         DC    X'01'
         DC    X'04'
         DC    X'05'
         DC    X'06'
         DC    X'07'
         DC    X'06'
         DC    X'07'
         DC    X'04'
         DC    X'05'
SPECLKUP DC    X'00'
         DC    X'01'
         DC    X'04'
         DC    X'05'
         DC    X'02'
         DC    X'03'
         DC    X'00'
         DC    X'01'
         DC    X'04'
         DC    X'05'
         DC    X'02'
         DC    X'03'
SALOOKUP DC    CL1'0'
         DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
         DC    CL1'6'
         DC    CL1'7'
         DC    CL1'8'
         DC    CL1'9'
         DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
SDGLOKUP DC    CL2'00'
         DC    CL2'01'
         DC    CL2'02'
         DC    CL2'03'
         DC    CL2'04'
         DC    CL2'05'
         DC    CL2'06'
         DC    CL2'07'
         DC    CL2'08'
         DC    CL2'09'
         DC    CL2'10'
         DC    CL2'11'
         DC    CL2'12'
         DC    CL2'13'
         DC    CL2'14'
         DC    CL2'15'
         DC    CL2'16'
         DC    CL2'17'
         DC    CL2'18'
         DC    CL2'19'
         DC    CL2'20'
         DC    CL2'21'
         DC    CL2'22'
         DC    CL2'23'
         DC    CL2'24'
         DC    CL2'25'
         DC    CL2'26'
         DC    CL2'27'
ICGTRINT CSECT
*                                                         /*@Y30LB40*/
IPATDCB  DCB   DSORG=PS,DDNAME=TRACEIN,MACRF=GM,RECFM=FB,LRECL=264,   **
               EODAD=EOJ,EROPT=SKP,SYNAD=READERR
IDCBL    EQU   *-IPATDCB
OPATDCB  DCB   DSORG=PS,DDNAME=TRACEOUT,MACRF=PM,RECFM=FB,LRECL=72,   **
               EROPT=ABE,SYNAD=WRITEERR
ODCBL    EQU   *-OPATDCB
PPATDCB  DCB   DSORG=PS,DDNAME=SYSPRINT,MACRF=PM,RECFM=FBA,LRECL=121
PDCBL    EQU   *-PPATDCB
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGTRINT CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
HOLDTXTM EQU   @03
SAVETIME EQU   @02
LINECNT  EQU   @07
P        EQU   @02
I        EQU   @06
LSTMINAD EQU   @06
SS       EQU   @02
HIT5TIME EQU   @07
HOLDT5TM EQU   @03
HOLDT4TM EQU   @05
HOLDT1TM EQU   @02
HOLDCYLS EQU   @04
HOLDVTOC EQU   @06
TIMEWORK EQU   @03
PARMPTR  EQU   @03
SAVE14   EQU   @06
SDGINDEX EQU   @03
INDEX    EQU   @02
DRDINDEX EQU   @03
DRCINDEX EQU   @02
DCBPTR   EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R14      EQU   @14
R15      EQU   @15
IHADCB   EQU   0
IHADCS05 EQU   0
DCBMODE  EQU   IHADCS05
DCBSTACK EQU   DCBMODE
DCBFUNC  EQU   IHADCS05+3
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
IHADCS40 EQU   0
DCBEOBAD EQU   IHADCS40
DCBCCCW  EQU   IHADCS40+4
DCBRECAD EQU   DCBCCCW
DCBRECBT EQU   DCBRECAD
DCBRCREL EQU   DCBRECBT
@NM00027 EQU   IHADCS40+12
DCBEROPT EQU   @NM00027
DCBERACC EQU   DCBEROPT
DCBERSKP EQU   DCBEROPT
DCBERABE EQU   DCBEROPT
MINIHDR  EQU   0
SEQUENCE EQU   MINIHDR
FLAG     EQU   MINIHDR+1
NXTMINAD EQU   MINIHDR+3
T1TIME   EQU   MINIHDR+4
T4TIME   EQU   MINIHDR+8
T5TIME   EQU   MINIHDR+10
FUNCID   EQU   MINIHDR+12
CPUID    EQU   MINIHDR+13
PLFLAG   EQU   MINIHDR+16
PLSTDEST EQU   PLFLAG
PLNOTU   EQU   PLFLAG
COUNT    EQU   MINIHDR+17
VUA      EQU   MINIHDR+18
VVA      EQU   MINIHDR+19
PAGELIST EQU   MINIHDR+20
RUA      EQU   PAGELIST
DEVICE   EQU   RUA
VIRTPAGE EQU   PAGELIST+1
REALPAGE EQU   PAGELIST+2
CYLIND   EQU   PAGELIST+3
PARMVALS EQU   0
PARMLEN  EQU   PARMVALS
PARMS    EQU   PARMVALS+2
BITADDR  EQU   0
FIXADDR  EQU   0
FIXLEN   EQU   0
FIXOPT   EQU   0
HEXADDR  EQU   0
HEXLEN   EQU   0
BLOCKHDR EQU   RECIN
CCHHRR   EQU   BLOCKHDR
TID      EQU   CCHHRR
CYL      EQU   CCHHRR+1
HEAD     EQU   CCHHRR+2
RECORD   EQU   CCHHRR+3
IMLCNT   EQU   CCHHRR+4
BLOCKFLG EQU   BLOCKHDR+8
DS2VALID EQU   BLOCKFLG
DS2IOS   EQU   BLOCKFLG
MINIPTR  EQU   BLOCKHDR+9
LIBRID   EQU   BLOCKHDR+10
RSPINDGP EQU   BLOCKHDR+11
DS1ADDR  EQU   BLOCKHDR+12
DS1PORT  EQU   DS1ADDR
DS1CU    EQU   DS1ADDR
DS2ADDR  EQU   BLOCKHDR+13
DS2PORT  EQU   DS2ADDR
DS2CU    EQU   DS2ADDR
VVADDR1  EQU   BLOCKHDR+14
VVADDR2  EQU   BLOCKHDR+15
QCBENTS  EQU   BLOCKHDR+16
@NM00033 EQU   QCBENTS+2
PAIRNUM  EQU   @NM00033
RWADDR   EQU   BLOCKHDR+22
CONTRLR  EQU   RWADDR
RWU      EQU   RWADDR
QCBADDR  EQU   BLOCKHDR+23
VOLID    EQU   BLOCKHDR+24
LZYX     EQU   BLOCKHDR+30
L        EQU   LZYX
Z        EQU   LZYX
Y        EQU   LZYX
X        EQU   LZYX+1
T2TIME   EQU   BLOCKHDR+32
T3TIME   EQU   BLOCKHDR+34
FIRSTMIN EQU   BLOCKHDR+40
BLKHDROV EQU   RECIN
BLKOFLG  EQU   BLKHDROV+8
HOSTDATE EQU   BLKHDROV+12
HOSTTIME EQU   BLKHDROV+16
DSMTIME  EQU   BLKHDROV+20
VRW      EQU   BLKHDROV+24
VDS      EQU   BLKHDROV+28
VRWC     EQU   BLKHDROV+30
VRSG     EQU   BLKHDROV+32
VL       EQU   BLKHDROV+63
ORW      EQU   BLKHDROV+64
ODS      EQU   BLKHDROV+68
ORWC     EQU   BLKHDROV+70
ORSG     EQU   BLKHDROV+72
OL       EQU   BLKHDROV+103
RRW      EQU   BLKHDROV+104
RDS      EQU   BLKHDROV+108
RRWC     EQU   BLKHDROV+110
RRSG     EQU   BLKHDROV+112
RL       EQU   BLKHDROV+143
MINILINE EQU   PRNTLINE
MINISEQ  EQU   MINILINE+11
MINIFLAG EQU   MINILINE+21
MINIADDR EQU   MINILINE+32
MINIFUNC EQU   MINILINE+37
MINICPU  EQU   MINILINE+42
MINIPGFL EQU   MINILINE+47
MINICNT  EQU   MINILINE+58
MINIVUA  EQU   MINILINE+65
MINIVVA  EQU   MINILINE+70
MINIT1A  EQU   MINILINE+74
MINIT1B  EQU   MINILINE+82
MINIT1C  EQU   MINILINE+83
MINICDAT EQU   MINILINE+88
MINICTIM EQU   MINILINE+95
MINIT4TM EQU   MINILINE+104
T4HOUR   EQU   MINIT4TM
T4SEP1   EQU   MINIT4TM+2
T4MINUTE EQU   MINIT4TM+3
T4SEP2   EQU   MINIT4TM+5
T4SECOND EQU   MINIT4TM+6
MINIT5TM EQU   MINILINE+113
T5HOUR   EQU   MINIT5TM
T5SEP1   EQU   MINIT5TM+2
T5MINUTE EQU   MINIT5TM+3
T5SEP2   EQU   MINIT5TM+5
T5SECOND EQU   MINIT5TM+6
PAGELINE EQU   BLKLINE
PAGEDEV  EQU   PAGELINE+12
PAGEVP   EQU   PAGELINE+18
PAGERP   EQU   PAGELINE+24
PAGECYL  EQU   PAGELINE+30
DTLCOUNT EQU   BLKLINE
OPT      EQU   DTLCOUNT+13
UDATE1   EQU   DTLCOUNT+22
UDATE2   EQU   DTLCOUNT+28
UTIME1   EQU   DTLCOUNT+41
UTIME2   EQU   DTLCOUNT+46
INCNT    EQU   DTLCOUNT+71
OUTCNT   EQU   DTLCOUNT+99
SELECTID EQU   DTLCOUNT+114
DATELINE EQU   BLKLINE
DLF2     EQU   DATELINE+25
DLF4     EQU   DATELINE+28
DLF6     EQU   DATELINE+31
DLF8     EQU   DATELINE+34
DLF10    EQU   DATELINE+40
DLF10A   EQU   DATELINE+42
DLF12    EQU   DATELINE+47
DLF14    EQU   DATELINE+50
DLF16    EQU   DATELINE+53
DLF18    EQU   DATELINE+59
OVLYCONV EQU   CONVERT
CONVERTO EQU   CONVERT
FLD2     EQU   CONVERTO+1
*                                      START UNREFERENCED COMPONENTS
FLD1     EQU   CONVERTO
FIELD3   EQU   OVLYCONV+1
FIELD2   EQU   OVLYCONV+1
FIELD1   EQU   OVLYCONV
@NM00101 EQU   DATELINE+65
@NM00100 EQU   DATELINE+55
@NM00099 EQU   DATELINE+52
@NM00098 EQU   DATELINE+49
@NM00097 EQU   DATELINE+45
@NM00096 EQU   DATELINE+36
@NM00095 EQU   DATELINE+33
@NM00094 EQU   DATELINE+30
@NM00093 EQU   DATELINE+27
@NM00092 EQU   DATELINE
@NM00091 EQU   DTLCOUNT+120
@NM00090 EQU   DTLCOUNT+105
@NM00089 EQU   DTLCOUNT+77
@NM00088 EQU   DTLCOUNT+50
@NM00087 EQU   DTLCOUNT+45
@NM00086 EQU   DTLCOUNT+33
@NM00085 EQU   DTLCOUNT+27
@NM00084 EQU   DTLCOUNT+14
@NM00083 EQU   DTLCOUNT
@NM00082 EQU   PAGELINE+38
@NM00081 EQU   PAGELINE+27
@NM00080 EQU   PAGELINE+21
@NM00079 EQU   PAGELINE+15
@NM00078 EQU   PAGELINE
@NM00077 EQU   MINILINE+112
@NM00076 EQU   MINILINE+103
@NM00075 EQU   MINILINE+94
@NM00074 EQU   MINILINE+86
@NM00073 EQU   MINILINE+72
@NM00072 EQU   MINILINE+67
@NM00071 EQU   MINILINE+61
@NM00070 EQU   MINILINE+55
@NM00069 EQU   MINILINE+44
@NM00068 EQU   MINILINE+39
@NM00067 EQU   MINILINE+34
@NM00066 EQU   MINILINE+29
@NM00065 EQU   MINILINE+19
@NM00064 EQU   MINILINE
@NM00042 EQU   BLKHDROV+142
@NM00041 EQU   BLKHDROV+102
@NM00040 EQU   BLKHDROV+62
@NM00039 EQU   BLKHDROV+9
@NM00038 EQU   BLKHDROV
SPAREBYT EQU   BLOCKHDR+39
JLWAIT   EQU   BLOCKHDR+38
BRSAVE   EQU   BLOCKHDR+37
STSAVE   EQU   BLOCKHDR+36
@NM00037 EQU   RWADDR
@NM00036 EQU   QCBENTS+3
@NM00035 EQU   @NM00033
@NM00034 EQU   @NM00033
@NM00032 EQU   QCBENTS
DS2NOTU  EQU   DS2ADDR
DS1NOTU  EQU   DS1ADDR
BITS67   EQU   BLOCKFLG
BIT4     EQU   BLOCKFLG
BITS123  EQU   BLOCKFLG
@NM00031 EQU   CCHHRR+6
@NM00043 EQU   RUA
RESERVED EQU   MINIHDR+14
SPARE    EQU   MINIHDR+2
BITS38   EQU   SEQUENCE
MVEDATA  EQU   SEQUENCE
VERIFY   EQU   SEQUENCE
DCBEOB   EQU   IHADCS40+20
DCBPRECL EQU   IHADCS40+18
@NM00030 EQU   IHADCS40+16
@NM00029 EQU   @NM00027+1
@NM00028 EQU   DCBEROPT
@NM00026 EQU   IHADCS40+10
@NM00025 EQU   IHADCS40+9
@NM00024 EQU   IHADCS40+8
DCBRECA  EQU   DCBRECAD+1
@NM00023 EQU   DCBRECBT
DCBRCFGT EQU   DCBRCREL
DCBRCTRU EQU   DCBRCREL
DCBLCCW  EQU   DCBEOBAD
DCBNOTE  EQU   DCBCNTRL
DCBLRECL EQU   IHADCS38+10
@NM00022 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00021 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00020 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00019 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00018 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBBLKSI EQU   IHADCS36+10
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00017 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00016 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
DCBOPTJ  EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUTA  EQU   DCBGETA
@NM00015 EQU   DCBPUT
DCBREADA EQU   DCBWRITA
@NM00014 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00013 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00012 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00011 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00010 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00009 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00008 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00007 EQU   DCBDSRG1
@NM00006 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
@NM00005 EQU   DCBFUNC
DCBFNCBT EQU   DCBFUNC
DCBFNCBX EQU   DCBFUNC
DCBFNCBD EQU   DCBFUNC
DCBFNCBW EQU   DCBFUNC
DCBFNCBP EQU   DCBFUNC
DCBFNCBR EQU   DCBFUNC
DCBFNCBI EQU   DCBFUNC
@NM00004 EQU   IHADCS05+2
@NM00003 EQU   IHADCS05+1
DCBSTCK1 EQU   DCBSTACK
DCBSTCK2 EQU   DCBSTACK
@NM00002 EQU   DCBSTACK
DCBMODER EQU   DCBSTACK
DCBMODEO EQU   DCBSTACK
DCBMODEE EQU   DCBSTACK
DCBMODEC EQU   DCBSTACK
@NM00001 EQU   IHADCB
*                                      END UNREFERENCED COMPONENTS
@RT00162 EQU   CLOSEFIL
@RT00166 EQU   CLOSEFIL
@RT00170 EQU   CLOSEFIL
@RT00182 EQU   RDTRACE
@RT00204 EQU   RDTRACE
@RT00206 EQU   RDTRACE
@RT00208 EQU   RDTRACE
@RF00217 EQU   RDTRACE
@RF00370 EQU   @EL00003
@RT00410 EQU   PARMEND
@RF00425 EQU   @RC00423
@RF00435 EQU   @RC00433
@RT00449 EQU   PARMEND
@RT00462 EQU   PARMEND
@RF00493 EQU   @EL00004
@RF00529 EQU   @EL00006
@RC00644 EQU   @RC00643
@RC00722 EQU   @EL00007
@RT00793 EQU   @EL00009
@RF00791 EQU   CKREC
@RT00807 EQU   @EL00009
@RT00820 EQU   @EL00009
@RF00878 EQU   @RC00870
@RT00959 EQU   @EL00011
@RF00962 EQU   @EL00011
@RT01111 EQU   @EL00013
@RT01137 EQU   @EL00013
@RT01225 EQU   @EL00013
@RT01287 EQU   @RC01286
@RF01271 EQU   @EL00015
@RF01323 EQU   @EL00015
@RT01375 EQU   EF4
EFEND    EQU   @EL00019
@RC01436 EQU   @EL00022
@PB00023 EQU   @EL00001
@RT01373 EQU   EFEND
@ENDDATA EQU   *
         END   ICGTRINT,(C'PLS2133',0701,77354)
