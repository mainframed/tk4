         TITLE 'ICGDSB03 MSC TABLE CREATE - VTOC UPDATE                *
                        '
ICGDSB03 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSB03  76.336'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0071
*/********************************************************** @XD00153*/
*/*                                                          @Y30LB12*/
*/*      ICGDSB03 (MAINLINE)                                 @XD00153*/
*/*                                                          @Y30LB12*/
*/*      DETERMINE WHICH OF THE THREE DCBS ARE TO BE         @XD00153*/
*/*      PROCESSED.  CALL ROUTINE 'DORDJFCB' TO READ THE     @XD00153*/
*/*      JFCB, AND IF READ WAS SUCCESSFUL, CALL 'DOOPEN' TO  @XD00153*/
*/*      OPEN AND UPDATE THE VTOC.  RETURN TO ICGDSB01       @XD00153*/
*/*      WITH RETURN CODE SET BY 'DORDJFCB'.                 @XD00153*/
*/*                                                          @Y30LB12*/
*/********************************************************** @XD00153*/
*                                                                  0071
*   /*****************************************************************/
*   /*                                                               */
*   /* ************************************************      @Y30LB10*/
*   /*                                                       @Y30LB10*/
*   /* INITIALIZE RETURN CODE THAT WILL BE RETURNED TO       @Y30LB10*/
*   /* THE CALLER.                                           @Y30LB10*/
*   /*                                                       @Y30LB10*/
*   /* ************************************************      @Y30LB10*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0071
*   RCCODE=RCOK;                    /*                       @Y30LB10*/
         SLR   RCCODE,RCCODE                                       0071
*   RFY                                                            0072
*     DSDATA BASED(DSPTR);          /*                       @Y30LB10*/
*                                                                  0072
*   /*****************************************************************/
*   /*                                                               */
*   /* ************************************************      @Y30LB10*/
*   /*                                                       @Y30LB10*/
*   /* THREE VTOCS MAY REQUIRE UPDATING WITH ONE             @Y30LB10*/
*   /* INVOCATION OF THIS MODULE. CHECK EACH                 @Y30LB10*/
*   /* WORKAREA. A ZERO ADDRESS IMPLIES THERE IS NO          @Y30LB10*/
*   /* VTOC TO UPDATE.                                       @Y30LB10*/
*   /*                                                       @Y30LB10*/
*   /* ************************************************      @Y30LB10*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0073
*CKALL:                                                            0073
*   DO I=1 TO 3;                    /* EXAMINE EACH PTR      @Y30LB10*/
CKALL    LA    I,1                                                 0073
@DL00073 DS    0H                                                  0074
*     DSPTR=VTADDR(I);              /* ADDR FOR OVERLAY      @Y30LB10*/
         LR    @10,I                                               0074
         SLA   @10,2                                               0074
         L     @15,@PC00001                                        0074
         L     DSPTR,VTADDR-4(@10,@15)                             0074
*     DCBPTR=ADDR(DSDCB);           /* ADDRESS OF DCB        @Y30LB10*/
         LR    DCBPTR,DSPTR                                        0075
*     IOBSTPTR=ADDR(DSIOB);         /* ADDRESS OF IOB        @Y30LB10*/
         LA    IOBSTPTR,DSIOB(,DSPTR)                              0076
*     JFCBPTR=ADDR(DSJFCB);         /* ADDRESS OF JFCB       @Y30LB10*/
         LA    JFCBPTR,DSJFCB(,DSPTR)                              0077
*     IF DSPTR^=0                   /* IF DCB ADR PASSED     @Y30LB12*/
*       THEN                        /*                       @Y30LB10*/
         LTR   DSPTR,DSPTR                                         0078
         BZ    @RF00078                                            0078
*       DO;                         /*                       @Y30LB10*/
*         CALL DORDJFCB;            /* READ THE JFCB         @Y30LB12*/
         BAL   @14,DORDJFCB                                        0080
*         IF RCCODE=RCOK            /* IF RET. CODE ZERO     @Y30LB12*/
*           THEN                    /*                       @Y30LB12*/
         LTR   RCCODE,RCCODE                                       0081
         BNZ   @RF00081                                            0081
*           CALL DOOPEN;            /* OPEN/UPDATE VTOC      @Y30LB12*/
         BAL   @14,DOOPEN                                          0082
*         ELSE                                                     0083
*           ;                       /*                       @Y30LB12*/
@RF00081 DS    0H                                                  0084
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0085
*       ;                           /*                       @Y30LB12*/
@RF00078 DS    0H                                                  0086
*   END CKALL;                      /* 3 POSSIBLE DCBS       @Y30LB12*/
         AH    I,@CH00050                                          0086
         CH    I,@CH00106                                          0086
         BNH   @DL00073                                            0086
*   RETURN CODE(RCCODE);            /* RET. TO ICGDSB01      @Y30LB12*/
         L     @13,4(,@13)                                         0087
         L     @00,@SIZDATD                                        0087
         LR    @01,@11                                             0087
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@03                                             0087
         L     @14,12(,@13)                                        0087
         LM    @00,@12,20(@13)                                     0087
         BR    @14                                                 0087
*                                                                  0088
*/********************************************************** @XD00153*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - DORDJFCB                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - IF THE MODULE WAS CALLED ON THE OPEN OF ONE   @Y30LB12*/
*/*            TABLES DATA SETS (VTTYPE = '01'X), DO A       @Y30LB12*/
*/*            RDJFCB                                        @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @XD00153*/
*                                                                  0088
*DORDJFCB:                                                         0088
*   PROCEDURE;                                                     0088
DORDJFCB STM   @14,@02,@SA00002                                    0088
         STM   @04,@12,@SA00002+20                                 0088
*   DCBEXLSA=ADDR(XLIST);           /* EXLST ADDR TO DCB     @Y30LB10*/
         LA    @10,XLIST                                           0089
         ST    @10,@TF00001                                        0089
         MVC   DCBEXLSA+28(3,DCBPTR),@TF00001+1                    0089
*   XLISTOP=XLISTOPJ;               /* OPTION IS RDJFCB      @Y30LB10*/
         MVC   XLISTOP(1),XLISTOPJ                                 0090
*   XLISTAD=JFCBPTR;                /* PTR TO JFCB AREA      @Y30LB10*/
         ST    JFCBPTR,@TF00001                                    0091
         MVC   XLISTAD(3),@TF00001+1                               0091
*   PARMLIST=DCBPTR;                /* ADDRESS OF DCB        @Y30LB10*/
*                                                                  0092
         ST    DCBPTR,PARMLIST                                     0092
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /*                                                       @Y30LB10*/
*   /* FOR AN OPEN REQUEST THE JFCB IS READ                  @Y30LB10*/
*   /* INTO WORKAREA PROVIDED BY THE CALLER.                 @Y30LB10*/
*   /* IF THE RDJFCB IS READ SUCCESSFULLY A                  @Y30LB10*/
*   /* FORMAT 1 DSCB IS MOVED TO THE BUFFER                  @Y30LB10*/
*   /* USED TO WRITE COUNT KEY AND DATA.                     @XD00153*/
*   /*                                                       @Y30LB10*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0093
*   IF VTTYPE=VTTYPEOP              /* IF CALLED TO OPEN     @Y30LB12*/
*     THEN                          /*                       @Y30LB10*/
         L     @10,@PC00001                                        0093
         CLI   VTTYPE(@10),1                                       0093
         BNE   @RF00093                                            0093
*RDJ:                                                              0094
*     DO;                           /*                       @Y30LB10*/
RDJ      DS    0H                                                  0095
*       PARMFLAG=LISTEND;           /* END-OF-LIST IND.      @Y30LB10*/
         MVC   PARMFLAG(1),LISTEND                                 0095
*       RFY                                                        0096
*         REG1 RSTD;                /* RESTRICT REG 1        @Y30LB10*/
*       RFY                                                        0097
*         RCREG RSTD;               /* RESTRICT REG 15       @Y30LB10*/
*       GEN(RDJFCB  MF=(E,PARMLIST));/* DO RDJFCB            @Y30LB10*/
         RDJFCB  MF=(E,PARMLIST)
*       RCCODE=RCREG;               /* SAVE RETURN CODE      @Y30LB10*/
         LR    RCCODE,RCREG                                        0099
*       RFY                                                        0100
*         REG1 UNRSTD;              /* UNRESTRICT REG 1      @Y30LB10*/
*       RFY                                                        0101
*         RCREG UNRSTD;             /* UNRESTRICT REG 15     @Y30LB10*/
*                                                                  0101
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @XD00153*/
*       /* IF A ZERO RETURN CODE RETURNED FROM THE           @Y30LB12*/
*       /* RDJFCB OPERATION, MOVE THE DDNAME FROM            @Y30LB12*/
*       /* THE JFCB INTO A SAVE AREA AND MOVE THE            @Y30LB12*/
*       /* MODEL FORMAT1 DSCB AND THE VOLSER INTO            @Y30LB12*/
*       /* BUFFER FOR WRITE.                                 @Y30LB12*/
*       /* *****************************************         @XD00153*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0102
*       IF RCCODE=RCOK              /* EXAMINE RET. CODE     @Y30LB12*/
*         THEN                                                     0102
         LTR   RCCODE,RCCODE                                       0102
         BNZ   @RF00102                                            0102
*RJOK:                                                             0103
*         DO;                       /*                       @Y30LB10*/
RJOK     DS    0H                                                  0104
*           DSDDNM(1:8)=DCBDDNAM(1:8);                             0104
         MVC   DSDDNM(8,DSPTR),DCBDDNAM+40(DCBPTR)                 0104
*           WRTDSCBN(1:140)=DS1DSCB(1:140);                        0105
         MVC   WRTDSCBN(140),DS1DSCB                               0105
*           WRTVOL=JFCAVOLS(1);     /*                       @Y30LB10*/
         MVC   WRTVOL(6),JFCAVOLS(JFCBPTR)                         0106
*           WRTDSCBN(15:20)=JFCAVOLS(1);/*                   @Z40LB38*/
*                                                                  0107
         MVC   WRTDSCBN+14(6),JFCAVOLS(JFCBPTR)                    0107
*           /*********************************************************/
*           /*                                                       */
*           /* ***********************************           @XD00153*/
*           /* IF THE VOLUME SERIAL NUMBER IS                @XD00153*/
*           /* BLANKS, EITHER NO DD STATEMENT OR             @Y30LB12*/
*           /* 'DUMMY' - SET 'CANNOT OPEN'                   @XD00153*/
*           /* RETURN CODE.                                  @XD00153*/
*           /* ***********************************           @XD00153*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0108
*           IF WRTVOL='      '      /* NO VOLSER             @Y30LB12*/
*             THEN                  /*                       @Y30LB12*/
         CLC   WRTVOL(6),@CC01033                                  0108
         BNE   @RF00108                                            0108
*             RCCODE=RCOPERR;       /* OPEN ERROR RC         @Y30LB12*/
         LA    RCCODE,4                                            0109
*           ELSE                                                   0110
*             ;                     /*                       @Y30LB12*/
@RF00108 DS    0H                                                  0111
*         END RJOK;                 /*                       @Y30LB10*/
*       ELSE                        /*                       @Y30LB10*/
*RJERR:                                                            0112
*         DO;                       /*                       @Y30LB10*/
         B     @RC00102                                            0112
@RF00102 DS    0H                                                  0112
RJERR    DS    0H                                                  0113
*           RCCODE=RCOPERR;         /* OPEN ERR RET.CODE     @Y30LB10*/
         LA    RCCODE,4                                            0113
*         END RJERR;                /*                       @Y30LB10*/
*     END RDJ;                      /*                       @Y30LB10*/
*                                                                  0115
*   /*****************************************************************/
*   /*                                                               */
*   /* *********************************************         @XD00153*/
*   /*                                                       @Y30LB10*/
*   /* FOR A CLOSE REQUEST A FMT 1 DSCB                      @Z40LB38*/
*   /* CONTAINING THE VIRTUAL ADDRESSES OF THE               @Z40LB38*/
*   /* MSC TABLES AND THE VERIFICATION TABLES IS             @Z40LB38*/
*   /* MOVED TO THE WRITE BUFFER AND WRITTEN OVER            @Z40LB38*/
*   /* THE PREVIOUS FORMAT 1 DSCB.                           @Z40LB38*/
*   /*                                                       @Y30LB10*/
*   /* *********************************************         @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0116
*   ELSE                            /*                       @Y30LB10*/
*FMT1:                                                             0116
*     DO;                           /*                       @Z40LB38*/
         B     @RC00093                                            0116
@RF00093 DS    0H                                                  0116
FMT1     DS    0H                                                  0117
*       DSDDNM(1:8)=DCBDDNAM(1:8);  /*                       @Z40LB38*/
         MVC   DSDDNM(8,DSPTR),DCBDDNAM+40(DCBPTR)                 0117
*       WRTDSCBN(1:140)=DS1DSCB(1:140);/*                    @Z40LB38*/
         MVC   WRTDSCBN(140),DS1DSCB                               0118
*       WRTVOL=JFCAVOLS(1);         /*                       @Z40LB38*/
         MVC   WRTVOL(6),JFCAVOLS(JFCBPTR)                         0119
*       WRTDSCBN(15:20)=JFCAVOLS(1);/*                       @Z40LB38*/
         MVC   WRTDSCBN+14(6),JFCAVOLS(JFCBPTR)                    0120
*       WRTVOLSQ=CONVOLSQ;          /*                       @Z40LB38*/
         MVC   WRTVOLSQ(2),CONVOLSQ                                0121
*       WRTEXPDT=CONEXPDT;          /*                       @Z40LB38*/
         MVC   WRTEXPDT(3),CONEXPDT                                0122
*       WRTRECFM=CONRECFM;          /*                       @Z40LB38*/
         MVC   WRTRECFM(1),CONRECFM                                0123
*       WRTBLKL=CONBLKL;            /*                       @Z40LB38*/
         MVC   WRTBLKL(2),CONBLKL                                  0124
*       WRTLRECL=CONLRECL;          /*                       @Z40LB38*/
         MVC   WRTLRECL(2),CONLRECL                                0125
*       WRTDSIND=CONDSIND;          /*                       @Z40LB38*/
         MVC   WRTDSIND(1),CONDSIND                                0126
*       WRTSCALO=CONSCALO;          /*                       @Z40LB38*/
         MVC   WRTSCALO(4),CONSCALO                                0127
*       WRTEXT1=VERTABLE;           /*                       @Z40LB38*/
         MVC   WRTEXT1(10),VERTABLE                                0128
*       WRTEXT2=MSCTABLE;           /*                       @Z40LB38*/
         MVC   WRTEXT2(10),MSCTABLE                                0129
*     END FMT1;                     /*                       @Z40LB38*/
*   END DORDJFCB;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00002 DS    0H                                                  0131
@EF00002 DS    0H                                                  0131
@ER00002 LM    @14,@02,@SA00002                                    0131
         LM    @04,@12,@SA00002+20                                 0131
         BR    @14                                                 0131
*                                                                  0132
*/********************************************************** @XD00153*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - DOOPEN                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - PERFORM AN OPENJ ON THE VTOC OF THE TABLES    @Y30LB12*/
*/*            PACK POINTED TO BY DCBPTR                     @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @XD00153*/
*                                                                  0132
*DOOPEN:                                                           0132
*   PROCEDURE;                                                     0132
*                                                                  0132
DOOPEN   STM   @14,@02,@SA00003                                    0132
         STM   @04,@12,@SA00003+20                                 0132
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /*                                                       @Y30LB10*/
*   /* IF ALL PREVIOUS OPERATIONS HAVE BEEN                  @Y30LB10*/
*   /* SUCCESSFUL THE VTOC WILL BE OPENED.                   @Y30LB10*/
*   /*                                                       @Y30LB10*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*   JFCBDSNM(1)='04'X;              /*                       @Y30LB10*/
         MVI   JFCBDSNM(JFCBPTR),X'04'                             0133
*   MVC(JFCBDSNM(2:44),JFCBDSNM(1:43));/*                    @Y30LB10*/
         MVC   JFCBDSNM+1(43,JFCBPTR),JFCBDSNM(JFCBPTR)            0134
*   RFY                                                            0135
*     REG1 RSTD;                    /*                       @Y30LB10*/
*   REG1=ADDR(PARMLIST);            /*                       @Y30LB10*/
         LA    REG1,PARMLIST                                       0136
*   PARMFLAG=OPENOUT;               /*                       @Y30LB10*/
         MVC   PARMFLAG(1),OPENOUT                                 0137
*   GEN(OPEN  TYPE=J,MF=(E,(REG1)));/*                       @Y30LB10*/
         OPEN  TYPE=J,MF=(E,(REG1))
*   RFY                                                            0139
*     REG1 UNRSTD;                  /*                       @Y30LB10*/
*                                                                  0139
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /*                                                       @Y30LB10*/
*   /* IF THE DCB OPEN FLAG IS NOT ON,                       @Y30LB10*/
*   /* INDICATING OPEN ERROR, SET ERROR                      @Y30LB10*/
*   /* RETURN CODE AND SET ERROR FLAG                        @Y30LB10*/
*   /*                                                       @Y30LB10*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0140
*   IF DCBOFOPN='0'B THEN                                          0140
         TM    DCBOFOPN+40(DCBPTR),B'00010000'                     0140
         BNZ   @RF00140                                            0140
*OPJERR:                                                           0141
*     DO;                           /*                       @Y30LB10*/
OPJERR   DS    0H                                                  0142
*       RCCODE=RCOPERR;             /*                       @Y30LB10*/
         LA    RCCODE,4                                            0142
*       DSFLGOER='1'B;              /*                       @Y30LB10*/
         OI    DSFLGOER(DSPTR),B'01000000'                         0143
*     END OPJERR;                   /*                       @Y30LB10*/
*                                                                  0144
*   /*****************************************************************/
*   /*                                                               */
*   /* *********************************************         @XD00153*/
*   /*                                                       @Y30LB10*/
*   /* CALL FORMAT1 TO WRITE FORMAT 1 DSCB                   @Y30LB12*/
*   /*                                                       @Y30LB12*/
*   /* *********************************************         @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0145
*   ELSE                                                           0145
*     CALL FORMAT1;                                                0145
         B     @RC00140                                            0145
@RF00140 BAL   @14,FORMAT1                                         0145
*   END DOOPEN;                                                    0146
@EL00003 DS    0H                                                  0146
@EF00003 DS    0H                                                  0146
@ER00003 LM    @14,@02,@SA00003                                    0146
         LM    @04,@12,@SA00003+20                                 0146
         BR    @14                                                 0146
*                                                                  0147
*/********************************************************** @XD00153*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - FORMAT1                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - WRITE FORMAT1 DSCB ON OPEN AND ON             @Z40LB38*/
*/*            CLOSE INTO THIRD RECORD OF VTOC.  CLOSE THE   @Y30LB12*/
*/*            VTOC AFTER SETTING OF THE WRITE FLAG.         @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @XD00153*/
*                                                                  0147
*FORMAT1:                                                          0147
*   PROCEDURE;                                                     0147
*                                                                  0147
FORMAT1  STM   @14,@02,@SA00004                                    0147
         STM   @04,@12,@SA00004+20                                 0147
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /* BUILD IOB, ECB AND CCW'S REQUIRED TO WRITE            @Y30LB10*/
*   /* COUNT KEY AND DATA TO WRITE THE DSCB.                 @Y30LB10*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*   DSIOB=''B;                      /*                       @Y30LB10*/
         XC    DSIOB(40,DSPTR),DSIOB(DSPTR)                        0148
*   DSCCW(1)=SRCHCCW;               /* SEARCH ID EQUAL       @Y30LB10*/
         MVC   DSCCW(8,DSPTR),SRCHCCW                              0149
*   DSCCW(2)=TICCCW;                /* TIC TO SEARCH         @Y30LB10*/
         MVC   DSCCW+8(8,DSPTR),TICCCW                             0150
*   DSCCW(3)=WRTCCW;                /* WRITE CCW             @Y30LB10*/
         MVC   DSCCW+16(8,DSPTR),WRTCCW                            0151
*   DSCCWAD(1)=ADDR(IOBCC);         /* S ID EQ ADDR          @Y30LB10*/
         LA    @10,IOBCC(,IOBSTPTR)                                0152
         ST    @10,@TF00001                                        0152
         MVC   DSCCWAD(3,DSPTR),@TF00001+1                         0152
*   DSCCWAD(2)=ADDR(DSCCW(1));      /* TIC BACK, SIDEQ       @Y30LB12*/
         LA    @10,DSCCW(,DSPTR)                                   0153
         ST    @10,@TF00001                                        0153
         MVC   DSCCWAD+8(3,DSPTR),@TF00001+1                       0153
*   DSCCWAD(3)=ADDR(WRTEDSCB);      /* DATA TO WRITE         @Y30LB12*/
         LA    @10,WRTEDSCB                                        0154
         ST    @10,@TF00001                                        0154
         MVC   DSCCWAD+16(3,DSPTR),@TF00001+1                      0154
*   IOBSEEK(4:8)=SRCCHHR(1:5);      /* SEEK CCHHR            @Y30LB12*/
         MVC   IOBSEEK+3(5,IOBSTPTR),SRCCHHR                       0155
*   IOBECBPB=ADDR(DSECB);           /*                       @Y30LB10*/
         LA    @10,DSECB(,DSPTR)                                   0156
         ST    @10,@TF00001                                        0156
         MVC   IOBECBPB(3,IOBSTPTR),@TF00001+1                     0156
*   DSECB=0;                        /*                       @Y30LB10*/
         SLR   @10,@10                                             0157
         ST    @10,@TF00001                                        0157
         MVC   DSECB(4,DSPTR),@TF00001                             0157
*   IOBSTRTB=ADDR(DSCCW(1));        /*                       @Y30LB10*/
         LA    @10,DSCCW(,DSPTR)                                   0158
         ST    @10,@TF00001                                        0158
         MVC   IOBSTRTB(3,IOBSTPTR),@TF00001+1                     0158
*   IOBDCBPB=DCBPTR;                /*                       @Y30LB10*/
         ST    DCBPTR,@TF00001                                     0159
         MVC   IOBDCBPB(3,IOBSTPTR),@TF00001+1                     0159
*   RFY                                                            0160
*     REG1 RSTD;                    /*                       @Y30LB10*/
*   REG1=IOBSTPTR;                  /*                       @Y30LB10*/
         LR    REG1,IOBSTPTR                                       0161
*   GEN(EXCP   (REG1));             /* ISSUE WRITE EXCP      @Y30LB10*/
         EXCP   (REG1)
*   REG1=ADDR(DSECB);               /* POINT AT IOB          @Y30LB10*/
         LA    REG1,DSECB(,DSPTR)                                  0163
*   GEN(WAIT  ECB=(REG1));          /* WAIT ON IOB           @Y30LB10*/
         WAIT  ECB=(REG1)
*   RFY                                                            0165
*     REG1 UNRSTD;                  /* UNRESTRICT REG 1      @Y30LB10*/
*                                                                  0165
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /*                                                       @Y30LB10*/
*   /* IF WRITE WAS SUCCESSFUL, MOVE DSNAME TO JFCB          @Y30LB10*/
*   /* AND SET VTOC UPDATED FLAG.                            @Y30LB10*/
*   /*                                                       @Y30LB10*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0166
*   IF IOBECBCC='7F'X THEN                                         0166
         CLI   IOBECBCC(IOBSTPTR),X'7F'                            0166
         BNE   @RF00166                                            0166
*WRTOK:                                                            0167
*     DO;                           /*                       @Y30LB10*/
WRTOK    DS    0H                                                  0168
*       DSFLGUPT='1'B;              /*                       @Y30LB10*/
         OI    DSFLGUPT(DSPTR),B'10000000'                         0168
*       JFCBDSNM(1:44)=WRTDSCBN(1:44);/*                     @Z40LB38*/
         MVC   JFCBDSNM(44,JFCBPTR),WRTDSCBN                       0169
*       CALL FORMAT4;               /* UPDATE FMT 4 DSCB     @OZ05136*/
         BAL   @14,FORMAT4                                         0170
*     END WRTOK;                    /*                       @Y30LB10*/
*                                                                  0171
*   /*****************************************************************/
*   /*                                                               */
*   /* *********************************************         @XD00153*/
*   /*                                                       @Y30LB10*/
*   /* IF WRITE ERROR SET ERROR RETURN CODE AND              @Y30LB10*/
*   /* FLAG.                                                 @Y30LB10*/
*   /*                                                       @Y30LB10*/
*   /* *********************************************         @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0172
*   ELSE                                                           0172
*WRTERR:                                                           0172
*     DO;                           /*                       @Y30LB10*/
         B     @RC00166                                            0172
@RF00166 DS    0H                                                  0172
WRTERR   DS    0H                                                  0173
*       RCCODE=RCWTERR;             /* R.C. WRITE ERROR *@Y30LB10    */
         LA    RCCODE,8                                            0173
*       DSFLGWER='1'B;              /* WRITE ERROR FLAG      @Y30LB10*/
         OI    DSFLGWER(DSPTR),B'00100000'                         0174
*     END WRTERR;                   /*                       @Y30LB10*/
*                                                                  0175
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /*                                                       @Y30LB10*/
*   /* CLOSE THE VTOC                                        @Y30LB10*/
*   /*                                                       @Y30LB10*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0176
*   DCBOFLWR='0'B;                  /* SET OFF WRITE FLG     @Y30LB12*/
@RC00166 NI    DCBOFLWR+40(DCBPTR),B'01111111'                     0176
*   PARMFLAG=LISTEND;               /* END-OF LIST IND.      @Y30LB10*/
         MVC   PARMFLAG(1),LISTEND                                 0177
*   RFY                                                            0178
*     REG1 RSTD;                    /* RESTRICT REG 1        @Y30LB10*/
*   REG1=ADDR(PARMLIST);            /* FOR EXECUTE FORM      @Y30LB10*/
         LA    REG1,PARMLIST                                       0179
*   GEN(CLOSE MF=(E,(REG1)));       /* CLOSE VTOC            @Y30LB10*/
         CLOSE MF=(E,(REG1))
*   RFY                                                            0181
*     REG1 UNRSTD;                  /*                       @Y30LB10*/
*   END FORMAT1;                    /* RETURN TO DOOPEN      @Y30LB12*/
@EL00004 DS    0H                                                  0182
@EF00004 DS    0H                                                  0182
@ER00004 LM    @14,@02,@SA00004                                    0182
         LM    @04,@12,@SA00004+20                                 0182
         BR    @14                                                 0182
*                                                                  0183
*/********************************************************** @OZ05136*/
*/*                                                          @OZ05136*/
*/* PROCEDURE NAME - FORMAT4                                 @OZ05136*/
*/*                                                          @OZ05136*/
*/* FUNCTION - READ THE FORMAT 4 DSCB (VTOC DATA SET CONTROL @OZ05136*/
*/*            BLOCK), AND MODIFY THE ADDRESS OF THE LAST    @OZ05136*/
*/*            FORMAT 1 DSCB FROM TRACK 2 RECORD 2 TO TRACK  @OZ05136*/
*/*            2 RECORD 3 AND CHANGE THE NUMBER OF FREE      @OZ05136*/
*/*            FORMAT 0 DSCBS FROM 37 TO 36.                 @OZ05136*/
*/*            WRITE BACK THE FORMAT 4 DSCB.                 @OZ05136*/
*/*                                                          @OZ05136*/
*/********************************************************** @OZ05136*/
*                                                                  0183
*FORMAT4:                                                          0183
*   PROCEDURE;                      /*                       @OZ05136*/
FORMAT4  STM   @14,@02,@SA00005                                    0183
         STM   @04,@12,@SA00005+20                                 0183
*   DSIOB=''B;                      /*                       @OZ05136*/
         XC    DSIOB(40,DSPTR),DSIOB(DSPTR)                        0184
*   DSCCW(1)=SRCHCCW;               /*                       @OZ05136*/
         MVC   DSCCW(8,DSPTR),SRCHCCW                              0185
*   DSCCW(2)=TICCCW;                /*                       @OZ05136*/
         MVC   DSCCW+8(8,DSPTR),TICCCW                             0186
*   DSCCW(3)=READCCW;               /*                       @OZ05136*/
         MVC   DSCCW+16(8,DSPTR),READCCW                           0187
*   DSCCWAD(1)=ADDR(IOBCC);         /*                       @OZ05136*/
         LA    @10,IOBCC(,IOBSTPTR)                                0188
         ST    @10,@TF00001                                        0188
         MVC   DSCCWAD(3,DSPTR),@TF00001+1                         0188
*   DSCCWAD(2)=ADDR(DSCCW(1));      /*                       @OZ05136*/
         LA    @10,DSCCW(,DSPTR)                                   0189
         ST    @10,@TF00001                                        0189
         MVC   DSCCWAD+8(3,DSPTR),@TF00001+1                       0189
*   DSCCWAD(3)=ADDR(DS4DSCB);       /*                       @OZ05136*/
         LA    @10,DS4DSCB                                         0190
         ST    @10,@TF00001                                        0190
         MVC   DSCCWAD+16(3,DSPTR),@TF00001+1                      0190
*   IOBSEEK(4:8)=FMT4CHR;           /*                       @OZ05136*/
         MVC   IOBSEEK+3(5,IOBSTPTR),FMT4CHR                       0191
*   IOBECBPT=ADDR(DSECB);           /*                       @OZ05136*/
         LA    @10,DSECB(,DSPTR)                                   0192
         ST    @10,IOBECBPT(,IOBSTPTR)                             0192
*   DSECB=0;                        /*                       @OZ05136*/
         SLR   @10,@10                                             0193
         ST    @10,@TF00001                                        0193
         MVC   DSECB(4,DSPTR),@TF00001                             0193
*   IOBSTRTB=ADDR(DSCCW(1));        /*                       @OZ05136*/
         LA    @10,DSCCW(,DSPTR)                                   0194
         ST    @10,@TF00001                                        0194
         MVC   IOBSTRTB(3,IOBSTPTR),@TF00001+1                     0194
*   IOBDCBPT=DCBPTR;                /*                       @OZ05136*/
         ST    DCBPTR,IOBDCBPT(,IOBSTPTR)                          0195
*   RFY                                                            0196
*     REG1 RSTD;                    /*                       @OZ05136*/
*   REG1=IOBSTPTR;                  /*                       @OZ05136*/
         LR    REG1,IOBSTPTR                                       0197
*   GEN(EXCP (REG1));               /*                       @OZ05136*/
         EXCP (REG1)
*   REG1=ADDR(DSECB);               /*                       @OZ05136*/
         LA    REG1,DSECB(,DSPTR)                                  0199
*   GEN(WAIT ECB=(REG1));           /*                       @OZ05136*/
         WAIT ECB=(REG1)
*   RFY                                                            0201
*     REG1 UNRSTD;                  /*                       @OZ05136*/
*   IF IOBECBCC^='7F'X              /*                       @OZ05136*/
*     THEN                          /*                       @OZ05136*/
         CLI   IOBECBCC(IOBSTPTR),X'7F'                            0202
         BE    @RF00202                                            0202
*     DO;                           /*                       @OZ05136*/
*       RCCODE=RCWTERR;             /*                       @OZ05136*/
         LA    RCCODE,8                                            0204
*       DSFLGWER='1'B;              /*                       @OZ05136*/
         OI    DSFLGWER(DSPTR),B'00100000'                         0205
*       RETURN;                     /*                       @OZ05136*/
@EL00005 DS    0H                                                  0206
@EF00005 DS    0H                                                  0206
@ER00005 LM    @14,@02,@SA00005                                    0206
         LM    @04,@12,@SA00005+20                                 0206
         BR    @14                                                 0206
*     END;                          /*                       @OZ05136
*                                                            @OZ05136*/
*   DS4HPCHR='0000000203'X;         /*                       @OZ05136*/
@RF00202 MVC   DS4HPCHR(5),@CB00942                                0208
*   DS4DSREC='0024'X;               /*                       @OZ05136*/
         MVC   DS4DSREC(2),@CB01062                                0209
*   DSIOB=''B;                      /*                       @OZ05136*/
         XC    DSIOB(40,DSPTR),DSIOB(DSPTR)                        0210
*   DSCCW(1)=SRCHCCW;               /*                       @OZ05136*/
         MVC   DSCCW(8,DSPTR),SRCHCCW                              0211
*   DSCCW(2)=TICCCW;                /*                       @OZ05136*/
         MVC   DSCCW+8(8,DSPTR),TICCCW                             0212
*   DSCCW(3)=WRTCCW;                /*                       @OZ05136*/
         MVC   DSCCW+16(8,DSPTR),WRTCCW                            0213
*   DSCCWAD(1)=ADDR(IOBCC);         /*                       @OZ05136*/
         LA    @10,IOBCC(,IOBSTPTR)                                0214
         ST    @10,@TF00001                                        0214
         MVC   DSCCWAD(3,DSPTR),@TF00001+1                         0214
*   DSCCWAD(2)=ADDR(DSCCW(1));      /*                       @OZ05136*/
         LA    @10,DSCCW(,DSPTR)                                   0215
         ST    @10,@TF00001                                        0215
         MVC   DSCCWAD+8(3,DSPTR),@TF00001+1                       0215
*   DSCCWAD(3)=ADDR(DS4DSCB);       /*                       @OZ05136*/
         LA    @10,DS4DSCB                                         0216
         ST    @10,@TF00001                                        0216
         MVC   DSCCWAD+16(3,DSPTR),@TF00001+1                      0216
*   IOBSEEK(4:8)=FMT4CHR;           /*                       @OZ05136*/
         MVC   IOBSEEK+3(5,IOBSTPTR),FMT4CHR                       0217
*   IOBECBPT=ADDR(DSECB);           /*                       @OZ05136*/
         LA    @10,DSECB(,DSPTR)                                   0218
         ST    @10,IOBECBPT(,IOBSTPTR)                             0218
*   DSECB=0;                        /*                       @OZ05136*/
         SLR   @10,@10                                             0219
         ST    @10,@TF00001                                        0219
         MVC   DSECB(4,DSPTR),@TF00001                             0219
*   IOBSTRTB=ADDR(DSCCW(1));        /*                       @OZ05136*/
         LA    @10,DSCCW(,DSPTR)                                   0220
         ST    @10,@TF00001                                        0220
         MVC   IOBSTRTB(3,IOBSTPTR),@TF00001+1                     0220
*   IOBDCBPT=DCBPTR;                /*                       @OZ05136*/
         ST    DCBPTR,IOBDCBPT(,IOBSTPTR)                          0221
*   RFY                                                            0222
*     REG1 RSTD;                    /*                       @OZ05136*/
*   REG1=IOBSTPTR;                  /*                       @OZ05136*/
         LR    REG1,IOBSTPTR                                       0223
*   GEN(EXCP (REG1));               /*                       @OZ05136*/
         EXCP (REG1)
*   REG1=ADDR(DSECB);               /*                       @OZ05136*/
         LA    REG1,DSECB(,DSPTR)                                  0225
*   GEN(WAIT ECB=(REG1));           /*                       @OZ05136*/
         WAIT ECB=(REG1)
*   RFY                                                            0227
*     REG1 UNRSTD;                  /*                       @OZ05136*/
*   IF IOBECBCC^='7F'X              /*                       @OZ05136*/
*     THEN                          /*                       @OZ05136*/
         CLI   IOBECBCC(IOBSTPTR),X'7F'                            0228
         BE    @RF00228                                            0228
*     DO;                           /*                       @OZ05136*/
*       RCCODE=RCWTERR;             /*                       @OZ05136*/
         LA    RCCODE,8                                            0230
*       DSFLGWER='1'B;              /*                       @OZ05136*/
         OI    DSFLGWER(DSPTR),B'00100000'                         0231
*     END;                          /*                       @OZ05136*/
*   END FORMAT4;                    /*                       @OZ05136*/
         B     @EL00005                                            0233
*   GENERATE;                                                      0234
*                                                         /*@XD00153*/
PATCHB03 DC    32C'PATCHB03'                              /*@XD00153*/
*   END ICGDSB03                    /*                       @Y30LB10*/
*                                                                  0235
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                       */
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */
*                                                                  0235
*       ;                                                          0235
@EL00001 L     @13,4(,@13)                                         0235
@EF00001 L     @00,@SIZDATD                                        0235
         LR    @01,@11                                             0235
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0235
         BR    @14                                                 0235
@DATA    DS    0H
@CH00050 DC    H'1'
@CH00106 DC    H'3'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    14F
@SA00003 DS    14F
@SA00004 DS    14F
@SA00005 DS    14F
@TF00001 DS    F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSB03 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
IOBPRPTR DS    A
ECBPTR   DS    A
PARMLIST DS    AL4
         ORG   PARMLIST
PARMFLAG DS    CL1
         ORG   PARMFLAG
PARMEND  DS    BL1
@NM00024 EQU   PARMFLAG+0
         ORG   PARMLIST+1
PARMADDR DS    AL3
         ORG   PARMLIST+4
XLIST    DS    AL4
         ORG   XLIST
XLISTOP  DS    CL1
XLISTAD  DS    AL3
         ORG   XLIST+4
WRTEDSCB DS    CL140
         ORG   WRTEDSCB
WRTDSCBN DS    CL140
         ORG   WRTDSCBN
@NM00025 DS    CL45
WRTVOL   DS    CL6
WRTVOLSQ DS    CL2
@NM00026 DS    CL3
WRTEXPDT DS    CL3
@NM00027 DS    CL25
WRTRECFM DS    CL1
@NM00028 DS    CL1
WRTBLKL  DS    CL2
WRTLRECL DS    CL2
@NM00029 DS    CL3
WRTDSIND DS    CL1
WRTSCALO DS    CL4
@NM00030 DS    CL7
WRTEXT1  DS    CL10
WRTEXT2  DS    CL10
         ORG   WRTEDSCB+140
DS4DSCB  DS    CL140
         ORG   DS4DSCB
@NM00047 DS    CL45
DS4HPCHR DS    CL5
DS4DSREC DS    CL2
@NM00048 DS    CL88
         ORG   DS4DSCB+140
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSB03 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC01033 DC    C'      '
@CB00942 DC    X'0000000203'
@CB01062 DC    X'0024'
OPENOUT  DC    X'8F'
LISTEND  DC    X'80'
XLISTOPJ DC    X'87'
SRCHCCW  DC    X'3100000040000005'
TICCCW   DC    X'0800000040000001'
WRTCCW   DC    X'0D0000002000008C'
READCCW  DC    X'0E0000002000008C'
SRCCHHR  DC    X'0000000203'
FMT4CHR  DC    X'0000000201'
CONVOLSQ DC    X'0001'
CONEXPDT DC    X'63015E'
CONRECFM DC    X'80'
CONBLKL  DC    X'0108'
CONLRECL DC    X'0108'
CONDSIND DC    X'90'
CONSCALO DC    X'80000260'
VERTABLE DC    X'01000007000100070001'
MSCTABLE DC    X'01010008000000270012'
DS1DSCB  DS    CL140
         ORG   DS1DSCB
DS1DSNAM DC    CL44'SYS1.MSCTABLE.                              '
@NM00031 DC    X'F1'
@NM00032 DC    CL6'VOLSER'
@NM00033 DC    X'0000000000000000'
@NM00034 DC    X'02'
@NM00035 DC    X'000000000000000000000000000000'
@NM00036 DC    X'00000000000000'
@NM00037 DC    X'4000'
@NM00038 DC    X'000000000000000000'
@NM00039 DC    X'00'
@NM00040 DC    X'00000000'
@NM00041 DC    X'0000000000'
@NM00042 DC    X'0000'
@NM00043 DC    X'81000001000001980012'
@NM00044 DC    X'81010000000100000001'
@NM00045 DC    X'00000000000000000000'
@NM00046 DC    X'0000000000'
         ORG   DS1DSCB+140
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @07
RCCODE   EQU   @03
JFCBPTR  EQU   @06
IOBSTPTR EQU   @02
DCBPTR   EQU   @04
RCREG    EQU   @15
REG1     EQU   @01
DSPTR    EQU   @05
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
DCBEXLSA EQU   DCBEXLST+1
IHADCS24 EQU   0
DCBDDNAM EQU   IHADCS24
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
IHADCS28 EQU   0
DCBOPTCD EQU   IHADCS28
DCBOPTZ  EQU   DCBOPTCD
IOBPREFX EQU   0
IOBCFLG1 EQU   IOBPREFX
IOBSTDRD EQU   0
IOBFLAG1 EQU   IOBSTDRD
IOBCYCCK EQU   IOBFLAG1
IOBRSTRT EQU   IOBFLAG1
IOBFLAG2 EQU   IOBSTDRD+1
IOBPURGE EQU   IOBFLAG2
IOBRDHA0 EQU   IOBFLAG2
IOBSENS0 EQU   IOBSTDRD+2
IOBS0B7  EQU   IOBSENS0
IOBSENS1 EQU   IOBSTDRD+3
IOBECBPT EQU   IOBSTDRD+4
IOBECBCC EQU   IOBECBPT
IOBECBPB EQU   IOBECBPT+1
IOBFLAG3 EQU   IOBSTDRD+8
IOBFL3   EQU   IOBFLAG3
IOBCNC   EQU   IOBFL3
IOBICL   EQU   IOBFL3
IOBCSW   EQU   IOBSTDRD+9
IOBIOCSW EQU   IOBCSW
IOBSTBYT EQU   IOBIOCSW+3
IOBUSTAT EQU   IOBSTBYT
IOBCSTAT EQU   IOBSTBYT+1
IOBSTART EQU   IOBSTDRD+16
IOBSTRTB EQU   IOBSTART+1
IOBDCBPT EQU   IOBSTDRD+20
IOBFLAG4 EQU   IOBDCBPT
IOBDCBPB EQU   IOBDCBPT+1
IOBRESTR EQU   IOBSTDRD+24
IOBINCAM EQU   IOBSTDRD+28
IOBBTAMF EQU   IOBINCAM
INFMJFCB EQU   0
JFCBDSNM EQU   INFMJFCB
JFCBELNM EQU   INFMJFCB+44
JFCBTSDM EQU   INFMJFCB+52
JFCFCBID EQU   INFMJFCB+56
JFCBFRID EQU   JFCFCBID
JFCBLTYP EQU   INFMJFCB+66
JFCBOTTR EQU   INFMJFCB+67
JFCBUFOF EQU   JFCBOTTR
JFCBFLSQ EQU   JFCBOTTR+1
JFCFUNC  EQU   JFCBFLSQ
JFCBMASK EQU   INFMJFCB+72
JFCBFLG1 EQU   JFCBMASK+5
JFCOPEN  EQU   JFCBFLG1
JFCBFLG2 EQU   JFCBMASK+6
JFCDEFER EQU   JFCBFLG2
JFCBIND1 EQU   INFMJFCB+86
JFCBIND2 EQU   INFMJFCB+87
JFCAMPTR EQU   INFMJFCB+88
JFCBUFRQ EQU   JFCAMPTR
JFCBUFNO EQU   JFCBUFRQ
JFCBGNCP EQU   JFCAMPTR+1
JFCBHIAR EQU   JFCBGNCP
JFCBFALN EQU   JFCBHIAR
JFCBFTEK EQU   JFCBFALN
JFCBBFTA EQU   JFCBFTEK
JFCEROPT EQU   INFMJFCB+92
JFCTRTCH EQU   INFMJFCB+93
ECB      EQU   0
ECBRB    EQU   ECB
ECBEVTB  EQU   ECBRB
ECBEXTB  EQU   ECBEVTB
ECBCC    EQU   ECBEXTB
ECBCCCNT EQU   ECBEXTB+1
ECBRBA   EQU   ECBCCCNT
ECBEVTBA EQU   ECBRBA
ECBEXTBA EQU   ECBEVTBA
ECBBYTE3 EQU   ECBEXTBA+2
ECBEXTND EQU   ECBBYTE3
DSDATA   EQU   0
DSDCB    EQU   DSDATA
DSFLG    EQU   DSDATA+96
DSFLGUPT EQU   DSFLG
DSFLGOER EQU   DSFLG
DSFLGWER EQU   DSFLG
DSJFCB   EQU   DSDATA+100
DSECB    EQU   DSDATA+276
DSIOB    EQU   DSDATA+280
DSCCW    EQU   DSDATA+320
DSCCWAD  EQU   DSCCW+1
DSDDNM   EQU   DSDATA+616
VTPARM   EQU   0
VTTYPE   EQU   VTPARM
VTADDR   EQU   VTPARM+4
IOBORG01 EQU   IOBPREFX+8
IOBNIOBA EQU   IOBORG01
IOBNFLG1 EQU   IOBNIOBA
IOBPRTOV EQU   IOBNFLG1
IOBORG02 EQU   IOBPREFX+8
IOBDQADA EQU   IOBORG02
IOBDEQIN EQU   IOBDQADA
IOBORG03 EQU   IOBPREFX+12
IOBORG04 EQU   IOBINCAM
IOBORG12 EQU   IOBINCAM
IOBFL4   EQU   IOBORG12
IOBEXTEN EQU   IOBSTDRD+32
IOBSEEK  EQU   IOBEXTEN
IOBBB    EQU   IOBSEEK+1
IOBCC    EQU   IOBSEEK+3
IOBHH    EQU   IOBSEEK+5
IOBORG05 EQU   IOBEXTEN
IOBORG06 EQU   IOBEXTEN
IOBNXTPT EQU   IOBORG06+4
IOBSTATA EQU   IOBNXTPT
IOBORG07 EQU   IOBEXTEN+8
W1IEXTEN EQU   IOBORG07
IOBORG08 EQU   IOBEXTEN+8
IOBINDCT EQU   IOBORG08+4
IOBUNSQR EQU   IOBORG08+5
IOBFCHAD EQU   IOBORG08+8
IOBORG09 EQU   IOBEXTEN+8
IOBDPLAD EQU   IOBORG09+4
IOBDTYPE EQU   IOBORG09+8
IOBDTYP2 EQU   IOBORG09+9
IOBDSTAT EQU   IOBORG09+10
IOBSTAT1 EQU   IOBDSTAT
IOBORG10 EQU   IOBEXTEN+8
IOBSEEK2 EQU   IOBORG10
IOBORG11 EQU   IOBEXTEN
IOBERCT  EQU   IOBORG11
IOBUCBXV EQU   IOBERCT
IOBNAME  EQU   IOBORG11+4
IOBORG13 EQU   IOBEXTEN
IOBSKADR EQU   IOBORG13
JFCKEYLE EQU   JFCTRTCH
JFCCODE  EQU   JFCKEYLE
JFCSTACK EQU   JFCTRTCH
JFCMODE  EQU   JFCSTACK
JFCSPPRT EQU   JFCTRTCH
JFCBABFS EQU   JFCSPPRT+2
JFCLIMCT EQU   JFCBABFS
JFCDSORG EQU   JFCSPPRT+5
JFCDSRG1 EQU   JFCDSORG
JFCDSRG2 EQU   JFCDSORG+1
JFCRECFM EQU   JFCSPPRT+7
JFCRCFM  EQU   JFCRECFM
JFCOPTCD EQU   JFCSPPRT+8
JFCWVCSP EQU   JFCOPTCD
JFCWVCIS EQU   JFCWVCSP
JFCWVCBD EQU   JFCWVCIS
JFCALLOW EQU   JFCOPTCD
JFCRSV17 EQU   JFCALLOW
JFCOVER  EQU   JFCRSV17
JFCPCIBT EQU   JFCOPTCD
JFCMAST  EQU   JFCPCIBT
JFCEXT   EQU   JFCMAST
JFCBCKPT EQU   JFCOPTCD
JFCIND   EQU   JFCBCKPT
JFCRSV18 EQU   JFCOPTCD
JFCCYL   EQU   JFCRSV18
JFCACT   EQU   JFCCYL
JFCREDUC EQU   JFCOPTCD
JFCRSV19 EQU   JFCREDUC
JFCRSV20 EQU   JFCRSV19
JFCRSV21 EQU   JFCOPTCD
JFCDEL   EQU   JFCRSV21
JFCOPTJ  EQU   JFCOPTCD
JFCREORG EQU   JFCOPTJ
JFCBLKSI EQU   JFCSPPRT+9
JFCBUFSI EQU   JFCBLKSI
JFCAMSYN EQU   JFCSPPRT+11
JFCNCP   EQU   JFCAMSYN+2
JFCNTM   EQU   JFCAMSYN+3
JFCBFSEQ EQU   JFCNTM
JFCPCI   EQU   JFCBFSEQ
JFCRESRV EQU   JFCAMSYN+4
JFCUCSEG EQU   JFCRESRV
JFCUCSOP EQU   JFCUCSEG+4
JFCOUTLI EQU   JFCUCSEG+5
JFCTHRSH EQU   JFCOUTLI
JFCCPRI  EQU   JFCTHRSH
JFCBVOLS EQU   JFCUCSEG+10
JFCAVOLS EQU   JFCBVOLS
JFCBS001 EQU   JFCBVOLS
JFCBPQTY EQU   JFCBS001+34
JFCBCTRI EQU   JFCBS001+37
JFCBSQTY EQU   JFCBS001+38
JFCFLGS1 EQU   JFCBS001+41
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JFCBEND  EQU   JFCBS001+58
JFCBSPTN EQU   JFCBS001+57
JFCBVLCT EQU   JFCBS001+56
JFCBDRLH EQU   JFCBS001+53
JFCBSBNM EQU   JFCBS001+50
JFCBABST EQU   JFCBS001+48
JFCBSPNM EQU   JFCBS001+45
JFCBDQTY EQU   JFCBS001+42
JFCBUAFF EQU   JFCFLGS1
JFCRSV45 EQU   JFCFLGS1
JFCVRDS  EQU   JFCFLGS1
JFCBCEOV EQU   JFCFLGS1
JFCRSV42 EQU   JFCFLGS1
JFCBADSP EQU   JFCFLGS1
JFCTOPEN EQU   JFCFLGS1
JFCBDLET EQU   JFCFLGS1
JFCRQID  EQU   JFCBSQTY
JFCROUND EQU   JFCBCTRI
JFCALX   EQU   JFCBCTRI
JFCMIXG  EQU   JFCBCTRI
JFCONTIG EQU   JFCBCTRI
JFCRSV29 EQU   JFCBCTRI
JFCBMSGP EQU   JFCBCTRI
JFCBSPAC EQU   JFCBCTRI
JFCRUNIT EQU   JFCBPQTY
JFCBEXAD EQU   JFCBS001+31
JFCBEXTL EQU   JFCBS001+30
JFCMSVGP EQU   JFCBS001+22
@NM00017 EQU   JFCBS001
JFCBNVOL EQU   JFCUCSEG+9
JFCBNTCS EQU   JFCUCSEG+8
JFCSOWA  EQU   JFCOUTLI+1
JFCSEND  EQU   JFCCPRI
JFCEQUAL EQU   JFCCPRI
JFCRECV  EQU   JFCCPRI
JFCRSV34 EQU   JFCCPRI
JFCRSV33 EQU   JFCCPRI
JFCRSV55 EQU   JFCCPRI
JFCRSV54 EQU   JFCCPRI
JFCRSV53 EQU   JFCCPRI
JFCRSV27 EQU   JFCUCSOP
JFCRSV26 EQU   JFCUCSOP
JFCFCBVR EQU   JFCUCSOP
JFCFCBAL EQU   JFCUCSOP
JFCVER   EQU   JFCUCSOP
JFCRSV25 EQU   JFCUCSOP
JFCFOLD  EQU   JFCUCSOP
JFCBEXTP EQU   JFCUCSOP
JFCUCSID EQU   JFCUCSEG
JFCINTVL EQU   JFCSPPRT+19
JFCDBUFN EQU   JFCRESRV+3
JFCCYLOF EQU   JFCRESRV+2
JFCRKP   EQU   JFCRESRV
JFCPCIR2 EQU   JFCPCI
JFCPCIR1 EQU   JFCPCI
JFCPCIN2 EQU   JFCPCI
JFCPCIN1 EQU   JFCPCI
JFCPCIA2 EQU   JFCPCI
JFCPCIA1 EQU   JFCPCI
JFCPCIX2 EQU   JFCPCI
JFCPCIX1 EQU   JFCPCI
JFCBUFMX EQU   JFCNCP
JFCLRECL EQU   JFCAMSYN
JFCBAXBF EQU   JFCBUFSI
JFCREL   EQU   JFCREORG
JFCRSV22 EQU   JFCDEL
JFCSRCHD EQU   JFCRSV20
JFCOPTQ  EQU   JFCACT
JFCFEED  EQU   JFCIND
JFCCBWU  EQU   JFCEXT
JFCWUMSG EQU   JFCOVER
JFCSDNAM EQU   JFCWVCBD
@NM00016 EQU   JFCRECFM
JFCCHAR  EQU   JFCRECFM
JFCRFS   EQU   JFCRECFM
JFCRFB   EQU   JFCRECFM
JFCRFO   EQU   JFCRCFM
JFCFMREC EQU   JFCRCFM
JFCRSV16 EQU   JFCDSRG2
JFCRSV15 EQU   JFCDSRG2
JFCORGTR EQU   JFCDSRG2
JFCORGAM EQU   JFCDSRG2
JFCRSV13 EQU   JFCDSRG2
JFCORGTQ EQU   JFCDSRG2
JFCORGTX EQU   JFCDSRG2
JFCORGGS EQU   JFCDSRG2
JFCORGU  EQU   JFCDSRG1
JFCORGPO EQU   JFCDSRG1
JFCORGMQ EQU   JFCDSRG1
JFCORGCQ EQU   JFCDSRG1
JFCORGCX EQU   JFCDSRG1
JFCORGDA EQU   JFCDSRG1
JFCORGPS EQU   JFCDSRG1
JFCORGIS EQU   JFCDSRG1
JFCTRKBL EQU   JFCLIMCT+1
@NM00015 EQU   JFCLIMCT
JFCDEN   EQU   JFCSPPRT+1
JFCPRTSP EQU   JFCSPPRT
JFCONE   EQU   JFCMODE
JFCTWO   EQU   JFCMODE
JFCRSV07 EQU   JFCMODE
JFCRSV06 EQU   JFCMODE
JFCMODER EQU   JFCMODE
JFCMODEO EQU   JFCMODE
JFCEBCD  EQU   JFCMODE
JFCBIN   EQU   JFCMODE
JFCRSV32 EQU   JFCCODE
JFCTTY   EQU   JFCCODE
JFCASCII EQU   JFCCODE
JFCNCR   EQU   JFCCODE
JFCBUR   EQU   JFCCODE
JFCFRI   EQU   JFCCODE
JFCBCD   EQU   JFCCODE
JFCNOCON EQU   JFCCODE
IOBSKSS  EQU   IOBSKADR+3
IOBSK0   EQU   IOBSKADR+2
IOBSKTT  EQU   IOBSKADR+1
IOBSKRV  EQU   IOBSKADR
IOBCSWSV EQU   IOBORG11+17
IOBSENSV EQU   IOBORG11+16
IOBRCD   EQU   IOBORG11+12
IOBMDREC EQU   IOBORG11+8
IOBNAMEA EQU   IOBNAME+1
IOBNAMSZ EQU   IOBNAME
IOBERCTA EQU   IOBERCT+1
IOBRTYPE EQU   IOBUCBXV
IOBRDCHP EQU   IOBORG10+20
IOBNEXTA EQU   IOBORG10+16
IOBREADA EQU   IOBORG10+12
IOBBUFC  EQU   IOBORG10+8
IOBSK2R  EQU   IOBSEEK2+7
IOBSK2HH EQU   IOBSEEK2+5
IOBSK2CC EQU   IOBSEEK2+3
IOBSK2BB EQU   IOBSEEK2+1
IOBSK2M  EQU   IOBSEEK2
IOBCHNPR EQU   IOBORG09+40
IOBDNCRF EQU   IOBORG09+32
IOBRSV35 EQU   IOBORG09+24
IOBDQPTR EQU   IOBORG09+20
IOBRSV34 EQU   IOBORG09+18
IOBDBYTN EQU   IOBORG09+16
IOBDCPND EQU   IOBORG09+12
IOBSTAT2 EQU   IOBDSTAT+1
IOBSIORT EQU   IOBSTAT1
IOBADDVU EQU   IOBSTAT1
IOBBUFF  EQU   IOBSTAT1
IOBENQUE EQU   IOBSTAT1
IOBPASS2 EQU   IOBSTAT1
IOBSYNCH EQU   IOBSTAT1
IOBNEWVL EQU   IOBSTAT1
IOBABNRM EQU   IOBSTAT1
IOBRELEX EQU   IOBDTYP2
IOBADDTY EQU   IOBDTYP2
IOBTYPE  EQU   IOBDTYP2
IOBRQUST EQU   IOBDTYP2
IOBSUFFX EQU   IOBDTYP2
IOBSBLKL EQU   IOBDTYP2
IOBSKEY  EQU   IOBDTYP2
IOBRELBL EQU   IOBDTYPE
IOBRDEXC EQU   IOBDTYPE
IOBDYNBF EQU   IOBDTYPE
IOBACTAD EQU   IOBDTYPE
IOBFDBCK EQU   IOBDTYPE
IOBEXTSC EQU   IOBDTYPE
IOBOVFLO EQU   IOBDTYPE
IOBVERFY EQU   IOBDTYPE
IOBDPLB  EQU   IOBDPLAD+1
IOBDAYLI EQU   IOBDPLAD
IOBDIOBS EQU   IOBORG09+2
IOBDBYTR EQU   IOBORG09
IOBBCHAD EQU   IOBORG08+12
IOBFCHNB EQU   IOBFCHAD+1
IOBCOUNT EQU   IOBFCHAD
IOBASYN  EQU   IOBORG08+7
IOBAPP   EQU   IOBORG08+6
IOBRSV32 EQU   IOBUNSQR
IOBRSV31 EQU   IOBUNSQR
IOBRSV30 EQU   IOBUNSQR
IOBKNRWR EQU   IOBUNSQR
IOBKNWR  EQU   IOBUNSQR
IOBNTAV2 EQU   IOBUNSQR
IOBNTAV1 EQU   IOBUNSQR
IOBCPBSY EQU   IOBUNSQR
IOBCHNNL EQU   IOBINDCT
IOBRSV29 EQU   IOBINDCT
IOBRSV28 EQU   IOBINDCT
IOBRSV27 EQU   IOBINDCT
IOBKEYAD EQU   IOBINDCT
IOBOVPTR EQU   IOBINDCT
IOBUNSCH EQU   IOBINDCT
IOBDEQCP EQU   IOBINDCT
IOBCCWAD EQU   IOBORG08
W1OEXTEN EQU   W1IEXTEN
IOBCCW   EQU   IOBORG06+8
IOBNXTPB EQU   IOBNXTPT+1
IOBRSV26 EQU   IOBSTATA
IOBRSV25 EQU   IOBSTATA
IOBRSV24 EQU   IOBSTATA
IOBRSV23 EQU   IOBSTATA
IOBRSV22 EQU   IOBSTATA
IOBRSV21 EQU   IOBSTATA
IOBRSV20 EQU   IOBSTATA
IOBAVLFL EQU   IOBSTATA
IOBRSV37 EQU   IOBORG06+1
IOBUCBXG EQU   IOBORG06
IOBCPA   EQU   IOBORG05+32
IOBERINF EQU   IOBORG05+16
IOBERCCW EQU   IOBORG05+8
IOBSNDPT EQU   IOBORG05+7
IOBRCVPT EQU   IOBORG05+6
IOBWORK  EQU   IOBORG05+1
IOBUCBX  EQU   IOBORG05
IOBR     EQU   IOBSEEK+7
IOBHH2   EQU   IOBHH+1
IOBHH1   EQU   IOBHH
IOBCC2   EQU   IOBCC+1
IOBCC1   EQU   IOBCC
IOBBB2   EQU   IOBBB+1
IOBBB1   EQU   IOBBB
IOBM     EQU   IOBSEEK
IOBRSV46 EQU   IOBFL4
IOBRSV47 EQU   IOBFL4
IOBENT   EQU   IOBFL4
IOBEQP   EQU   IOBFL4
IOBBUS   EQU   IOBFL4
IOBDCK   EQU   IOBFL4
IOBREJ   EQU   IOBFL4
IOBOVR   EQU   IOBFL4
IOBCRILC EQU   IOBORG04+1
IOBCRDCC EQU   IOBORG04
IOBGQECB EQU   IOBORG03
IOBSWAP  EQU   IOBORG02+4
IOBDQADB EQU   IOBDQADA+1
IOBRSV13 EQU   IOBDEQIN
IOBRSV12 EQU   IOBDEQIN
IOBRSV11 EQU   IOBDEQIN
IOBRSV10 EQU   IOBDEQIN
IOBRSV09 EQU   IOBDEQIN
IOBRSV08 EQU   IOBDEQIN
IOBRSV07 EQU   IOBDEQIN
IOBDEQ   EQU   IOBDEQIN
IOBNECB  EQU   IOBORG01+4
IOBNIOBB EQU   IOBNIOBA+1
IOBFIRST EQU   IOBNFLG1
IOBUPERR EQU   IOBNFLG1
IOBSPAN  EQU   IOBNFLG1
IOBBKSPC EQU   IOBNFLG1
IOBUPDAT EQU   IOBNFLG1
IOBREAD  EQU   IOBNFLG1
IOBWRITE EQU   IOBNFLG1
IOBSEGMT EQU   IOBPRTOV
@NM00022 EQU   VTPARM+1
DSCCWLN  EQU   DSCCW+5
DSCCWFG  EQU   DSCCW+4
DSCCWOP  EQU   DSCCW
@NM00023 EQU   DSFLG
ECBEVNT  EQU   ECBEXTND
@NM00021 EQU   ECBEXTND
@NM00020 EQU   ECBBYTE3
@NM00019 EQU   ECBEXTBA
@NM00018 EQU   ECBCC
ECBPOSTB EQU   ECBCC
ECBWAITB EQU   ECBCC
JFCRSV05 EQU   JFCEROPT
JFCRSV04 EQU   JFCEROPT
JFCRSV03 EQU   JFCEROPT
JFCRSV02 EQU   JFCEROPT
JFCTOPT  EQU   JFCEROPT
JFCABN   EQU   JFCEROPT
JFCSKP   EQU   JFCEROPT
JFCACC   EQU   JFCEROPT
JFCBUFL  EQU   JFCAMPTR+2
JFCFWORD EQU   JFCBFTEK
JFCDWORD EQU   JFCBFTEK
JFCHIER1 EQU   JFCBFTEK
JFCDYN   EQU   JFCBFTEK
JFCEXC   EQU   JFCBFTEK
JFCBBFTR EQU   JFCBBFTA
JFCSIM   EQU   JFCBBFTA
JFCHIER  EQU   JFCBFTEK
JFCBFOUT EQU   JFCBUFNO
JFCBUFIN EQU   JFCBUFNO
JFCTEMP  EQU   JFCBIND2
JFCREQ   EQU   JFCBIND2
JFCENT   EQU   JFCBIND2
JFCSHARE EQU   JFCBIND2
JFCSECUR EQU   JFCBIND2
JFCDISP  EQU   JFCBIND2
JFCPDS   EQU   JFCBIND1
JFCGDG   EQU   JFCBIND1
JFCADDED EQU   JFCBIND1
JFCLOC   EQU   JFCBIND1
JFCRLSE  EQU   JFCBIND1
JFCBXPDT EQU   INFMJFCB+83
JFCBCRDT EQU   INFMJFCB+80
JFCBOPS2 EQU   JFCBMASK+7
JFCRCTLG EQU   JFCBFLG2
JFCBBUFF EQU   JFCBFLG2
JFCTRACE EQU   JFCBFLG2
JFCSDRPS EQU   JFCBFLG2
JFCMODNW EQU   JFCBFLG2
JFCNRPS  EQU   JFCDEFER
JFCOUTOP EQU   JFCBFLG2
JFCINOP  EQU   JFCBFLG2
JFCBPWBP EQU   JFCOPEN
@NM00014 EQU   JFCOPEN
JFCDUAL  EQU   JFCBFLG1
JFCSLDES EQU   JFCBFLG1
JFCSLCRE EQU   JFCBFLG1
JFCSTAND EQU   JFCBFLG1
JFCBOPS1 EQU   JFCBMASK
JFCBVLSQ EQU   INFMJFCB+70
JFCRSV31 EQU   JFCFUNC
JFCFNCBT EQU   JFCFUNC
JFCFNCBX EQU   JFCFUNC
JFCFNCBD EQU   JFCFUNC
JFCFNCBW EQU   JFCFUNC
JFCFNCBP EQU   JFCFUNC
JFCFNCBR EQU   JFCFUNC
JFCFNCBI EQU   JFCFUNC
JFCBFOFL EQU   JFCBUFOF
JFCNL    EQU   JFCBLTYP
JFCSL    EQU   JFCBLTYP
JFCNSL   EQU   JFCBLTYP
JFCSUL   EQU   JFCBLTYP
JFCBLP   EQU   JFCBLTYP
JFCBLTM  EQU   JFCBLTYP
JFCBAL   EQU   JFCBLTYP
JFCRSV38 EQU   JFCBLTYP
JFCVINDX EQU   INFMJFCB+64
JFCNLREC EQU   INFMJFCB+62
JFCBADBF EQU   INFMJFCB+60
JFCAMSTR EQU   JFCBFRID+2
JFCAMCRO EQU   JFCBFRID
JFCBDSCB EQU   INFMJFCB+53
JFCPAT   EQU   JFCBTSDM
JFCNDCB  EQU   JFCBTSDM
JFCNDSCB EQU   JFCBTSDM
JFCNWRIT EQU   JFCBTSDM
JFCTTR   EQU   JFCBTSDM
JFCSDS   EQU   JFCBTSDM
JFCVSL   EQU   JFCBTSDM
JFCCAT   EQU   JFCBTSDM
JFCIPLTX EQU   JFCBELNM
JFCBQNAM EQU   JFCBDSNM
IOBERRCT EQU   IOBSTDRD+30
IOBRSV19 EQU   IOBINCAM+1
IOBOLTST EQU   IOBBTAMF
IOBRFTMG EQU   IOBBTAMF
IOBRSV17 EQU   IOBBTAMF
IOBRSV16 EQU   IOBBTAMF
IOBRSV15 EQU   IOBBTAMF
IOBRSV14 EQU   IOBBTAMF
IOBINUSE EQU   IOBBTAMF
IOBPRMER EQU   IOBBTAMF
IOBRSTRB EQU   IOBRESTR+1
IOBREPOS EQU   IOBRESTR
IOBRSV44 EQU   IOBFLAG4
IOBJES3I EQU   IOBFLAG4
IOBRSV42 EQU   IOBFLAG4
IOBRSV41 EQU   IOBFLAG4
IOBRSV40 EQU   IOBFLAG4
IOBPMERR EQU   IOBFLAG4
IOBCC3WE EQU   IOBFLAG4
IOBGDPOL EQU   IOBFLAG4
IOBSIOCC EQU   IOBSTART
IOBCSB7  EQU   IOBCSTAT
IOBCSB6  EQU   IOBCSTAT
IOBCSB5  EQU   IOBCSTAT
IOBCSB4  EQU   IOBCSTAT
IOBCSB3  EQU   IOBCSTAT
IOBCSB2  EQU   IOBCSTAT
IOBCSB1  EQU   IOBCSTAT
IOBCSB0  EQU   IOBCSTAT
IOBUSB7  EQU   IOBUSTAT
IOBUSB6  EQU   IOBUSTAT
IOBUSB5  EQU   IOBUSTAT
IOBUSB4  EQU   IOBUSTAT
IOBUSB3  EQU   IOBUSTAT
IOBUSB2  EQU   IOBUSTAT
IOBUSB1  EQU   IOBUSTAT
IOBUSB0  EQU   IOBUSTAT
IOBCMDA  EQU   IOBIOCSW
IOBLOG   EQU   IOBFL3
IOBJAM   EQU   IOBICL
IOBMSG   EQU   IOBFL3
IOBSDR   EQU   IOBCNC
IOBACU   EQU   IOBFL3
IOBCDC   EQU   IOBFL3
IOBICC   EQU   IOBFL3
IOBCCC   EQU   IOBFL3
IOBS1B7  EQU   IOBSENS1
IOBS1B6  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B0  EQU   IOBSENS1
IOBSNSC9 EQU   IOBS0B7
IOBS0B6  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B0  EQU   IOBSENS0
IOBPNCH  EQU   IOBFLAG2
IOBSTATO EQU   IOBFLAG2
IOBSKUPD EQU   IOBFLAG2
IOBALTTR EQU   IOBFLAG2
IOBRRT2  EQU   IOBRDHA0
IOBRRT3  EQU   IOBPURGE
IOBSENSE EQU   IOBFLAG2
IOBHALT  EQU   IOBFLAG2
IOBSPSVC EQU   IOBRSTRT
IOBUNREL EQU   IOBFLAG1
IOBIOERR EQU   IOBFLAG1
IOBFCREX EQU   IOBCYCCK
IOBRPSTN EQU   IOBFLAG1
IOBERRTN EQU   IOBFLAG1
IOBCMDCH EQU   IOBFLAG1
IOBDATCH EQU   IOBFLAG1
IOBCNOPA EQU   IOBPREFX+12
IOBCICB  EQU   IOBPREFX+8
IOBCECB  EQU   IOBPREFX+4
IOBCONOP EQU   IOBPREFX+3
IOBCINOP EQU   IOBPREFX+2
IOBRSV05 EQU   IOBPREFX+1
IOBPCI   EQU   IOBCFLG1
IOBRSTCH EQU   IOBCFLG1
IOBABAPP EQU   IOBCFLG1
IOBPTST  EQU   IOBCFLG1
IOBRSV04 EQU   IOBCFLG1
IOBRSV03 EQU   IOBCFLG1
IOBRSV02 EQU   IOBCFLG1
IOBRSV01 EQU   IOBCFLG1
@NM00013 EQU   IHADCS28+1
@NM00012 EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
@NM00011 EQU   DCBOPTCD
DCBDEBA  EQU   DCBDEBAD+1
@NM00010 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBIFPCT EQU   DCBIFLGS
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00009 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBIBPCT EQU   DCBIFLG
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00008 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00007 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00006 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00005 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
DCBDSGMQ EQU   DCBDSRG1
DCBDSGCQ EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00004 EQU   IHADCS01+5
@NM00003 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00002 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00001 EQU   IHADCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00093 EQU   @EL00002
@RC00140 EQU   @EL00003
@RF00228 EQU   @EL00005
@RC00102 EQU   @RC00093
@ENDDATA EQU   *
         END   ICGDSB03,(C'PLS1251',0603,76336)
