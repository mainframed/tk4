         TITLE 'ICGDSA04 MSC TABLE CREATE, CHECK HOST INTERFACE        *
                        '
ICGDSA04 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSA04  76.335'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0016
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            EXAMINE EACH HOST INTERFACE SPECIFICATION     @Y30LB12*/
*/*            BUILT FROM AN UPPERCON CONTROL STATEMENT      @Y30LB12*/
*/*            AND CHECK TO BE SURE THAT IT IS DIFFERENT     @Y30LB12*/
*/*            FROM ALL OTHER HOST INTERFACE                 @Y30LB12*/
*/*            SPECIFICATIONS.                               @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            IF TWO IDENTICAL INTERFACE SPECIFICATIONS     @Y30LB12*/
*/*            ARE FOUND, WRITE ERROR MESSAGE ICGDS308       @Y30LB12*/
*/*            WHICH WILL CAUSE TERMINATION AT THE END       @Y30LB12*/
*/*            OF THE ANALYZE PHASE.                         @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            NOTE THAT THE CHECK IS FORWARD ONLY, SO       @Y30LB12*/
*/*            IF THERE IS AN EQUAL COMPARE, IT IS ONLY      @Y30LB12*/
*/*            A=B, NOT BOTH A=B AND B=A                     @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0016
*   DO I=1 TO MAXSACI;              /* 48 INTERFACES         @YD00113*/
*                                                                  0016
         LA    @10,1                                               0016
         ST    @10,I                                               0016
@DL00016 DS    0H                                                  0017
*     /***************************************************************/
*     /*                                                             */
*     /* ******************************************          @YD00113*/
*     /* IF INTERFACE IS USED, TEST CPUID, CHANNEL,          @YD00113*/
*     /* AND CONTROL UNIT ADDRESS IF IT MATCHES WITH         @YD00113*/
*     /* ANY OF THE REMAINING CPUID, CHANNEL, AND            @YD00113*/
*     /* CONTROL UNIT ADDRESSES. IF A MATCH FOR ALL          @YD00113*/
*     /* THREE ARE FOUND, ISSUE ERROR MESSAGE ICGDS308       @YD00113*/
*     /* ******************************************          @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0017
*     IF CISPEC(I)='1'B             /* IF INTERFACE USED     @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @05,@10                                             0017
         MH    @05,@CH00112                                        0017
         L     @01,COMPTR2(,R4)                                    0017
         ALR   @01,@05                                             0017
         TM    CISPEC-9(@01),B'10000000'                           0017
         BNO   @RF00017                                            0017
*       DO;                         /*                       @Y30LB12*/
*         J=I+1;                    /* CHECK ONLY A TO B     @Y30LB12*/
         AH    @10,@CH00042                                        0019
         ST    @10,J                                               0019
*         DO K=J TO MAXSACI;        /* GET NEXT B INT        @YD00113*/
         B     @DE00020                                            0020
@DL00020 DS    0H                                                  0021
*           IF RSGCPUID(I)=RSGCPUID(K)/* MATCH               @Y30LB12*/
*               &RSGCHAN(I)=RSGCHAN(K)/* MATCH               @Y30LB12*/
*               &RSGCUA(I)=RSGCUA(K)/* MATCH                 @Y30LB12*/
*             THEN                  /* IF ALL 3 MATCH        @Y30LB12*/
         LA    @05,9                                               0021
         L     @01,I                                               0021
         MR    @00,@05                                             0021
         L     @15,COMPTR2(,R4)                                    0021
         LR    @03,@10                                             0021
         MR    @02,@05                                             0021
         ST    @01,@TF00001                                        0021
         ALR   @01,@15                                             0021
         ST    @03,@TF00002                                        0021
         ALR   @03,@15                                             0021
         CLC   RSGCPUID-9(5,@01),RSGCPUID-9(@03)                   0021
         BNE   @RF00021                                            0021
         LR    @10,@15                                             0021
         AL    @10,@TF00001                                        0021
         LR    @05,@15                                             0021
         AL    @05,@TF00002                                        0021
         CLC   RSGCHAN-9(1,@10),RSGCHAN-9(@05)                     0021
         BNE   @RF00021                                            0021
         LR    @10,@15                                             0021
         AL    @10,@TF00001                                        0021
         LR    @05,@15                                             0021
         AL    @05,@TF00002                                        0021
         CLC   RSGCUA-9(1,@10),RSGCUA-9(@05)                       0021
         BNE   @RF00021                                            0021
*             DO;                   /*                       @Y30LB12*/
*               OUTBUF2(1:98)=ICGDS308;/*                    @Y30LB12*/
         MVC   OUTBUF2(98,R4),ICGDS308                             0023
*               PACKED(1:5)=RSGCPUID(I);/*                   @Y30LB12*/
         AL    @15,@TF00001                                        0024
         MVC   PACKED(5),RSGCPUID-9(@15)                           0024
*               PACKED(6)='0F'X;    /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0025
*               GEN(UNPK    UNPACKED(11),PACKED(6));               0026
         UNPK    UNPACKED(11),PACKED(6)
*               OUTBUF2(24:33)=UNPACKED(1:10);/*             @Y30LB12*/
         MVC   OUTBUF2+23(10,R4),UNPACKED                          0027
*               A04WORK1=RSGCHAN(I);/*                       @Y30LB12*/
         L     @10,I                                               0028
         MH    @10,@CH00112                                        0028
         L     @05,COMPTR2(,R4)                                    0028
         ALR   @05,@10                                             0028
         MVC   A04WORK1(1),RSGCHAN-9(@05)                          0028
*               CALL A04CONV1;      /*                       @Y30LB12*/
         BAL   @14,A04CONV1                                        0029
*               OUTBUF2(43)=A04WORK1;/*                      @Y30LB12*/
         MVC   OUTBUF2+42(1,R4),A04WORK1                           0030
*               A04WORK1=RSGCUA(I); /*                       @Y30LB12*/
         L     @10,I                                               0031
         MH    @10,@CH00112                                        0031
         L     @05,COMPTR2(,R4)                                    0031
         ALR   @05,@10                                             0031
         MVC   A04WORK1(1),RSGCUA-9(@05)                           0031
*               CALL A04CONV2;      /*                       @Y30LB12*/
         BAL   @14,A04CONV2                                        0032
*               OUTBUF2(58:59)=A04WORK2;/*                   @Y30LB12*/
         MVC   OUTBUF2+57(2,R4),A04WORK2                           0033
*               A04WORK2=PATTERN(I);/*                       @Y30LB12*/
         L     @10,I                                               0034
         ALR   @10,@10                                             0034
         LA    @05,PATTERN-2(@10)                                  0034
         MVC   A04WORK2(2),0(@05)                                  0034
*               OUTBUF2(77)=A04WORK2(1);/*                   @Y30LB12*/
         MVC   OUTBUF2+76(1,R4),A04WORK2                           0035
*               OUTBUF2(83)=A04WORK2(2);/*                   @Y30LB12*/
         MVC   OUTBUF2+82(1,R4),A04WORK2+1                         0036
*               A04WORK2=PATTERN(K);/*                       @Y30LB12*/
         L     @10,K                                               0037
         ALR   @10,@10                                             0037
         LA    @05,PATTERN-2(@10)                                  0037
         MVC   A04WORK2(2),0(@05)                                  0037
*               OUTBUF2(92)=A04WORK2(1);/*                   @Y30LB12*/
         MVC   OUTBUF2+91(1,R4),A04WORK2                           0038
*               OUTBUF2(98)=A04WORK2(2);/*                   @Y30LB12*/
         MVC   OUTBUF2+97(1,R4),A04WORK2+1                         0039
*               CALL PUTIT1;        /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0040
*             END;                  /*                       @Y30LB12*/
*           ELSE                                                   0042
*             ;                     /*                       @Y30LB12*/
@RF00021 DS    0H                                                  0043
*         END;                      /*                       @Y30LB12*/
         LA    @10,1                                               0043
         AL    @10,K                                               0043
@DE00020 ST    @10,K                                               0043
         CH    @10,@CH00235                                        0043
         BNH   @DL00020                                            0043
*       END;                        /* END OF DO K           @Y30LB12*/
*     ELSE                                                         0045
*       ;                           /*                       @Y30LB12*/
@RF00017 DS    0H                                                  0046
*   END;                            /* END OF DO I           @Y30LB12*/
         LA    @10,1                                               0046
         AL    @10,I                                               0046
         ST    @10,I                                               0046
         CH    @10,@CH00235                                        0046
         BNH   @DL00016                                            0046
*   RETURN;                         /* RET. TO ICGDSANL      @Y30LB12*/
@EL00001 L     @13,4(,@13)                                         0047
@EF00001 L     @00,@SIZDATD                                        0047
         LR    @01,@11                                             0047
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0047
         BR    @14                                                 0047
*                                                                  0048
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - A04CONV1                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - THIS PROCEDURE TAKES ONE CHARACTER OF         @Y30LB12*/
*/*            BINARY DATA AND CONVERTS IT TO A PRINTABLE    @Y30LB12*/
*/*            HEXADECIMAL CHARACTER.  THE CHARACTER IS      @Y30LB12*/
*/*            PASSED TO THIS PROCUDURE IN A04WORK1 AND      @Y30LB12*/
*/*            IS RETURNED CONVERTED IN THE SAME AREA        @Y30LB12*/
*/*            IF THE HEX DIGIT IS 00-09, ADD 240 ('F0')     @Y30LB12*/
*/*            TO MAKE IT F0-F9.  IF THE HEX DIGIT IS        @Y30LB12*/
*/*            0A-0F, ADD 183 (B7) TO MAKE IT C1-C6.         @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0048
*A04CONV1:                                                         0048
*   PROCEDURE;                      /*                       @Y30LB12*/
A04CONV1 STM   @14,@12,12(@13)                                     0048
*   IF A04WORK1<'0A'X               /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLI   A04WORK1,X'0A'                                      0049
         BNL   @RF00049                                            0049
*     A04WORK1=A04WORK1+240;        /*                       @Y30LB12*/
         LA    @10,240                                             0050
         MVC   @ZT00003+3(1),A04WORK1                              0050
         AL    @10,@ZT00003                                        0050
         STC   @10,A04WORK1                                        0050
*   ELSE                            /*                       @Y30LB12*/
*     A04WORK1=A04WORK1+183;        /*                       @Y30LB12*/
         B     @RC00049                                            0051
@RF00049 LA    @10,183                                             0051
         MVC   @ZT00003+3(1),A04WORK1                              0051
         AL    @10,@ZT00003                                        0051
         STC   @10,A04WORK1                                        0051
*   END A04CONV1;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00002 DS    0H                                                  0052
@EF00002 DS    0H                                                  0052
@ER00002 LM    @14,@12,12(@13)                                     0052
         BR    @14                                                 0052
*                                                                  0053
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - A04CONV2                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - THIS PROCEDURE TAKES ONE CHARACTER OF         @Y30LB12*/
*/*            BINARY DATA AND CONVERTS IT TO TWO            @Y30LB12*/
*/*            PRINTABLE BINARY CHARACTERS.                  @Y30LB12*/
*/*                                                          @YD00113*/
*/* INPUT:                                                   @YD00113*/
*/*            BINARY CHARACTER PASSED IN A04WORK1           @YD00113*/
*/*                                                          @YD00113*/
*/* OUTPUT:                                                  @YD00113*/
*/*            PRINTABLE CHARACTERS IN A04WORK2              @YD00113*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0053
*A04CONV2:                                                         0053
*   PROCEDURE;                      /*                       @Y30LB12*/
A04CONV2 STM   @14,@12,12(@13)                                     0053
*   A04WORK2='0000'X;               /*                       @Y30LB12*/
         MVC   A04WORK2(2),@CB00369                                0054
*   IF A04WORK1='00'X               /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLI   A04WORK1,X'00'                                      0055
         BNE   @RF00055                                            0055
*     A04WORK2='F0F0'X;             /*                       @Y30LB12*/
         MVC   A04WORK2(2),@CB00371                                0056
*   ELSE                            /*                       @Y30LB12*/
*     IF A04WORK1='01'X             /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         B     @RC00055                                            0057
@RF00055 CLI   A04WORK1,X'01'                                      0057
         BNE   @RF00057                                            0057
*       A04WORK2='F0F1'X;           /*                       @Y30LB12*/
         MVC   A04WORK2(2),@CB00373                                0058
*     ELSE                          /*                       @Y30LB12*/
*       IF A04WORK1='02'X           /*                       @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         B     @RC00057                                            0059
@RF00057 CLI   A04WORK1,X'02'                                      0059
         BNE   @RF00059                                            0059
*         A04WORK2='F1F0'X;         /*                       @Y30LB12*/
         MVC   A04WORK2(2),@CB00375                                0060
*       ELSE                        /*                       @Y30LB12*/
*         IF A04WORK1='03'X         /*                       @Y30LB12*/
*           THEN                    /*                       @Y30LB12*/
         B     @RC00059                                            0061
@RF00059 CLI   A04WORK1,X'03'                                      0061
         BNE   @RF00061                                            0061
*           A04WORK2='F1F1'X;       /*                       @Y30LB12*/
         MVC   A04WORK2(2),@CB00377                                0062
*         ELSE                                                     0063
*           ;                       /*                       @Y30LB12*/
@RF00061 DS    0H                                                  0064
*   END A04CONV2;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00003 DS    0H                                                  0064
@EF00003 DS    0H                                                  0064
@ER00003 LM    @14,@12,12(@13)                                     0064
         BR    @14                                                 0064
*                                                                  0065
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0065
*PUTIT1:                                                           0065
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT1   STM   @14,@12,@SA00004                                    0065
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'10000000'                                0066
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0067
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @10,1                                               0068
         AH    @10,TERMINAT(,R4)                                   0068
         STH   @10,TERMINAT(,R4)                                   0068
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0070
*   END PUTIT1;                     /*                       @Y30LB12*/
@EL00004 DS    0H                                                  0071
@EF00004 DS    0H                                                  0071
@ER00004 LM    @14,@12,@SA00004                                    0071
         BR    @14                                                 0071
*                                                                  0072
*/***********************************************************@Y30LB12*/
*/*                    P A T C H   A R E A                   @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0072
*   GENERATE;                                                      0072
*                                                         /*@Y30LB12*/
PATCHA04 DC    32C'PATCHA04'                              /*@Y30LB12*/
*   END ICGDSA04                    /*                       @Y30LB12*/
*                                                                  0073
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */
*                                                                  0073
*       ;                                                          0073
         B     @EL00001                                            0073
@DATA    DS    0H
@CH00042 DC    H'1'
@CH00112 DC    H'9'
@CH00235 DC    H'48'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00004 DS    15F
@TF00001 DS    F
@TF00002 DS    F
@ZTEMPS  DS    0F
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSA04 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
A04WORKA DS    CL20
         ORG   A04WORKA
INDICES  DS    CL20
         ORG   INDICES
I        DS    FL4
J        DS    FL4
K        DS    FL4
L        DS    FL4
M        DS    FL4
         ORG   A04WORKA+20
A04WORK1 DS    CL1
A04WORK2 DS    CL2
FLAGS    DS    CL1
         ORG   FLAGS
STOPSCAN DS    BL1
@NM00020 EQU   FLAGS+0
         ORG   FLAGS+1
PACKED   DS    CL6
UNPACKED DS    CL11
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSA04 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CB00369 DC    X'0000'
@CB00371 DC    X'F0F0'
@CB00373 DC    X'F0F1'
@CB00375 DC    X'F1F0'
@CB00377 DC    X'F1F1'
ICGDS308 DC    CL98' ICG308I PATH FROM CPU XXXXXXXXXX CHANNEL X CONTROLC
                UNIT XX GOES TO BOTH SA X INT X AND SA X INT X'
PATTERN  DC    CL2'0B'
         DC    CL2'0C'
         DC    CL2'0D'
         DC    CL2'1B'
         DC    CL2'1C'
         DC    CL2'1D'
         DC    CL2'2B'
         DC    CL2'2C'
         DC    CL2'2D'
         DC    CL2'3B'
         DC    CL2'3C'
         DC    CL2'3D'
         DC    CL2'4B'
         DC    CL2'4C'
         DC    CL2'4D'
         DC    CL2'5B'
         DC    CL2'5C'
         DC    CL2'5D'
         DC    CL2'6B'
         DC    CL2'6C'
         DC    CL2'6D'
         DC    CL2'7B'
         DC    CL2'7C'
         DC    CL2'7D'
         DC    CL2'8B'
         DC    CL2'8C'
         DC    CL2'8D'
         DC    CL2'9B'
         DC    CL2'9C'
         DC    CL2'9D'
         DC    CL2'AB'
         DC    CL2'AC'
         DC    CL2'AD'
         DC    CL2'BB'
         DC    CL2'BC'
         DC    CL2'BD'
         DC    CL2'CB'
         DC    CL2'CC'
         DC    CL2'CD'
         DC    CL2'DB'
         DC    CL2'DC'
         DC    CL2'DD'
         DC    CL2'EB'
         DC    CL2'EC'
         DC    CL2'ED'
         DC    CL2'FB'
         DC    CL2'FC'
         DC    CL2'FD'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R4       EQU   @04
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
PCHBF    EQU   READER+99
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
PRINTER  EQU   COMTAB+464
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
TERMINAT EQU   MESSAGES+6
SPECLMSG EQU   MESSAGES+18
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
COMPTR2  EQU   GENIO+16
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
CPUASSOC EQU   COMTAB+3026
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CISPEC   EQU   RSGFLAGS
RSGCPUID EQU   RSGUCB+1
RSGCHAN  EQU   RSGUCB+7
RSGCUA   EQU   RSGUCB+8
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
SCANBUF  EQU   0
SCANDATA EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
CPUREFNO EQU   RSGUCB+6
@NM00019 EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00018 EQU   @NM00017
PRNTONLY EQU   @NM00017
UPDCREAT EQU   @NM00017
NEWCREAT EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
CPUSPEC  EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00013 EQU   CPUFLAG1
TOMPCPU  EQU   CPU+5
CPUID    EQU   CPU
CPUNUM   EQU   CPUASSOC
SPNRSGNO EQU   PHYSTYPE+1
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSICEB EQU   MERLICEB
PHYSMERL EQU   MERLICEB
PHYSDS2  EQU   DSPAIRS
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
TODS2    EQU   RSGTODS+1
TODS1    EQU   RSGTODS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
BUILDPTR EQU   GENIO+20
SAVE14   EQU   GENIO+12
EXLST    EQU   GENIO+8
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00006 EQU   MESSAGES+19
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00005 EQU   SPECLMSG
PRNTCARD EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
WARNING  EQU   MESSAGES+4
MSGNO    EQU   MESSAGES+2
RETCODE  EQU   MESSAGES
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00003 EQU   READER+206
SCANLEN  EQU   READER+204
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
INBUF    EQU   READER+100
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
LASTPARM EQU   READFLAG
ENDSCAN  EQU   READFLAG
PARMBIT  EQU   READFLAG
KEYBIT   EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00049 EQU   @EL00002
@RC00059 EQU   @EL00003
@RC00057 EQU   @EL00003
@RC00055 EQU   @EL00003
@ENDDATA EQU   *
         END   ICGDSA04,(C'PLS1957',0603,76335)
