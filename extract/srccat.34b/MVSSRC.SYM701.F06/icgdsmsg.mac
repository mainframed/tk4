         TITLE 'ICGDSMSG MSC TABLE CREATE PRINT MODULE                 *
                        '
ICGDSMSG CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSMSG  77.067'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0084
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            ICGDSMSG (MAINLINE)                           @XD00153*/
*/*                                                          @Y30LB12*/
*/*            IF SYSPRINT IS NOT OPEN, SET RETURN CODE OF   @XD00153*/
*/*            AND RETURN TO CALLER.  OTHERWISE, CHECK TO    @Y30LB12*/
*/*            WHETHER HEADING IS REQUIRED, AND, IF REQUIRED,@Y30LB12*/
*/*            PRINT IT.  DETERMINE THE TYPE OF MESSAGE TO   @Y30LB12*/
*/*            AND PRINT IT.  RETURN TO CALLING MODULE.      @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0084
*   DCBPTR=ADDR(DCBPRINT);          /* SET DCB OVERLAY       @Y30LB12*/
         LA    @10,DCBPRINT(,R4)                                   0084
         ST    @10,DCBPTR(,R4)                                     0084
*   IF DCBOFOPN='0'B                /* SYSPRINT NOT OPEN     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    DCBOFOPN+40(@10),B'00010000'                        0085
         BNZ   @RF00085                                            0085
*     DO;                           /*                       @Y30LB12*/
*       RETCODE=RETCOD16;           /* SET RETURN CODE       @YD00113*/
         MVC   RETCODE(2,R4),@CH00162                              0087
*       RETURN;                     /* RETURN TO CALLER      @Y30LB12*/
@EL00001 L     @13,4(,@13)                                         0088
@EF00001 L     @00,@SIZDATD                                        0088
         LR    @01,@11                                             0088
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0088
         BR    @14                                                 0088
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0090
*     ;                             /* SYSPRINT IS OPEN      @Y30LB12*/
*                                                                  0090
@RF00085 DS    0H                                                  0091
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* INITIALIZATION - ESTABLISH ADDRESSABILITY OF          @Y30LB12*/
*   /* SYNAD ROUTINE FOR SYSPRINT BY MESSAGE WRITER.         @Y30LB12*/
*   /* TEST IF HEADING LINE REQUIRED BY CHANNEL 9            @Y30LB12*/
*   /* INDICATOR, BY CHANNEL 12 INDICATOR, OR BY             @Y30LB12*/
*   /* MAXIMUM LINE PER PAGE HAVING BEEN REACHED.            @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0091
*   SVSYNAD=DCBSYNA;                /* ICGDSINT SYNAD        @ZA16131*/
         L     @10,DCBPTR(,R4)                                     0091
         LA    @05,52                                              0091
         ALR   @05,@10                                             0091
         MVC   SVSYNAD(3),DCBSYNA(@05)                             0091
*   DCBSYNA=ADDR(MSGWTO);           /* ICGDSMSG SYNAD        @ZA16131*/
         LA    @02,MSGWTO                                          0092
         ST    @02,@TF00001                                        0092
         MVC   DCBSYNA(3,@05),@TF00001+1                           0092
*   IF DCBIFPCT^='00'B×LINECT<=LINECTR/*                     @YM32179*/
*     THEN                          /*                       @Y30LB12*/
         TM    DCBIFPCT+40(@10),B'00110000'                        0093
         BNZ   @RT00093                                            0093
         LH    @10,LINECT(,R4)                                     0093
         CH    @10,LINECTR(,R4)                                    0093
         BH    @RF00093                                            0093
@RT00093 DS    0H                                                  0094
*     CALL PRNTHEAD;                /* TO PRINT HEADING      @Y30LB12*/
         BAL   @14,PRNTHEAD                                        0094
*   ELSE                                                           0095
*     ;                             /*                       @Y30LB12*/
@RF00093 DS    0H                                                  0096
*                                                                  0096
*   /*****************************************************************/
*   /*                                                               */
*   /* ************************************************      @Y30LB12*/
*   /* DEPENDING ON THE BIT SETTINGS IN THE 'SPECLMSG'       @XD00153*/
*   /* FLAGS IN THE STRUCTURE 'MESSAGES', ONE OF THE         @XD00153*/
*   /* FOLLOWING OPERATIONS SHOULD BE PERFORMED:             @XD00153*/
*   /* PRNTCARD = '1'B - MOVE THE CARD IMAGE JUST            @XD00153*/
*   /* OR PUNCHED FROM THE BUFFER                            @XD00153*/
*   /* 'INPUT' AND PRINT IT.                                 @XD00153*/
*   /* PRNTBUF2 = '1'B - PRINT THE MESSAGE DIRECTLY          @XD00153*/
*   /* FROM 'OUTBUF2'                                        @XD00153*/
*   /* MSGNO ^= 0 - PRINT MESSAGE TEXT FROM THIS             @XD00153*/
*   /* THIS MODULE                                           @XD00153*/
*   /* ************************************************      @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0096
*   IF PRNTCARD='1'B                /* IF CARD IMAGE SW      @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    PRNTCARD(R4),B'00010000'                            0096
         BNO   @RF00096                                            0096
*     DO;                           /*                       @Y30LB12*/
*       OUTBUF(21:100)=INBUF(1:80); /* MOVE IMAGE            @Y30LB12*/
         MVC   OUTBUF+20(80,R4),INBUF(R4)                          0098
*       PRNTCARD='0'B;              /* RESET PRINT CARD      @Y30LB12*/
         NI    PRNTCARD(R4),B'11101111'                            0099
*       R3=ADDR(OUTBUF);            /* POINT TO BUFFER       @Y30LB12*/
         LA    R3,OUTBUF(,R4)                                      0100
*       CALL PRINTMS;               /* PRINT CARD IMAGE      @Y30LB12*/
         BAL   @14,PRINTMS                                         0101
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0103
*     ;                             /*                       @Y30LB12*/
*                                                                  0103
@RF00096 DS    0H                                                  0104
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* PRINT MESSAGES WHOSE TEXT IS SET UP IN OTHER          @Y30LB12*/
*   /* MODULES. PRINT SYNAD MESSAGE HERE.                    @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0104
*   IF PRNTBUF2='1'B                /* IF MSG IN BUFFER,     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    PRNTBUF2(R4),B'00000001'                            0104
         BNO   @RF00104                                            0104
*     DO;                           /*                       @Y30LB12*/
*       R3=ADDR(OUTBUF2);           /* POINT AT BUFFER       @Y30LB12*/
         LA    R3,OUTBUF2(,R4)                                     0106
*       CALL PRINTMS;               /* TO PRINT MESSAGE      @Y30LB12*/
         BAL   @14,PRINTMS                                         0107
*       PRNTBUF2='0'B;              /* RESET PRNT SWITCH     @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0108
*       OUTBUF2=OUTBUF;             /* CLEAR BUFFER2         @Y30LB12*/
         MVC   OUTBUF2(121,R4),OUTBUF(R4)                          0109
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0111
*     ;                             /*                       @Y30LB12*/
*                                                                  0111
@RF00104 DS    0H                                                  0112
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* THIS ROUTINE CHECKS FOR A MESSAGE NUMBER              @Y30LB12*/
*   /* PASSED BY A CALLING ROUTINE. NO MATCH ON              @Y30LB12*/
*   /* MESSAGE NUMBER, PRINT A BLANK LINE.                   @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0112
*   IF MSGNO^=0                     /* IF THERE IS A MESSAGE @Y30LB12*/
*     THEN                          /* NUMBER, INDEX INTO MSGS     0112
*                                                            @Y30LB12*/
         LH    @10,MSGNO(,R4)                                      0112
         LTR   @10,@10                                             0112
         BZ    @RF00112                                            0112
*     DO;                           /* TO LOCATE PROPER MESSAGE    0113
*                                                            @Y30LB12*/
*                                                                  0113
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00113*/
*       /* LOCATE IN THE 'MSGLOKUP' TABLE THE                @YD00113*/
*       /* ENTRY CORRESPONDING TO THE VALUE PASSED           @YD00113*/
*       /* IN 'MSGNO'. USE THE DISPLACEMENT OF               @YD00113*/
*       /* THAT ENTRY IN THE TABLE TO LOCATE THE             @YD00113*/
*       /* ADDRESS OF THE MESSAGE TEXT IN THE                @YD00113*/
*       /* SECOND TABLE 'MSGPTR'. MOVE 121                   @YD00113*/
*       /* CHARACTERS OF MESSAGE TEXT BEGINNING AT           @YD00113*/
*       /* THE ADDRESS IN 'MSGPTR' TO 'OUTBUF2'.             @YD00113*/
*       /* MOVE THE NUMBER OF CHARACTERS THAT                @YD00113*/
*       /* ACTUALLY ARE CONTAINED IN THE MESSAGE             @YD00113*/
*       /* AS INDICATED BY THE THIRD TABLE 'MSGLEN'          @YD00113*/
*       /* FROM OUTBUF2 TO OUTBUF. THE MESSAGE IS            @YD00113*/
*       /* PRINTED FROM OUTBUF.                              @YD00113*/
*       /* IF THERE IS NO MATCH ON MESSAGE NUMBER,           @YD00113*/
*       /* A BLANK LINE WILL BE PRINTED.                     @YD00113*/
*       /* *****************************************         @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0114
*       DO I=1 TO DIM(MSGLOKUP);    /*                       @Y30LB12*/
         LA    I,1                                                 0114
@DL00114 DS    0H                                                  0115
*         IF MSGNO=MSGLOKUP(I)      /*                       @Y30LB12*/
*           THEN                    /*                       @Y30LB12*/
         LR    @10,I                                               0115
         ALR   @10,@10                                             0115
         LH    @05,MSGNO(,R4)                                      0115
         CH    @05,MSGLOKUP-2(@10)                                 0115
         BNE   @RF00115                                            0115
*           DO;                     /*                       @Y30LB12*/
*             MSGNO=I;              /*                       @Y30LB12*/
         STH   I,MSGNO(,R4)                                        0117
*             R3=MSGPTR(MSGNO);     /*                       @Y30LB12*/
         LH    @10,MSGNO(,R4)                                      0118
         SLA   @10,2                                               0118
         L     R3,MSGPTR-4(@10)                                    0118
*             GEN(MVC OUTBUF2(121,R4),0(R3));/*              @Y30LB12*/
         MVC OUTBUF2(121,R4),0(R3)
*             OUTBUF(1:MSGLEN(MSGNO))=OUTBUF2;/*             @Y30LB12*/
         LH    @10,MSGNO(,R4)                                      0120
         ALR   @10,@10                                             0120
         LH    @10,MSGLEN-2(@10)                                   0120
         BCTR  @10,0                                               0120
         EX    @10,@SM00906                                        0120
*           END;                    /*                       @Y30LB12*/
*         ELSE                                                     0122
*           ;                       /*                       @Y30LB12*/
@RF00115 DS    0H                                                  0123
*       END;                        /*                       @Y30LB12*/
         AH    I,@CH00042                                          0123
         CH    I,@CH00588                                          0123
         BNH   @DL00114                                            0123
*       R3=ADDR(OUTBUF);            /*                       @Y30LB12*/
         LA    R3,OUTBUF(,R4)                                      0124
*       CALL PRINTMS;               /* DIRECT, NOT FROM BUFFER     0125
*                                                            @Y30LB12*/
         BAL   @14,PRINTMS                                         0125
*       OUTBUF2(1:121)=OUTBUF(1:121);/*                      @Y30LB12*/
         MVC   OUTBUF2(121,R4),OUTBUF(R4)                          0126
*       MSGNO=0;                    /* SET MESSAGE NUMBER TO 0     0127
*                                                            @Y30LB12*/
*                                                                  0127
         SLR   @10,@10                                             0127
         STH   @10,MSGNO(,R4)                                      0127
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00113*/
*       /* IF THE MESSAGE NUMBER IS FOR ONE OF THE           @YD00113*/
*       /* 'END OF PHASE' MESSAGES (ICG103I,                 @YD00113*/
*       /* ICG104I, ICG105I, ICG106I, OR ICG107I),           @YD00113*/
*       /* CALL THE PROCEDURE 'PUTPHASE' TO WRITE            @YD00113*/
*       /* MESSAGES ICG109I AND ICG110I AS NEEDED.           @YD00113*/
*       /* *****************************************         @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0128
*       IF ENDPHASE='1'B            /*                       @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         TM    ENDPHASE(R4),B'00000100'                            0128
         BNO   @RF00128                                            0128
*         CALL PUTPHASE;            /*                       @Y30LB12*/
         BAL   @14,PUTPHASE                                        0129
*       ELSE                                                       0130
*         ;                         /*                       @Y30LB12*/
@RF00128 DS    0H                                                  0131
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0132
*     ;                             /* MESSAGE NUMBER IS 0   @YD00113*/
*                                                                  0132
@RF00112 DS    0H                                                  0133
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* RESTORE THE SYNAD ADDRESS THAT WAS IN EFFECT          @YD00113*/
*   /* WHEN THE MESSAGE DATA SET WAS OPENED IN THE           @YD00113*/
*   /* MODULE ICGDSINT AND RETURN TO THE CALLER.             @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*DIDPRINT:                                                         0133
*   DCBPTR=ADDR(DCBPRINT);          /* SET DCB OVERLAY       @Y30LB12*/
DIDPRINT LA    @10,DCBPRINT(,R4)                                   0133
         ST    @10,DCBPTR(,R4)                                     0133
*   DCBSYNA=SVSYNAD;                /* RESTORE SYNAD ADR     @Y30LB12*/
         MVC   DCBSYNA+52(3,@10),SVSYNAD                           0134
*   RETURN;                         /* RETURN TO CALLER      @Y30LB12*/
         B     @EL00001                                            0135
*                                                                  0136
*/********************************************************** @Y30LB12*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - PUTPHASE                                @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - THIS PROCEDURE IS CALLED WHEN THE 'ENDPHASE'  @YD00113*/
*/*            SWITCH IS 1, AFTER MESSAGES ICG103I, ICG104I, @YD00113*/
*/*            ICG105I, ICG106I, OR ICG107I HAS BEEN         @YD00113*/
*/*            PRINTED. THE NUMBER OF WARNING MESSAGES AND   @YD00113*/
*/*            THE NUMBER OF TERMINATING MESSAGES THAT HAVE  @YD00113*/
*/*            BEEN ISSUED IN THE PHASE IS CONVERTED TO      @YD00113*/
*/*            PRINTABLE DATA, AND THE HIGHEST RETURN CODE   @YD00113*/
*/*            CALCULATED AND CONVERTED TO PRINTABLE         @YD00113*/
*/*            FORM.                                         @YD00113*/
*/*                                                          @YD00113*/
*/*            IF THE LAST PREVIOUS MESSAGE WAS ICG107I,     @YD00113*/
*/*            (NEEDEOJ=1), PRINTING OF MESSAGE ICG109I IS   @YD00113*/
*/*            SUPPRESSED.  OTHERWISE BOTH ICG109I AND       @YD00113*/
*/*            ICG110I ARE PRINTED.                          @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @Y30LB12*/
*                                                                  0136
*PUTPHASE:                                                         0136
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTPHASE STM   @14,@12,@SA00002                                    0136
*   ENDPHASE='0'B;                  /* SET END-PHASE SWITCH OFF    0137
*                                                            @Y30LB12*/
*                                                                  0137
         NI    ENDPHASE(R4),B'11111011'                            0137
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* IF ANY WARNING MESSAGES WERE ISSUED IN THE            @YD00113*/
*   /* PHASE JUST COMPLETED, CONVERT THE NUMBER OF           @YD00113*/
*   /* WARNING MESSAGES ISSUED TO A PRINTABLE FOUR-          @YD00113*/
*   /* DIGIT NUMBER. AND RESET THE NUMBER OF WARNING         @YD00113*/
*   /* MESSAGES TO ZERO. IF THE CURRENT RETURN CODE          @YD00113*/
*   /* IS ZERO, SET IT TO 4.                                 @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0138
*   IF WARNING^=0                   /* ANY WARNING MESSAGES  @YD00113*/
*     THEN                          /*                       @YD00113*/
         LH    @10,WARNING(,R4)                                    0138
         LTR   @10,@10                                             0138
         BZ    @RF00138                                            0138
*     DO;                           /*                       @YD00113*/
*       PACKWORK=PACKCLR;           /*                       @YD00113*/
         MVC   PACKWORK(8),@CB00857                                0140
*       GENERATE;                                                  0141
*                                                         /*@Y30LB12*/
* NOTE ADDRESSIBILITY USING BASE REGISTER OF GOTTEN CSECT COMTAB
         LH    6,WARNING(R4)
         CVD   6,PACKWORK
         UNPK  WARN(4,R4),PACKWORK+5(3)
         OI    WARN+3(R4),X'F0'
*       WARNING=0;                  /* WARNING MSG COUNT     @YD00113*/
         SLR   @10,@10                                             0142
         STH   @10,WARNING(,R4)                                    0142
*       IF RETCODE=RETCODE0         /*                       @YD00113*/
*         THEN                      /*                       @YD00113*/
         CH    @10,RETCODE(,R4)                                    0143
         BNE   @RF00143                                            0143
*         RETCODE=RETCODE4;         /*                       @YD00113*/
         MVC   RETCODE(2,R4),@CH00068                              0144
*       ELSE                                                       0145
*         ;                         /*                       @Y30LB12*/
@RF00143 DS    0H                                                  0146
*     END;                          /*                       @Y30LB12*/
*                                                                  0146
*   /*****************************************************************/
*   /*                                                               */
*   /* *********************************************         @YD00113*/
*   /* IF NO WARNING ERRORS WERE PRINTED IN THE              @YD00113*/
*   /* PHASE, SET THE NUMBER OF WARNING MESSAGES             @YD00113*/
*   /* FOR THE PRINT LINE TO PRINTABLE ZEROS                 @YD00113*/
*   /* *********************************************         @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0147
*   ELSE                            /*                       @YD00113*/
*     WARN=ZEROCNT;                 /* COUNT OF 0            @Y30LB12*/
*                                                                  0147
         B     @RC00138                                            0147
@RF00138 MVC   WARN(4,R4),@CC00876                                 0147
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* IF ANY TERMINATING MESSAGES WERE ISSUED IN            @YD00113*/
*   /* THE PHASE JUST COMPLETED, CONVERT THE NUMBER          @YD00113*/
*   /* TERMINATING MESSAGES TO A PRINTABLE 4-DIGIT           @YD00113*/
*   /* NUMBER AND RESET THE COUNTER TO ZERO. IF THE          @YD00113*/
*   /* CURRENT RETURN CODE IS LESS THAN 8, SET IT TO         @YD00113*/
*   /* EIGHT.                                                @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*   IF TERMINAT^=0                  /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00138 LH    @10,TERMINAT(,R4)                                   0148
         LTR   @10,@10                                             0148
         BZ    @RF00148                                            0148
*     DO;                           /*                       @Y30LB12*/
*       PACKWORK=PACKCLR;           /*                       @YD00113*/
         MVC   PACKWORK(8),@CB00857                                0150
*       GENERATE;                                                  0151
*                                                         /*@Y30LB12*/
* NOTE ADDRESSIBILITY USING BASE REGISTER OF GOTTEN CSECT COMTAB
         LH    6,TERMINAT(R4)
         CVD   6,PACKWORK
         UNPK  TERM(4,R4),PACKWORK+5(3)
         OI    TERM+3(R4),X'F0'
*       TERMINAT=0;                 /*                       @Y30LB12*/
         SLR   @10,@10                                             0152
         STH   @10,TERMINAT(,R4)                                   0152
*       IF RETCODE<=RETCODE8        /*                       @YD00113*/
*         THEN                      /*                       @Y30LB12*/
         LA    @10,8                                               0153
         CH    @10,RETCODE(,R4)                                    0153
         BL    @RF00153                                            0153
*         DO;                       /*                       @Y30LB12*/
*           RETCODE=RETCODE8;       /*                       @YD00113*/
         STH   @10,RETCODE(,R4)                                    0155
*         END;                      /*                       @Y30LB12*/
*       ELSE                                                       0157
*         ;                         /*                       @Y30LB12*/
@RF00153 DS    0H                                                  0158
*     END;                          /*                       @Y30LB12*/
*                                                                  0158
*   /*****************************************************************/
*   /*                                                               */
*   /* *********************************************         @YD00113*/
*   /* IF NO TERMINATING MESSAGES WERE PRINTED IN            @YD00113*/
*   /* THIS PHASE, PRINT ZEROS FOR TERMINATION               @YD00113*/
*   /* COUNT.                                                @YD00113*/
*   /* *********************************************         @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0159
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
         B     @RC00148                                            0159
@RF00148 DS    0H                                                  0160
*       TERM=ZEROCNT;               /*                       @YD00113*/
         MVC   TERM(4,R4),@CC00876                                 0160
*     END;                          /*                       @Y30LB12*/
*                                                                  0161
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YM32179*/
*   /* BEFORE PRINTING MESSAGE ICG109I, CHECK TO SEE         @YM32179*/
*   /* IF SKIP TO A NEW PAGE IS NEEDED.                      @YM32179*/
*   /* ***********************************************       @YM32179*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0162
*   IF DCBIFPCT^='00'B×LINECT<=LINECTR/*                     @YM32179*/
*     THEN                          /*                       @YM32179*/
@RC00148 L     @10,DCBPTR(,R4)                                     0162
         TM    DCBIFPCT+40(@10),B'00110000'                        0162
         BNZ   @RT00162                                            0162
         LH    @10,LINECT(,R4)                                     0162
         CH    @10,LINECTR(,R4)                                    0162
         BH    @RF00162                                            0162
@RT00162 DS    0H                                                  0163
*     CALL PRNTHEAD;                /*                       @YM32179*/
*                                                                  0163
         BAL   @14,PRNTHEAD                                        0163
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YM32179*/
*   /* IF THE END-OF-PHASE MESSAGE IS NOT ICG107I,           @YD00113*/
*   /* PRINT MESSAGE ICG109I TO GIVE WARNING AND             @YD00113*/
*   /* TERMINATING MESSAGE COUNTS FOR THE PHASE              @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0164
*   IF NEEDEOJ^='1'B                /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RF00162 TM    NEEDEOJ(R4),B'00000010'                             0164
         BO    @RF00164                                            0164
*     DO;                           /*                       @Y30LB12*/
*       OUTBUF(1:53)=ICG109I;       /*                       @YD00113*/
         MVC   OUTBUF(53,R4),ICG109I                               0166
*       OUTBUF(10:13)=WARN;         /*                       @Y30LB12*/
         MVC   OUTBUF+9(4,R4),WARN(R4)                             0167
*       OUTBUF(31:34)=TERM;         /*                       @Y30LB12*/
         MVC   OUTBUF+30(4,R4),TERM(R4)                            0168
*       R3=ADDR(OUTBUF);            /*                       @Y30LB12*/
         LA    R3,OUTBUF(,R4)                                      0169
*       CALL PRINTMS;               /*                       @Y30LB12*/
         BAL   @14,PRINTMS                                         0170
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0172
*     ;                             /*                       @Y30LB12*/
*                                                                  0172
@RF00164 DS    0H                                                  0173
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YM32179*/
*   /* BEFORE PRINTING MESSAGE ICG109I, CHECK TO SEE         @YM32179*/
*   /* IF SKIP TO A NEW PAGE IS NEEDED.                      @YM32179*/
*   /* ***********************************************       @YM32179*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0173
*   IF DCBIFPCT^='00'B×LINECT<=LINECTR/*                     @YM32179*/
*     THEN                          /*                       @YM32179*/
         L     @10,DCBPTR(,R4)                                     0173
         TM    DCBIFPCT+40(@10),B'00110000'                        0173
         BNZ   @RT00173                                            0173
         LH    @10,LINECT(,R4)                                     0173
         CH    @10,LINECTR(,R4)                                    0173
         BH    @RF00173                                            0173
@RT00173 DS    0H                                                  0174
*     CALL PRNTHEAD;                /*                       @YM32179*/
*                                                                  0174
         BAL   @14,PRNTHEAD                                        0174
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* CONVERT THE HIGHEST RETURN CODE TO PRINTABLE          @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0175
*   IF RETCODE=RETCODE0             /*                       @YD00113*/
*     THEN                          /*                       @YD00113*/
@RF00173 LH    @10,RETCODE(,R4)                                    0175
         LTR   @10,@10                                             0175
         BNZ   @RF00175                                            0175
*     PRINTRC=PCODE0;               /*                       @YD00113*/
         MVC   PRINTRC(2,R4),@CC00866                              0176
*   IF RETCODE=RETCODE4             /*                       @YXXXXXX*/
*     THEN                          /*                       @YD00113*/
@RF00175 CLC   RETCODE(2,R4),@CH00068                              0177
         BNE   @RF00177                                            0177
*     PRINTRC=PCODE4;               /*                       @YD00113*/
         MVC   PRINTRC(2,R4),@CC00868                              0178
*   IF RETCODE=RETCODE8             /*                       @YD00113*/
*     THEN                          /*                       @YD00113*/
@RF00177 CLC   RETCODE(2,R4),@CH00040                              0179
         BNE   @RF00179                                            0179
*     PRINTRC=PCODE8;               /*                       @YD00113*/
         MVC   PRINTRC(2,R4),@CC00870                              0180
*   IF RETCODE=RETCOD12             /*                       @YD00113*/
*     THEN                          /*                       @YD00113*/
@RF00179 CLC   RETCODE(2,R4),@CH00128                              0181
         BNE   @RF00181                                            0181
*     PRINTRC=PCODE12;              /*                       @YD00113*/
         MVC   PRINTRC(2,R4),@CC00872                              0182
*   IF RETCODE=RETCOD16             /*                       @YD00113*/
*     THEN                          /*                       @YD00113*/
@RF00181 CLC   RETCODE(2,R4),@CH00162                              0183
         BNE   @RF00183                                            0183
*     PRINTRC=PCODE16;              /*                       @YD00113*/
*                                                                  0184
         MVC   PRINTRC(2,R4),@CC00874                              0184
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* PRINT MESSAGE ICG110I                                 @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0185
*   OUTBUF(1:33)=ICG110I;           /*                       @YD00113*/
@RF00183 MVC   OUTBUF(33,R4),ICG110I                               0185
*   OUTBUF(34:35)=PRINTRC;          /*                       @Y30LB12*/
         MVC   OUTBUF+33(2,R4),PRINTRC(R4)                         0186
*   R3=ADDR(OUTBUF);                /*                       @Y30LB12*/
         LA    R3,OUTBUF(,R4)                                      0187
*   CALL PRINTMS;                   /*                       @Y30LB12*/
         BAL   @14,PRINTMS                                         0188
*   END PUTPHASE;                   /*                       @Y30LB12*/
@EL00002 DS    0H                                                  0189
@EF00002 DS    0H                                                  0189
@ER00002 LM    @14,@12,@SA00002                                    0189
         BR    @14                                                 0189
*                                                                  0190
*/********************************************************** @Y30LB12*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - PRINTMS                                 @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - PRINT A LINE TO THE MESSAGE DATA SET FROM     @YD00113*/
*/*            THE BUFFER POINTED TO BY REGISTER 3 AND       @YD00113*/
*/*            CLEAR THE BUFFER 'OUTBUF'.  'OUBUF' MAY OR    @YD00113*/
*/*            MAY NOT BE THE BUFFER JUST PRINTED.  BUMP     @YD00113*/
*/*            THE COUNT OF LINES PRINTED ON THIS PAGE BY 1. @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @Y30LB12*/
*                                                                  0190
*PRINTMS:                                                          0190
*   PROCEDURE;                      /*                       @Y30LB12*/
PRINTMS  STM   @14,@12,@SA00003                                    0190
*   R0=R3;                          /*                       @Y30LB12*/
         LR    R0,R3                                               0191
*   R1=ADDR(DCBPRINT);              /*                       @Y30LB12*/
         LA    R1,DCBPRINT(,R4)                                    0192
*   GEN(PUT   (1),(0));             /*                       @Y30LB12*/
         PUT   (1),(0)
*   OUTBUF(1)='40'X;                /*                       @Y30LB12*/
         MVI   OUTBUF(R4),X'40'                                    0194
*   GEN(MVC   OUTBUF+1(120,R4),OUTBUF(R4));/*                @Y30LB12*/
         MVC   OUTBUF+1(120,R4),OUTBUF(R4)
*   LINECTR=LINECTR+1;              /*                       @Y30LB12*/
         LA    @10,1                                               0196
         AH    @10,LINECTR(,R4)                                    0196
         STH   @10,LINECTR(,R4)                                    0196
*   END PRINTMS;                    /*                       @Y30LB12*/
@EL00003 DS    0H                                                  0197
@EF00003 DS    0H                                                  0197
@ER00003 LM    @14,@12,@SA00003                                    0197
         BR    @14                                                 0197
*                                                                  0198
*/********************************************************** @Y30LB12*/
*/*WRITE MESSAGE TO TERMINAL IF I/O ERROR ON SYSPRINT        @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0198
*MSGWTO:                                                           0198
*   ;                               /*                       @Y30LB12*/
MSGWTO   DS    0H                                                  0199
*   SAVE14=R14;                     /*                       @Y30LB12*/
         ST    R14,SAVE14(,R4)                                     0199
*   GEN(WTO   MF=(E,WTOPRNT2));     /*                       @Y30LB12*/
         WTO   MF=(E,WTOPRNT2)
*   RETCODE=RETCOD16;               /*                       @YD00113*/
         MVC   RETCODE(2,R4),@CH00162                              0201
*   R14=SAVE14;                     /*                       @Y30LB12*/
         L     R14,SAVE14(,R4)                                     0202
*   GEN(BR    14);                  /* RETURN TO IOS         @Y30LB12*/
         BR    14
*                                                                  0204
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PRNTHEAD                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - PRINT HEADING LINE WHEN LINE COUNTER IS       @Y30LB12*/
*/*            EQUAL TO LINE COUNT OR WHEN CHANNEL 12        @Y30LB12*/
*/*            IS SENSED.                                    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0204
*PRNTHEAD:                                                         0204
*   PROCEDURE;                      /*                       @Y30LB12*/
         B     @PB00004                                            0204
PRNTHEAD STM   @14,@12,@SA00004                                    0204
*   OUTBUF(1:121)=HEADING(1:121);   /* MOVE HEADING          @Y30LB12*/
         MVC   OUTBUF(121,R4),HEADING                              0205
*   OUTBUF(105:108)=PAGENO;         /* CURRENT PAGE NUM      @Y30LB12*/
         MVC   OUTBUF+104(4,R4),PAGENO(R4)                         0206
*   PACKWORK=PACKCLR;               /* CLEAR WORK AREA       @YD00113*/
*                                                                  0207
         MVC   PACKWORK(8),@CB00857                                0207
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* THE FOLLOWING GENERATED CODE PACKS THE FIELD          @Y30LB12*/
*   /* 'PAGENO', INCREMENTS THE PACKED FIELD BY 1,           @Y30LB12*/
*   /* UNPACKS THE RESULT BACK INTO 'PAGENO', AND            @Y30LB12*/
*   /* REMOVES THE SIGN FROM THE LOW-ORDER BYTE.             @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0208
*   GEN;                                                           0208
*                                                         /*@Y30LB12*/
* NOTE ADDRESSIBILITY USING BASE REGISTER OF GOTTEN CSECT COMTAB
          PACK  PACKWORK+5(3),PAGENO(4,R4)                /*@Y30LB12*/
          AP    PACKWORK+5(3),=X'00001C'                  /*@Y30LB12*/
          UNPK  PAGENO(4,R4),PACKWORK+5(3)                /*@Y30LB12*/
          OI    PAGENO+3(R4),X'F0'                        /*@Y30LB12*/
*   LINECTR=0;                      /* RESET LINE CTR        @Y30LB12*/
         SLR   @10,@10                                             0209
         STH   @10,LINECTR(,R4)                                    0209
*   R3=ADDR(OUTBUF);                /* POINT AT BUFFER       @Y30LB12*/
         LA    R3,OUTBUF(,R4)                                      0210
*   CALL PRINTMS;                   /* TO PRINT HEADING      @Y30LB12*/
         BAL   @14,PRINTMS                                         0211
*   DCBIFPCT='00'B;                 /* RESET CHAN. FLAGS     @Y30LB12*/
         L     @10,DCBPTR(,R4)                                     0212
         NI    DCBIFPCT+40(@10),B'11001111'                        0212
*   END PRNTHEAD;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00004 DS    0H                                                  0213
@EF00004 DS    0H                                                  0213
@ER00004 LM    @14,@12,@SA00004                                    0213
         BR    @14                                                 0213
@PB00004 DS    0H                                                  0214
*                                                                  0214
*/********************************************************** @Y30LB12*/
*/* WRITE TO OPERATOR ON I/O ERROR                           @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0214
*   GENERATE;                                                      0214
*                                                                  0214
*                                                         /*@Y30LB12*/
WTOPRNT2 WTO   'ICG100I I/O ERROR ON SYSPRINT - MSCTC TERMINATED',    **
               MF=L,ROUTCDE=(2),DESC=(4)                  /*@Y30LB12*/
*/********************************************************** @Y30LB12*/
*/*                   P A T C H   A R E A                    @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0215
*   GENERATE;                                                      0215
*                                                         /*@Y30LB12*/
PATCHMSG DC    32C'PATCHMSG'                              /*@Y30LB12*/
*   END ICGDSMSG                    /*                       @Y30LB12*/
*                                                                  0216
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*                                                                  0216
*       ;                                                          0216
         B     @EL00001                                            0216
@DATA    DS    0H
@CH00042 DC    H'1'
@CH00068 DC    H'4'
@CH00040 DC    H'8'
@CH00128 DC    H'12'
@CH00162 DC    H'16'
@CH00588 DC    H'39'
@SM00906 MVC   OUTBUF(0,R4),OUTBUF2(R4)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00004 DS    15F
@SA00003 DS    15F
@SA00002 DS    15F
@TF00001 DS    F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSMSG CSECT
         DS    0F
@DATD    DSECT
         DS    0D
PACKWORK DS    CL8
SVSYNAD  DS    CL3
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSMSG CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00876 DC    C'0000'
@CC00866 EQU   @CC00876
@CC00868 DC    C'04'
@CC00870 DC    C'08'
@CC00872 DC    C'12'
@CC00874 DC    C'16'
@CB00857 DC    X'0000000000000000'
M101     DC    CL47' ICG101I ''LINES'' OPTION ERROR - DEFAULT TAKEN'
M102     DC    CL46' ICG102I ''PAGE'' OPTION ERROR - DEFAULT TAKEN'
M103     DC    CL35' ICG103I INITIALIZE PHASE COMPLETED'
M104     DC    CL29' ICG104I SCAN PHASE COMPLETED'
M105     DC    CL32' ICG105I ANALYZE PHASE COMPLETED'
M106     DC    CL30' ICG106I BUILD PHASE COMPLETED'
M107     DC    CL38' ICG107I END OF JOB - MSC TABLE CREATE'
M200     DC    CL29' ICG200I UNABLE TO OPEN SYSIN'
M202     DC    CL35' ICG202I CONTROL STATEMENT IGNORED'
M203     DC    CL37' ICG203I SYNTAX ERROR IN CONTINUATION'
M204     DC    CL29' ICG204I INVALID COMMAND WORD'
M205     DC    CL31' ICG205I DUPLICATE COMMAND WORD'
M207     DC    CL40' ICG207I CONTINUATION INTO END-OF-DATA'
M208     DC    CL42' ICG208I INVALID CONTINUATION OF STATEMENT'
M209     DC    CL44' ICG209I EXPECTED, BUT DID NOT FIND, KEYWORD'
M210     DC    CL32' ICG210I UNDEFINED KEYWORD FOUND'
M211     DC    CL47' ICG211I EXPECTED, BUT DID NOT FIND, PARAMETER'
M212     DC    CL34' ICG212I UNDEFINED PARAMETER FOUND'
M213     DC    CL55' ICG213I CPUCONFG STATEMENT EXCLUSIVE KEYWORDS CONFC
               LICT'
M215     DC    CL55' ICG215I CREATE STATEMENT EXCLUSIVE PARAMETERS CONFC
               LICT'
M216     DC    CL43' ICG216I REQUIRED CREATE PARAMETER MISSING'
M217     DC    CL44' ICG217I EXPECTED LOADMAP EXITNAME NOT FOUND'
M218     DC    CL34' ICG218I LOADMAP EXITNAME TOO LONG'
M224     DC    CL50' ICG224I MAXIMUM NUMBER OF SUPPORTED CPUS EXCEEDED'
M230     DC    CL35' ICG230I SA/CI PREVIOUSLY SPECIFIED'
M243     DC    CL49' ICG243I TWO SA IDENTIFICATIONS MUST BE DIFFERENT'
M246     DC    CL66' ICG246I DASD CONTROLLER PREVIOUSLY SPECIFIED WITH C
               ONE MATCHING SA'
M249     DC    CL53' ICG249I EXCEEDED SUPPORTED NUMBER OF ALTERNATE PATC
               HS'
M300     DC    CL42' ICG300I MISSING REQUIRED STATEMENT CREATE'
M333     DC    CL37' ICG333I SA 0 MUST INTERFACE TO SDG 0'
M334     DC    CL43' ICG334I NO ALTERNATE SA PATH TO MSC TABLES'
M335     DC    CL32' ICG335I MSF 0 MUST BE SPECIFIED'
M338     DC    CL43' ICG338I SDG 0 MUST BE SPECIFIED WITH LCU 0'
M341     DC    CL42' ICG341I SA 1 MUST HAVE PATH TO MSC TABLES'
M401     DC    CL65' ICG401I WARNING - NOT USING CURRENT LEVEL OF MSC TC
               ABLES AS INPUT'
M402     DC    CL67' ICG402I UNABLE TO OPEN SYSPUNCH. OUTPUT LISTED IN C
               MESSAGE DATA SET'
M404     DC    CL56' ICG404I INPUT PACK DOES NOT VERIFY - MSCTC TERMINAC
               TED.'
M405     DC    CL65' ICG405I SUSPEND LONG INDICATION MISSING - VOLUMES C
               MAY BE MOUNTED'
M411     DC    CL61' ICG411I TABLE ID DOES NOT MATCH A TABLE PRODUCED BC
               Y ICGDSB10'
HEADING  DC    CL121'1                   MSC TABLE CREATE (VS2)        C
                                                            PAGE'
ICG109I  DC    CL53' ICG109I XXXX WARNING ERRORS, XXXX TERMINATING ERROC
               RS'
ICG110I  DC    CL33' ICG110I HIGHEST RETURN CODE WAS '
         DS    CL1
MSGLOKUP DC    H'101'
         DC    H'102'
         DC    H'103'
         DC    H'104'
         DC    H'105'
         DC    H'106'
         DC    H'107'
         DC    H'200'
         DC    H'202'
         DC    H'203'
         DC    H'204'
         DC    H'205'
         DC    H'207'
         DC    H'208'
         DC    H'209'
         DC    H'210'
         DC    H'211'
         DC    H'212'
         DC    H'213'
         DC    H'215'
         DC    H'216'
         DC    H'217'
         DC    H'218'
         DC    H'224'
         DC    H'230'
         DC    H'243'
         DC    H'246'
         DC    H'249'
         DC    H'300'
         DC    H'333'
         DC    H'334'
         DC    H'335'
         DC    H'338'
         DC    H'341'
         DC    H'401'
         DC    H'402'
         DC    H'404'
         DC    H'405'
         DC    H'411'
MSGPTR   DC    AL4(M101)
         DC    AL4(M102)
         DC    AL4(M103)
         DC    AL4(M104)
         DC    AL4(M105)
         DC    AL4(M106)
         DC    AL4(M107)
         DC    AL4(M200)
         DC    AL4(M202)
         DC    AL4(M203)
         DC    AL4(M204)
         DC    AL4(M205)
         DC    AL4(M207)
         DC    AL4(M208)
         DC    AL4(M209)
         DC    AL4(M210)
         DC    AL4(M211)
         DC    AL4(M212)
         DC    AL4(M213)
         DC    AL4(M215)
         DC    AL4(M216)
         DC    AL4(M217)
         DC    AL4(M218)
         DC    AL4(M224)
         DC    AL4(M230)
         DC    AL4(M243)
         DC    AL4(M246)
         DC    AL4(M249)
         DC    AL4(M300)
         DC    AL4(M333)
         DC    AL4(M334)
         DC    AL4(M335)
         DC    AL4(M338)
         DC    AL4(M341)
         DC    AL4(M401)
         DC    AL4(M402)
         DC    AL4(M404)
         DC    AL4(M405)
         DC    AL4(M411)
MSGLEN   DC    AL2(47)
         DC    AL2(46)
         DC    AL2(35)
         DC    AL2(29)
         DC    AL2(32)
         DC    AL2(30)
         DC    AL2(38)
         DC    AL2(29)
         DC    AL2(35)
         DC    AL2(37)
         DC    AL2(29)
         DC    AL2(31)
         DC    AL2(40)
         DC    AL2(42)
         DC    AL2(44)
         DC    AL2(32)
         DC    AL2(47)
         DC    AL2(34)
         DC    AL2(55)
         DC    AL2(55)
         DC    AL2(43)
         DC    AL2(44)
         DC    AL2(34)
         DC    AL2(50)
         DC    AL2(35)
         DC    AL2(49)
         DC    AL2(66)
         DC    AL2(53)
         DC    AL2(42)
         DC    AL2(37)
         DC    AL2(43)
         DC    AL2(32)
         DC    AL2(43)
         DC    AL2(42)
         DC    AL2(65)
         DC    AL2(67)
         DC    AL2(56)
         DC    AL2(65)
         DC    AL2(61)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @02
R4       EQU   @04
R0       EQU   @00
R1       EQU   @01
R3       EQU   @03
R14      EQU   @14
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
PCHBF    EQU   READER+99
INBUF    EQU   READER+100
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
PRINTER  EQU   COMTAB+464
DCBPRINT EQU   PRINTER
PAGENO   EQU   PRINTER+96
LINECTR  EQU   PRINTER+100
LINECT   EQU   PRINTER+102
OUTBUF   EQU   PRINTER+104
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
RETCODE  EQU   MESSAGES
MSGNO    EQU   MESSAGES+2
WARNING  EQU   MESSAGES+4
TERMINAT EQU   MESSAGES+6
WARN     EQU   MESSAGES+8
TERM     EQU   MESSAGES+12
PRINTRC  EQU   MESSAGES+16
SPECLMSG EQU   MESSAGES+18
PRNTCARD EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
NEEDEOJ  EQU   SPECLMSG
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
SAVE14   EQU   GENIO+12
COMPTR2  EQU   GENIO+16
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
CPUASSOC EQU   COMTAB+3026
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
IHADCB   EQU   0
IHADCS04 EQU   0
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBSYNA  EQU   DCBSYNAD+1
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
IHADCS40 EQU   0
DCBEOBAD EQU   IHADCS40
DCBCCCW  EQU   IHADCS40+4
DCBRECAD EQU   DCBCCCW
DCBRECBT EQU   DCBRECAD
DCBRCREL EQU   DCBRECBT
@NM00043 EQU   IHADCS40+12
DCBEROPT EQU   @NM00043
SCANBUF  EQU   0
SCANDATA EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DCBEOB   EQU   IHADCS40+20
DCBPRECL EQU   IHADCS40+18
@NM00046 EQU   IHADCS40+16
@NM00045 EQU   @NM00043+1
@NM00044 EQU   DCBEROPT
DCBERABE EQU   DCBEROPT
DCBERSKP EQU   DCBEROPT
DCBERACC EQU   DCBEROPT
@NM00042 EQU   IHADCS40+10
@NM00041 EQU   IHADCS40+9
@NM00040 EQU   IHADCS40+8
DCBRECA  EQU   DCBRECAD+1
@NM00039 EQU   DCBRECBT
DCBRCFGT EQU   DCBRCREL
DCBRCTRU EQU   DCBRCREL
DCBLCCW  EQU   DCBEOBAD
DCBNOTE  EQU   DCBCNTRL
DCBLRECL EQU   IHADCS38+10
@NM00038 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00037 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00036 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00035 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00034 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBBLKSI EQU   IHADCS36+10
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00033 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00032 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
@NM00031 EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUTA  EQU   DCBGETA
@NM00030 EQU   DCBPUT
DCBREADA EQU   DCBWRITA
@NM00029 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00028 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00027 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBIBPCT EQU   DCBIFLG
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00026 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00025 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00024 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00023 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
DCBDSGMQ EQU   DCBDSRG1
DCBDSGCQ EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
@NM00022 EQU   IHADCS04+3
DCBPRTOV EQU   IHADCS04+2
@NM00021 EQU   IHADCS04+1
DCBPRTSP EQU   IHADCS04
@NM00020 EQU   IHADCB
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
CPUREFNO EQU   RSGUCB+6
RSGCPUID EQU   RSGUCB+1
@NM00019 EQU   RSGFLAGS
CISPEC   EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00018 EQU   @NM00017
PRNTONLY EQU   @NM00017
UPDCREAT EQU   @NM00017
NEWCREAT EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
CPUSPEC  EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00013 EQU   CPUFLAG1
TOMPCPU  EQU   CPU+5
CPUID    EQU   CPU
CPUNUM   EQU   CPUASSOC
SPNRSGNO EQU   PHYSTYPE+1
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSICEB EQU   MERLICEB
PHYSMERL EQU   MERLICEB
PHYSDS2  EQU   DSPAIRS
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
TODS2    EQU   RSGTODS+1
TODS1    EQU   RSGTODS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
BUILDPTR EQU   GENIO+20
EXLST    EQU   GENIO+8
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00006 EQU   MESSAGES+19
@NM00005 EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
@NM00003 EQU   READER+206
SCANLEN  EQU   READER+204
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
LASTPARM EQU   READFLAG
ENDSCAN  EQU   READFLAG
PARMBIT  EQU   READFLAG
KEYBIT   EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   ICGDSMSG,(C'PLS0021',0603,77067)
