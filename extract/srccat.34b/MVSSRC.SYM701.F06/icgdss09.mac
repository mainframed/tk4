         TITLE 'ICGDSS09 MSC TABLE CREATE, SCAN DASD STATEMENT         *
                        '
ICGDSS09 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSS09  76.349'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  LA    @10,4095(,@11)                                      0001
         USING @PSTART,@11                                         0001
         USING @PSTART+4095,@10                                    0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @12,@01                                             0001
         USING @DATD,@12                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @12,8(,@13)                                         0001
         LR    @13,@12                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0035
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*                  ICGDSS09 (MAINLINE)                     @YD00113*/
*/*                                                          @Y30LB12*/
*/*            CALL MAJOR ROUTINES TO INITIALIZE LOCAL WORK  @YD00113*/
*/*            AREAS, EXTRACT KEYWORDS AND PARAMETERS FROM   @Y30LB12*/
*/*            CONTROL STATEMENT, CHECK FOR MISSING AND      @Y30LB12*/
*/*            DUPLICATE VALUES.  IF NO TERMINATING ERRORS,  @Y30LB12*/
*/*            CALL ROUTINE TO UPDATE ALL AFFECTED TABLES.   @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0035
*   CALL S09INIT;                   /* TO INITIALIZE         @Y30LB12*/
         BAL   @14,S09INIT                                         0035
*   CALL S09SCAN;                   /* EXTRACT KEY, PARM     @Y30LB12*/
         BAL   @14,S09SCAN                                         0036
*   CALL S09ANAL;                   /* CHECK VALUES          @Y30LB12*/
         BAL   @14,S09ANAL                                         0037
*   IF STOPSCAN^='1'B               /* IF NO TERM. ERROR     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    STOPSCAN,B'01000000'                                0038
         BO    @RF00038                                            0038
*     CALL S09BUILD;                /* BUILD CORE TABLES     @Y30LB12*/
         BAL   @14,S09BUILD                                        0039
*   ELSE                                                           0040
*     ;                             /*                       @Y30LB12*/
@RF00038 DS    0H                                                  0041
*   RETURN;                         /* RET. TO ICGDSSCN      @Y30LB12*/
@EL00001 L     @13,4(,@13)                                         0041
@EF00001 L     @00,@SIZDATD                                        0041
         LR    @01,@12                                             0041
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0041
         BR    @14                                                 0041
*                                                                  0042
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09INIT                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - INITIALIZE LOCAL WORK AREA SPNWORKA.          @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0042
*S09INIT:                                                          0042
*   PROCEDURE;                      /*                       @Y30LB12*/
S09INIT  STM   @14,@12,12(@13)                                     0042
*   DO I=1 TO 8;                    /* 8 POSSIBLE ADDRS      @Y30LB12*/
         LA    I,1                                                 0043
@DL00043 DS    0H                                                  0044
*     FLAGS(I)='0000'X;             /* CLEAR FLAG BYTE       @Y30LB12*/
         LR    @05,I                                               0044
         SLA   @05,2                                               0044
         LA    @03,FLAGS-4(@05)                                    0044
         MVC   0(2,@03),@CB00462                                   0044
*     WKLOGDEV(I)='00'X;            /* LOGICAL DEVICE        @Y30LB12*/
         LA    @03,WKLOGDEV-4(@05)                                 0045
         MVI   0(@03),X'00'                                        0045
*     WORKRSG(I)='00'X;             /* STAGING DASD GROUP    @XD00153*/
         LA    @03,WORKRSG-4(@05)                                  0046
         MVI   0(@03),X'00'                                        0046
*   END;                            /*                       @Y30LB12*/
         AH    I,@CH00044                                          0047
         CH    I,@CH00042                                          0047
         BNH   @DL00043                                            0047
*   S09MSGID='00'X;                 /* CONTROL FLAGS         @Y30LB12*/
         MVI   S09MSGID,X'00'                                      0048
*   HAVES='00'X;                    /* 'FOUND IT' FLAGS      @Y30LB12*/
         MVI   HAVES,X'00'                                         0049
*   DSINDEX1=0;                     /* 1ST DATA STAGER       @Y30LB12*/
         SLR   @05,@05                                             0050
         STH   @05,DSINDEX1                                        0050
*   DSINDEX2=0;                     /* 2ND DATA STAGER       @Y30LB12*/
         STH   @05,DSINDEX2                                        0051
*   DEVINDEX=0;                     /* INDEX TO PHYS DEV     @Y30LB12*/
         MVI   DEVINDEX,X'00'                                      0052
*   END S09INIT;                    /* RET. TO MAINLINE      @Y30LB12*/
@EL00002 DS    0H                                                  0053
@EF00002 DS    0H                                                  0053
@ER00002 LM    @14,@12,12(@13)                                     0053
         BR    @14                                                 0053
*                                                                  0054
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09SCAN                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - SCAN CONTROL STATEMENT FOR MAJOR KEYWORDS     @Y30LB12*/
*/*            'SA', 'CUA', AND 'DEV' AND CALL THE PROPER    @Y30LB12*/
*/*            PROCEDURE TO SCAN FOR PARAMETER.              @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0054
*S09SCAN:                                                          0054
*   PROCEDURE;                      /*                       @Y30LB12*/
S09SCAN  STM   @14,@12,@SA00003                                    0054
*   DO WHILE(LASTPARM^='1'B);       /* TILL NO MORE DATA     @Y30LB12*/
         B     @DE00055                                            0055
@DL00055 DS    0H                                                  0056
*     CALL READS99;                 /* EXTRACT KEYWORD       @Y30LB12*/
         BAL   @14,READS99                                         0056
*     KNOWN='0'B;                   /* REC. KEYWORD FLAG     @Y30LB12*/
         NI    KNOWN,B'01111111'                                   0057
*     IF LASTPARM='1'B              /* SET BY ICGDSS99       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         TM    LASTPARM(R4),B'00001000'                            0058
         BO    @RT00058                                            0058
*       RETURN;                     /* RET. TO MAINLINE      @Y30LB12*/
*     ELSE                                                         0060
*       ;                           /*                       @Y30LB12*/
*     IF KEYBIT^='1'B               /* SET BY ICGDSS99       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         TM    KEYBIT(R4),B'01000000'                              0061
         BO    @RF00061                                            0061
*       DO;                         /*                       @Y30LB12*/
*                                                                  0062
*         /***********************************************************/
*         /*                                                         */
*         /* *****************************************       @Y30LB12*/
*         /* ICG209I EXPECTED, BUT DID NOT FIND,             @Y30LB12*/
*         /* KEYWORD                                         @Y30LB12*/
*         /* *****************************************       @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0063
*         MSGNO=ICG209I;            /* ID FOR ICGDS209       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG209I                                 0063
*         CALL PUTIT2;              /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0064
*         RETURN;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00003 DS    0H                                                  0065
@EF00003 DS    0H                                                  0065
@ER00003 LM    @14,@12,@SA00003                                    0065
         BR    @14                                                 0065
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0067
*       ;                           /*                       @Y30LB12*/
*                                                                  0067
@RF00061 DS    0H                                                  0068
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* IF THE KEYWORD SCANNED IS 'SA', SET FLAG TO         @YD00113*/
*     /* '1' AND CALL 'S09DS' TO EXTRACT PARAMETERS          @YD00113*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0068
*     IF SCANDATA(1:3)='SA='        /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0068
         CLC   SCANDATA(3,@05),@CC00471                            0068
         BNE   @RF00068                                            0068
*       DO;                         /*                       @Y30LB12*/
*         KNOWN='1'B;               /* RECOGNIZED KEYWD      @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0070
*         CALL S09DS;               /* TO GET PARAMETERS     @Y30LB12*/
         BAL   @14,S09DS                                           0071
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0073
*       ;                           /*                       @Y30LB12*/
*                                                                  0073
@RF00068 DS    0H                                                  0074
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* IF THE KEYWORD SCANNED IS 'CUA', SET FLAG TO        @YD00113*/
*     /* '1' AND CALL 'S09CUA' TO EXTRACT PARAMETERS         @YD00113*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0074
*     IF SCANDATA(1:4)='CUA='       /*                       @Y30LB12*/
*         &KNOWN='0'B               /*                       @YM31096*/
*       THEN                        /*                       @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0074
         CLC   SCANDATA(4,@05),@CC00473                            0074
         BNE   @RF00074                                            0074
         TM    KNOWN,B'10000000'                                   0074
         BNZ   @RF00074                                            0074
*       DO;                         /*                       @Y30LB12*/
*         KNOWN='1'B;               /* RECOGNIZED KEYWD      @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0076
*         CALL S09CUA;              /* TO GET PARAMETER      @Y30LB12*/
         BAL   @14,S09CUA                                          0077
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0079
*       ;                           /*                       @Y30LB12*/
*                                                                  0079
@RF00074 DS    0H                                                  0080
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* IF THE KEYWORD SCANNED IS 'DEVX', SET FLAG TO       @YD00113*/
*     /* '1' AND CALL 'S09DEV' TO EXTRACT PARAMETERS         @YD00113*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0080
*     IF SCANDATA(1:3)='DEV'        /*                       @Y30LB12*/
*         &KNOWN='0'B               /*                       @YM31096*/
*       THEN                        /*                       @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0080
         CLC   SCANDATA(3,@05),@CC00475                            0080
         BNE   @RF00080                                            0080
         TM    KNOWN,B'10000000'                                   0080
         BNZ   @RF00080                                            0080
*       DO;                         /*                       @Y30LB12*/
*         KNOWN='1'B;               /* RECOGNIZED KEYWD      @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0082
*         CALL S09DEV;              /* TO GET PARAMETER      @Y30LB12*/
         BAL   @14,S09DEV                                          0083
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0085
*       ;                           /*                       @Y30LB12*/
*                                                                  0085
@RF00080 DS    0H                                                  0086
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* IF THE KEYWORD IS NOT SA, CUA, OR DEVX, CALL        @YD00113*/
*     /* 'UNKNOWN' PROCEDURE TO WRITE ERROR MESSAGE          @YD00113*/
*     /* AND POSITION TO NEXT KEYWORD.                       @YD00113*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0086
*     IF KNOWN^='1'B                /* UNKNOWN KEYWORD       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         TM    KNOWN,B'10000000'                                   0086
         BO    @RF00086                                            0086
*       CALL UNKNOWN;               /* WRITE MESSAGE ETC     @Y30LB12*/
         BAL   @14,UNKNOWN                                         0087
*     ELSE                                                         0088
*       ;                           /*                       @Y30LB12*/
@RF00086 DS    0H                                                  0089
*   END;                            /* END OF DO WHILE       @Y30LB12*/
@DE00055 TM    LASTPARM(R4),B'00001000'                            0089
         BNO   @DL00055                                            0089
*   END S09SCAN;                    /* RET. TO MAINLINE      @Y30LB12*/
         B     @EL00003                                            0090
*                                                                  0091
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09CUA                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - EXTRACT THE CONTROL UNIT ADDRESS OF THE       @Y30LB12*/
*/*            DASD CONTROLLER FROM THE CONTROL STATEMENT.   @Y30LB12*/
*/*            ONLY ONE CUA KEYWORD AND PARMETER ARE         @Y30LB12*/
*/*            PERMITTED PER SPINDLES CONTROL STATEMENT.     @Y30LB12*/
*/*            THE CUA PARAMETER IS A SINGLE DECIMAL DIGIT   @Y30LB12*/
*/*            IN THE RANGE 0-3.                             @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0091
*S09CUA:                                                           0091
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0091
S09CUA   STM   @14,@12,@SA00004                                    0091
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* CALL 'READS99' TO EXTRACT THE CUA PARAMETER.          @YD00113*/
*   /* TEST TO ASSURE KEYWORD 'CUA' IS NOT DUPLICATED        @YD00113*/
*   /* THEN SET FLAG TO INDICATE 'CUA' OBTAINED.             @YD00113*/
*   /* IF A DUPLICATE EXISTS, ISSUE ERROR MESSAGE            @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0092
*   CALL READS99;                   /* EXTRACT PARAMETER     @Y30LB12*/
         BAL   @14,READS99                                         0092
*   IF HAVECUA^='1'B                /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    HAVECUA,B'01000000'                                 0093
         BO    @RF00093                                            0093
*     HAVECUA='1'B;                 /*                       @Y30LB12*/
         OI    HAVECUA,B'01000000'                                 0094
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0095
         B     @RC00093                                            0095
@RF00093 DS    0H                                                  0096
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* 'ICG219I DUPLICATE KEYWORD CUA'                   @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0096
*       OUTBUF2(1:27)=ICGDS219;     /*                       @Y30LB12*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0096
*       OUTBUF2(28:30)='CUA';       /*                       @Y30LB12*/
         MVC   OUTBUF2+27(3,R4),@CC00481                           0097
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0098
*       RETURN;                     /* RETURN TO S09SCAN     @Y30LB12*/
@EL00004 DS    0H                                                  0099
@EF00004 DS    0H                                                  0099
@ER00004 LM    @14,@12,@SA00004                                    0099
         BR    @14                                                 0099
*     END;                          /*                       @Y30LB12*/
*                                                                  0100
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* TEST TO ASSURE DATA SCANNED IS A PARAMETER.           @YD00113*/
*   /* IF NOT, PRINT ERROR MESSAGE                           @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0101
*   IF PARMBIT^='1'B                /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00093 TM    PARMBIT(R4),B'00100000'                             0101
         BO    @RF00101                                            0101
*     DO;                           /*                       @Y30LB12*/
*                                                                  0102
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG211I EXPECTED, BUT DID NOT FIND,               @Y30LB12*/
*       /* PARAMETER                                         @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0103
*       MSGNO=ICG211I;              /* ID FOR ICG211I        @Y30LB12*/
         MVC   MSGNO(2,R4),ICG211I                                 0103
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0104
*       RETURN;                     /* RETURN TO S09SCAN     @Y30LB12*/
         B     @EL00004                                            0105
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0107
*     ;                             /*                       @Y30LB12*/
*                                                                  0107
@RF00101 DS    0H                                                  0108
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* TEST LENGTH OF PARAMETER (NOT TO EXCEED ONE           @YD00113*/
*   /* BYTE). IF IT DOES, PRINT ERROR MESSAGE.               @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0108
*   IF SCANLEN^=1                   /* SET BY ICGDSS99       #Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLC   SCANLEN(2,R4),@CH00044                              0108
         BE    @RF00108                                            0108
*     DO;                           /*                       @Y30LB12*/
*                                                                  0109
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* 'ICG220I INVALID PARAMETER LENGTH,                @Y30LB12*/
*       /* KEYWORD IS CUA'                                   @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0110
*       OUTBUF2(1:46)=ICGDS220;     /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0110
*       OUTBUF2(47:49)='CUA';       /*                       @Y30LB12*/
         MVC   OUTBUF2+46(3,R4),@CC00481                           0111
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0112
*       RETURN;                     /* RETURN TO S09SCAN     @Y30LB12*/
         B     @EL00004                                            0113
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0115
*     ;                             /*                       @Y30LB12*/
*                                                                  0115
@RF00108 DS    0H                                                  0116
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* THE VALUE STORED IN WORKCUA AT EXIT FROM THIS         @Y30LB12*/
*   /* ROUTINE IN WORKCUA IS THE BINARY VALUE 1, 2,          @Y30LB12*/
*   /* 3, OR 4. THIS VALUE WILL BE USED AS THE               @Y30LB12*/
*   /* SECOND INDEX INTO THE COMMON STRUCTURES               @Y30LB12*/
*   /* DSPAIRS AND PHYSTYPE.                                 @Y30LB12*/
*   /* IF THE VALUE SCANNED IS NOT 'F0','F1','F2',           @YD00113*/
*   /* OR 'F3', PRINT ERROR MESSAGE.                         @YD00113*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0116
*   WORKCUA=SCANDATA(1);            /* CUA TO LOCAL WORK     @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0116
         MVC   WORKCUA(1),SCANDATA(@05)                            0116
*   IF HIGHCUA='1111'B              /* ZONE 0F NUMBER        @Y30LB12*/
*       &MIDCUA='00'B               /* DIGIT LESS THAN 4     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    HIGHCUA,B'11110000'                                 0117
         BNO   @RF00117                                            0117
         TM    MIDCUA,B'00001100'                                  0117
         BNZ   @RF00117                                            0117
*     DO;                           /*                       @Y30LB12*/
*       HIGHCUA='0000'B;            /* BINARY EQUIVALENT     @Y30LB12*/
         NI    HIGHCUA,B'00001111'                                 0119
*       WORKCUA=WORKCUA+1;          /* VALUE IS 1-4          @Y30LB12*/
         LA    @05,1                                               0120
         MVC   @ZT00003+3(1),WORKCUA                               0120
         AL    @05,@ZT00003                                        0120
         STC   @05,WORKCUA                                         0120
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0122
         B     @RC00117                                            0122
@RF00117 DS    0H                                                  0123
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG223I VALUE ERROR FOR CUA                       @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0123
*       OUTBUF2(1:25)=ICGDS223;     /*                       @Y30LB12*/
         MVC   OUTBUF2(25,R4),ICGDS223                             0123
*       OUTBUF2(26:28)='CUA';       /*                       @Y30LB12*/
         MVC   OUTBUF2+25(3,R4),@CC00481                           0124
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0125
*     END;                          /*                       @Y30LB12*/
*   END S09CUA;                     /* RETURN TO S09SCAN     @Y30LB12*/
         B     @EL00004                                            0127
*                                                                  0128
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09DS                                   @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - EXTRACT THE PARAMETER FOR EITHER ONE OR TWO   @Y30LB12*/
*/*            DATA STAGERS THAT ATTACH TO THIS DASD         @Y30LB12*/
*/*            CONTROLLER.  ONE DATA STAGER IS REQUIRED.     @Y30LB12*/
*/*            THE SECOND DATA STAGER IS OPTIONAL.  IF TWO   @Y30LB12*/
*/*            DATA STAGER SPECIFICATIONS ARE SUPPLIED,      @Y30LB12*/
*/*            TWO ENTRIES IN PHYSTYPE WILL BE UPDATED       @Y30LB12*/
*/*            WITH THE INFORMATION EXTRACTED FROM THIS      @Y30LB12*/
*/*            CONTROL STATEMENT.                            @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            THE VALUES DSINDEX1 AND DSINDEX2 ARE BINARY   @Y30LB12*/
*/*            NUMBERS ONE GREATER THAN THE ACTUAL STAGING   @YD00113*/
*/*            ADAPTER AND ARE USED AS THE FIRST INDEX INTO  @Y30LB12*/
*/*            DSPAIRS AND PHYSTYPE.                         @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0128
*S09DS:                                                            0128
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0128
S09DS    STM   @14,@12,@SA00005                                    0128
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* CALL 'READS99' TO EXTRACT THE FIRST PARAMETER         @YD00113*/
*   /* THEN TEST FOR DUPLICATED KEYWORD ('SA').              @YD00113*/
*   /* IF NO DUPLICATE, TEST IF EXPECTED PARAMETER           @YD00113*/
*   /* WAS FOUND. IF IT WAS, TEST THE PARAMETER'S            @YD00113*/
*   /* LENGTH (NOT TO EXCEED ONE BYTE). IF AN ERROR          @YD00113*/
*   /* OCCURS ON ANY OF THE TESTS, PRINT AN ERROR            @YD00113*/
*   /* MESSAGE AND RETURN TO CALLING PROCEDURE.              @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0129
*   CALL READS99;                   /* EXTRACT 1ST PARM      @Y30LB12*/
         BAL   @14,READS99                                         0129
*   IF HAVEDS^='1'B                 /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    HAVEDS,B'10000000'                                  0130
         BO    @RF00130                                            0130
*     HAVEDS='1'B;                  /*                       @Y30LB12*/
         OI    HAVEDS,B'10000000'                                  0131
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0132
         B     @RC00130                                            0132
@RF00130 DS    0H                                                  0133
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* 'ICG219I DUPLICATE KEYWORD SA'                    @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0133
*       OUTBUF2(1:27)=ICGDS219;     /*                       @Y30LB12*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0133
*       OUTBUF2(28:29)='SA';        /*                       @Y30LB12*/
         MVC   OUTBUF2+27(2,R4),@CC00491                           0134
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0135
*       RETURN;                     /* RETURN TO S09SCAN     @Y30LB12*/
@EL00005 DS    0H                                                  0136
@EF00005 DS    0H                                                  0136
@ER00005 LM    @14,@12,@SA00005                                    0136
         BR    @14                                                 0136
*     END;                          /*                       @Y30LB12*/
*   IF PARMBIT^='1'B                /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00130 TM    PARMBIT(R4),B'00100000'                             0138
         BO    @RF00138                                            0138
*     DO;                           /*                       @Y30LB12*/
*                                                                  0139
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG211I EXPECTED, BUT DID NOT FIND,               @Y30LB12*/
*       /* PARAMETER                                         @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0140
*       MSGNO=ICG211I;              /* ID FOR ICG211I        @Y30LB12*/
         MVC   MSGNO(2,R4),ICG211I                                 0140
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0141
*       RETURN;                     /* RETURN TO S09SCAN     @Y30LB12*/
         B     @EL00005                                            0142
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0144
*     ;                             /*                       @Y30LB12*/
@RF00138 DS    0H                                                  0145
*   IF SCANLEN^=1                   /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLC   SCANLEN(2,R4),@CH00044                              0145
         BE    @RF00145                                            0145
*     DO;                           /*                       @Y30LB12*/
*                                                                  0146
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* 'ICG220I INVALID PARAMETER LENGTH,                @Y30LB12*/
*       /* KEYWORD IS SA '                                   @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0147
*       OUTBUF2(1:46)=ICGDS220;     /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0147
*       OUTBUF2(47:48)='SA';        /*                       @Y30LB12*/
         MVC   OUTBUF2+46(2,R4),@CC00491                           0148
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0149
*       RETURN;                     /* RETURN TO S09SCAN     @Y30LB12*/
         B     @EL00005                                            0150
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0152
*     ;                             /*                       @Y30LB12*/
*                                                                  0152
@RF00145 DS    0H                                                  0153
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* CALL 'CONVHEX' TO CONVERT DATA (1 BYTE) TO            @YD00113*/
*   /* BINARY. IF THE VALUE IS NOT ZERO, SAVE DATA           @YD00113*/
*   /* IN TABLE.                                             @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0153
*   HEXCHAR=SCANDATA(1);            /* DS TO LOCAL WORK      @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0153
         MVC   HEXCHAR(1),SCANDATA(@05)                            0153
*   CALL CONVHEX;                   /* CONVERT TO BINARY     @Y30LB12*/
         BAL   @14,CONVHEX                                         0154
*   IF HEXINDEX^=0                  /* IF CONVERT OKAY       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LH    @05,HEXINDEX                                        0155
         LTR   @05,@05                                             0155
         BZ    @RF00155                                            0155
*     DSINDEX1=HEXINDEX;            /* SAVE 1ST DS + 1       @Y30LB12*/
         STH   @05,DSINDEX1                                        0156
*   ELSE                                                           0157
*     ;                             /*                       @Y30LB12*/
*                                                                  0157
@RF00155 DS    0H                                                  0158
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* SET UP TO READ NEXT VALUE IN CASE A SECOND DS         @YD00113*/
*   /* WAS SPECIFIED. CALL 'READS99' TO EXTRACT THE          @YD00113*/
*   /* POSSIBLE PARAMETER. IF NO PARAMETER EXISTS,           @YD00113*/
*   /* THUS NO SECOND DS, RETURN TO CALLING PROC.            @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0158
*   SAVESCOL=STARTCOL;              /* IN CASE NO 2ND DS     @Y30LB12*/
         MVC   SAVESCOL(4,R4),STARTCOL(R4)                         0158
*   SAVENCOL=NEXTCOL;               /* IN CASE NO 2ND DS     @Y30LB12*/
         MVC   SAVENCOL(4,R4),NEXTCOL(R4)                          0159
*   CALL READS99;                   /* EXTRACT PARAMETER     @Y30LB12*/
         BAL   @14,READS99                                         0160
*   IF PARMBIT^='1'B                /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    PARMBIT(R4),B'00100000'                             0161
         BO    @RF00161                                            0161
*     DO;                           /*                       @Y30LB12*/
*       STARTCOL=SAVESCOL;          /* NO SECOND DS          @Y30LB12*/
         MVC   STARTCOL(4,R4),SAVESCOL(R4)                         0163
*       NEXTCOL=SAVENCOL;           /* NO SECOND DS          @Y30LB12*/
         MVC   NEXTCOL(4,R4),SAVENCOL(R4)                          0164
*       RETURN;                     /* RETURN TO S09SCAN     @Y30LB12*/
         B     @EL00005                                            0165
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0167
*     ;                             /* SECOND DS PRESENT     @Y30LB12*/
*                                                                  0167
@RF00161 DS    0H                                                  0168
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* A SECOND DS IS INDICATED BY THE PRESENCE OF           @YD00113*/
*   /* ANOTHER PARAMETER. TEST IF THE LENGTH OF THE          @YD00113*/
*   /* PARAMETER IS VALID. IF IT IS, CONVERT THE             @YD00113*/
*   /* VALUE TO BINARY. IF RETURNED VALUE IS NOT             @YD00113*/
*   /* ZERO, SAVE SECOND DSINDEX. IF VALUE IS ZERO,          @YD00113*/
*   /* RETURN TO CALLING PROCEDURE.                          @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0168
*   IF SCANLEN^=1                   /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLC   SCANLEN(2,R4),@CH00044                              0168
         BE    @RF00168                                            0168
*     DO;                           /*                       @Y30LB12*/
*                                                                  0169
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* 'ICG220I INVALID PARAMETER LENGTH,                @Y30LB12*/
*       /* KEYWORD IS SA (2ND PARM)                          @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0170
*       OUTBUF2(1:46)=ICGDS220;     /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0170
*       OUTBUF2(47:59)='SA (2ND PARM)';/*                    @Y30LB12*/
         MVC   OUTBUF2+46(13,R4),@CC00494                          0171
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0172
*       RETURN;                     /* RETURN TO S09SCAN     @Y30LB12*/
         B     @EL00005                                            0173
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0175
*     ;                             /*                       @Y30LB12*/
@RF00168 DS    0H                                                  0176
*   HEXCHAR=SCANDATA(1);            /* DS TO LOCAL WORK      @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0176
         MVC   HEXCHAR(1),SCANDATA(@05)                            0176
*   CALL CONVHEX;                   /* CONVERT TO BINARY     @Y30LB12*/
         BAL   @14,CONVHEX                                         0177
*   IF HEXINDEX^=0                  /* IF CONVERT OKAY       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LH    @05,HEXINDEX                                        0178
         LTR   @05,@05                                             0178
         BZ    @RF00178                                            0178
*     DSINDEX2=HEXINDEX;            /* SAVE 2ND DS + 1       @Y30LB12*/
         STH   @05,DSINDEX2                                        0179
*   ELSE                                                           0180
*     ;                             /*                       @Y30LB12*/
@RF00178 DS    0H                                                  0181
*   END S09DS;                      /* RETURN TO S09SCAN     @Y30LB12*/
         B     @EL00005                                            0181
*                                                                  0182
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CONVHEX                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - THIS PROCEDURE RECEIVES AS INPUT THE          @Y30LB12*/
*/*            CHARACTER REPRESENTATION OF A SINGLE          @Y30LB12*/
*/*            HEXADECIMAL DIGIT IN 'HEXCHAR'.  IF THE       @Y30LB12*/
*/*            CHARACTER REPRESENTS A VALID HEXADECIMAL      @Y30LB12*/
*/*            DIGIT, IT IS CONVERTED TO BINARY IN HEXCHAR   @Y30LB12*/
*/*            AND HEXINDEX IS SET TO HEXCHAR + 1.           @Y30LB12*/
*/*            OTHERWISE MESSAGE ICGDS227 IS WRITTEN.        @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0182
*CONVHEX:                                                          0182
*   PROCEDURE;                      /*                       @Y30LB12*/
CONVHEX  STM   @14,@12,@SA00006                                    0182
*   HEXINDEX=0;                     /* INITIALIZE TO 0       @Y30LB12*/
         SLR   @05,@05                                             0183
         STH   @05,HEXINDEX                                        0183
*   DO I=1 TO 16;                   /* 16 POSSIBILITIES      @Y30LB12*/
         LA    I,1                                                 0184
@DL00184 DS    0H                                                  0185
*     IF HEXCHAR=PATTERN(I)         /* IF MATCH TO CHAR      @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LA    @05,PATTERN-1(I)                                    0185
         CLC   HEXCHAR(1),0(@05)                                   0185
         BNE   @RF00185                                            0185
*       DO;                         /*                       @Y30LB12*/
*         HEXINDEX=I;               /* INDEX IS 1-16 BIN     @Y30LB12*/
         STH   I,HEXINDEX                                          0187
*         HEXCHAR=HEXINDEX-1;       /* CHARS ARE 0-F         @Y30LB12*/
         LH    @05,HEXINDEX                                        0188
         BCTR  @05,0                                               0188
         STC   @05,HEXCHAR                                         0188
*         RETURN;                   /* RETURN TO S09DS       @Y30LB12*/
@EL00006 DS    0H                                                  0189
@EF00006 DS    0H                                                  0189
@ER00006 LM    @14,@12,@SA00006                                    0189
         BR    @14                                                 0189
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0191
*       ;                           /*                       @Y30LB12*/
@RF00185 DS    0H                                                  0192
*   END;                            /* ALL 16 & NO MATCH     @Y30LB12*/
*                                                                  0192
         AH    I,@CH00044                                          0192
         CH    I,@CH00164                                          0192
         BNH   @DL00184                                            0192
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* ICG227I PARAMETER MUST BE HEXADECIMAL.                @Y30LB12*/
*   /* KEYWORD IS SA                                         @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0193
*   OUTBUF2(1:51)=ICGDS227;         /*                       @Y30LB12*/
         MVC   OUTBUF2(51,R4),ICGDS227                             0193
*   OUTBUF2(52:53)='SA';            /*                       @Y30LB12*/
         MVC   OUTBUF2+51(2,R4),@CC00491                           0194
*   CALL PUTIT1;                    /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0195
*   END CONVHEX;                    /* RETURN TO S09DS       @Y30LB12*/
         B     @EL00006                                            0196
*                                                                  0197
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09DEV                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - EXTRACT THE PHYSICAL DEVICE NUMBER FROM THE   @Y30LB12*/
*/*            SUFFIX OF THE KEYWORD AND CALL S09DEVS1 TO    @Y30LB12*/
*/*            EXAMINE THE PARAMETERS THAT ARE EXPECTED TO   @Y30LB12*/
*/*            FOLLOW THE KEYWORD.                           @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            THE VALUE OF DEV PLUS ONE IS USED AS THE      @Y30LB12*/
*/*            THIRD INDEX INTO PHYSTYPE AND REPRESENTS      @Y30LB12*/
*/*            THE PHYSICAL ADDRESS OF THE DEVICE.  (IF      @Y30LB12*/
*/*            THE DEVICE IS TO BE USED FOR STAGING, ITS     @Y30LB12*/
*/*            SSID, WHICH CONSISTS OF SDG PLUS LUA, IS      @Y30LB12*/
*/*            THE LOGICAL ADDRESS OF THE DEVICE.)           @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0197
*S09DEV:                                                           0197
*   PROCEDURE;                      /*                       @Y30LB12*/
S09DEV   STM   @14,@12,@SA00007                                    0197
*   IF SCANLEN^=4                   /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLC   SCANLEN(2,R4),@CH00070                              0198
         BE    @RF00198                                            0198
*     DO;                           /*                       @Y30LB12*/
*                                                                  0199
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* 'ICG223I VALUE ERROR FOR DEVX                     @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0200
*       OUTBUF2(1:25)=ICGDS223;     /*                       @Y30LB12*/
         MVC   OUTBUF2(25,R4),ICGDS223                             0200
*       OUTBUF2(26:29)=SCANDATA(1:4);/*                      @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0201
         MVC   OUTBUF2+25(4,R4),SCANDATA(@05)                      0201
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0202
*       RETURN;                     /* RETURN TO S09SCAN     @Y30LB12*/
@EL00007 DS    0H                                                  0203
@EF00007 DS    0H                                                  0203
@ER00007 LM    @14,@12,@SA00007                                    0203
         BR    @14                                                 0203
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0205
*     ;                             /*                       @Y30LB12*/
@RF00198 DS    0H                                                  0206
*   PLUGIN(1:4)=SCANDATA(1:4);      /* FOR POSSIBLE MSG      @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0206
         MVC   PLUGIN(4),SCANDATA(@05)                             0206
*   WORKDEV=SCANDATA(4);            /* PHYSICAL DEVICE       @Y30LB12*/
         MVC   WORKDEV(1),SCANDATA+3(@05)                          0207
*   DEVINDEX=0;                     /* INIT INDEX VALUE      @Y30LB12*/
         MVI   DEVINDEX,X'00'                                      0208
*   CALL CONVDEC;                   /* GET INDEX VALUE       @Y30LB12*/
         BAL   @14,CONVDEC                                         0209
*   DEVINDEX=DECINDEX;              /* STORE INDEX VALUE     @Y30LB12*/
         SLR   @05,@05                                             0210
         IC    @05,DECINDEX                                        0210
         STC   @05,DEVINDEX                                        0210
*   IF DEVINDEX^=0                  /* IF VALUE OKAY         @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLI   DEVINDEX,0                                          0211
         BE    @RF00211                                            0211
*     IF HAVEDEV(DEVINDEX)^='1'B    /* SPEC BEFORE           @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         SLA   @05,2                                               0212
         LA    @01,HAVEDEV-4(@05)                                  0212
         TM    0(@01),B'10000000'                                  0212
         BO    @RF00212                                            0212
*       DO;                         /*                       @Y30LB12*/
*         HAVEDEV(DEVINDEX)='1'B;   /* SET SPEC              @Y30LB12*/
         LA    @01,HAVEDEV-4(@05)                                  0214
         OI    0(@01),B'10000000'                                  0214
*         KNOWN2='1'B;              /* FOR CONTROL LOOP      @Y30LB12*/
         OI    KNOWN2,B'00100000'                                  0215
*         CALL S09DEVS1;            /* TO GET PARAMETERS     @Y30LB12*/
         BAL   @14,S09DEVS1                                        0216
*       END;                        /*                       @Y30LB12*/
*     ELSE                          /*                       @Y30LB12*/
*       DO;                         /*                       @Y30LB12*/
*                                                                  0218
         B     @RC00212                                            0218
@RF00212 DS    0H                                                  0219
*         /***********************************************************/
*         /*                                                         */
*         /* *************************************           @Y30LB12*/
*         /* 'ICG219I DUPLICATE KEYWORD DEVX'                @Y30LB12*/
*         /* *************************************           @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0219
*         OUTBUF2(1:27)=ICGDS219;   /*                       @Y30LB12*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0219
*         OUTBUF2(28:31)=SCANDATA(1:4);/*                    @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0220
         MVC   OUTBUF2+27(4,R4),SCANDATA(@05)                      0220
*         CALL PUTIT1;              /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0221
*       END;                        /*                       @Y30LB12*/
*   END S09DEV;                     /* RETURN TO S09SCAN     @Y30LB12*/
         B     @EL00007                                            0223
*                                                                  0224
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09DEVS1                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - FOLLOWING DEVICE, THE DEVICE TYPE (3330-1 OR  @Y30LB12*/
*/*            3330-11) AND THE MAJOR DEVICE USAGE (REAL OR  @Y30LB12*/
*/*            STAGING) MUST APPEAR.  IF THE DEVICE IS USED  @Y30LB12*/
*/*            FOR STAGING, CALL THE ROUTINE THAT GETS       @Y30LB12*/
*/*            ADDITIONAL INFORMATION ABOUT ITS LOGICAL      @Y30LB12*/
*/*            ADDRESS.                                      @Y30LB12*/
*/*            THIS ROUTINE DETERMINES THE DEVICE TYPE AND   @Y30LB12*/
*/*            CALLS S09DEVS2 TO DETERMINE DEVICE USAGE      @Y30LB12*/
*/*                                                          @YD00113*/
*/*            IF TEST FOR KEYWORD FAILS, ISSUE ERROR MSG    @YD00113*/
*/*            ICG209I VIA 'PUTIT2'.  IF DEVICE IS NEITHER A @YD00113*/
*/*            3330-1 OR A 3330-11, ISSUE ERROR MESSAGE      @YD00113*/
*/*            ICG210I VIA 'UNKNOWN' PROCEDURE.              @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0224
*S09DEVS1:                                                         0224
*   PROCEDURE;                      /*                       @Y30LB12*/
S09DEVS1 STM   @14,@12,@SA00008                                    0224
*   KNOWN2='0'B;                    /* FOUND KNOWN KEYWD     @Y30LB12*/
         NI    KNOWN2,B'11011111'                                  0225
*   CALL READS99;                   /* EXTRACT PARAMETER     @Y30LB12*/
         BAL   @14,READS99                                         0226
*   IF KEYBIT^='1'B                 /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    KEYBIT(R4),B'01000000'                              0227
         BO    @RF00227                                            0227
*     DO;                           /*                       @Y30LB12*/
*                                                                  0228
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG209I EXPECTED, BUT DID NOT FIND,               @Y30LB12*/
*       /* KEYWORD                                           @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0229
*       KNOWN2='1'B;                /* SUPPRESS ICG210I      @Y30LB12*/
         OI    KNOWN2,B'00100000'                                  0229
*       MSGNO=ICG209I;              /* ID FOR ICG209I        @Y30LB12*/
         MVC   MSGNO(2,R4),ICG209I                                 0230
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0231
*       RETURN;                     /* RETURN TO S09DEV      @Y30LB12*/
@EL00008 DS    0H                                                  0232
@EF00008 DS    0H                                                  0232
@ER00008 LM    @14,@12,@SA00008                                    0232
         BR    @14                                                 0232
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0234
*     ;                             /*                       @Y30LB12*/
@RF00227 DS    0H                                                  0235
*   IF SCANLEN=6                    /* SET BY ICGDSS99       @Y30LB12*/
*       &SCANDATA(1:7)='3330-1='    /* MERLIN TYPE DEV       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLC   SCANLEN(2,R4),@CH00227                              0235
         BNE   @RF00235                                            0235
         L     @05,STARTCOL(,R4)                                   0235
         CLC   SCANDATA(7,@05),@CC00509                            0235
         BNE   @RF00235                                            0235
*     DO;                           /*                       @Y30LB12*/
*       KNOWN2='1'B;                /* RECOGNIZED PARM       @Y30LB12*/
         OI    KNOWN2,B'00100000'                                  0237
*       REALTYPE(DEVINDEX)=PHYSFMER;/* LOCAL WORK            @X50RSPC*/
         SLR   @05,@05                                             0238
         IC    @05,DEVINDEX                                        0238
         SLA   @05,2                                               0238
         LA    @01,REALTYPE-4(@05)                                 0238
         NI    0(@01),B'11111101'                                  0238
         OI    0(@01),B'00000100'                                  0238
*       CALL S09DEVS2;              /* FOR REAL OR SSID      @YM31093*/
         BAL   @14,S09DEVS2                                        0239
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0241
*     ;                             /*                       @Y30LB12*/
@RF00235 DS    0H                                                  0242
*   IF SCANLEN=7                    /* SET BY ICGDSS99       @Y30LB12*/
*       &SCANDATA(1:8)='3330-11='   /* ICEBERG TYPE          @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLC   SCANLEN(2,R4),@CH00135                              0242
         BNE   @RF00242                                            0242
         L     @05,STARTCOL(,R4)                                   0242
         CLC   SCANDATA(8,@05),@CC00511                            0242
         BNE   @RF00242                                            0242
*     DO;                           /*                       @Y30LB12*/
*       KNOWN2='1'B;                /* RECOGNIZED PARM       @Y30LB12*/
         OI    KNOWN2,B'00100000'                                  0244
*       REALTYPE(DEVINDEX)=PHYSFICE;/* LOCAL WORK            @X50RSPC*/
         SLR   @05,@05                                             0245
         IC    @05,DEVINDEX                                        0245
         SLA   @05,2                                               0245
         LA    @01,REALTYPE-4(@05)                                 0245
         NI    0(@01),B'11111011'                                  0245
         OI    0(@01),B'00000010'                                  0245
*       CALL S09DEVS2;              /* FOR REAL OR SSID      @YM31093*/
         BAL   @14,S09DEVS2                                        0246
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0248
*     ;                             /*                       @Y30LB12*/
@RF00242 DS    0H                                                  0249
*   IF SCANLEN=4                    /* SET BY ICGDSS99       @X50RSPC*/
*       &SCANDATA(1:5)='3350='      /* MADRID TYPE           @X50RSPC*/
*     THEN                          /*                       @X50RSPC*/
         CLC   SCANLEN(2,R4),@CH00070                              0249
         BNE   @RF00249                                            0249
         L     @05,STARTCOL(,R4)                                   0249
         CLC   SCANDATA(5,@05),@CC00512                            0249
         BNE   @RF00249                                            0249
*     DO;                           /*                       @X50RSPC*/
*       KNOWN2='1'B;                /* RECOGNIZED PARM       @X50RSPC*/
         OI    KNOWN2,B'00100000'                                  0251
*       REALTYPE(DEVINDEX)=PHYSFMAD;/* LOCAL WORK            @X50RSPC*/
         SLR   @15,@15                                             0252
         IC    @15,DEVINDEX                                        0252
         LR    @14,@15                                             0252
         SLA   @14,2                                               0252
         LA    @01,REALTYPE-4(@14)                                 0252
         OI    0(@01),B'00000110'                                  0252
*       IF SCANDATA(6:9)^='REAL'    /* 3350 REAL             @ZZZZZZZ*/
*         THEN                      /*                       @X50RSPC*/
         CLC   SCANDATA+5(4,@05),@CC00513                          0253
         BE    @RF00253                                            0253
*         DO;                       /*                       @ZZZZZZZ*/
*                                                                  0254
*           /*********************************************************/
*           /*                                                       */
*           /* ***********************************           @ZZZZZZZ*/
*           /* ICG229I FOR DEVX, USAGE MUST BE               @ZZZZZZZ*/
*           /* REAL                                          @ZZZZZZZ*/
*           /* ***********************************           @ZZZZZZZ*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0255
*           OUTBUF2(1:37)=ICGDS229; /*                       @ZZZZZZZ*/
         MVC   OUTBUF2(37,R4),ICGDS229                             0255
*           OUTBUF2(17)=PATTERN(DEVINDEX);/*                 @ZZZZZZZ*/
         LA    @05,PATTERN-1(@15)                                  0256
         MVC   OUTBUF2+16(1,R4),0(@05)                             0256
*           CALL PUTIT1;            /*                       @ZZZZZZZ*/
         BAL   @14,PUTIT1                                          0257
*         END;                      /*                       @ZZZZZZZ*/
*       CALL S09DEVS2;              /* REAL OR SSID          @X50RSPC*/
@RF00253 BAL   @14,S09DEVS2                                        0259
*     END;                          /*                       @X50RSPC*/
*   ELSE                                                           0261
*     ;                             /*                       @X50RSPC*/
@RF00249 DS    0H                                                  0262
*   IF KNOWN2='0'B                  /* NOT MOD1 OR MOD11     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    KNOWN2,B'00100000'                                  0262
         BNZ   @RF00262                                            0262
*     CALL UNKNOWN;                 /* FOR MSG ICG210I       @Y30LB12*/
         BAL   @14,UNKNOWN                                         0263
*   ELSE                                                           0264
*     ;                             /*                       @Y30LB12*/
@RF00262 DS    0H                                                  0265
*   END S09DEVS1;                   /*                       @Y30LB12*/
         B     @EL00008                                            0265
*                                                                  0266
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09DEVS2                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - SEARCH FOR VALUE 'REAL' OR 'SSID'.  CALL      @Y30LB12*/
*/*            S09DEVSS IF 'SSID' FOUND                      @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0266
*S09DEVS2:                                                         0266
*   PROCEDURE;                      /*                       @Y30LB12*/
S09DEVS2 STM   @14,@12,@SA00009                                    0266
*   KNOWN4='0'B;                    /* RESET FOUND FLAG      @YM32180*/
         NI    KNOWN4,B'11110111'                                  0267
*   CALL READS99;                   /* EXTRACT VALUE         @Y30LB12*/
*                                                                  0268
         BAL   @14,READS99                                         0268
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* IF THE SUB-PARAMETER IS REAL...                       @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0269
*   IF SCANDATA(1:4)='REAL'         /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0269
         CLC   SCANDATA(4,@05),@CC00513                            0269
         BNE   @RF00269                                            0269
*     DO;                           /*                       @Y30LB12*/
*       KNOWN4='1'B;                /* RECOGNIZED PARM       @YM32180*/
         OI    KNOWN4,B'00001000'                                  0271
*       REALSPEC(DEVINDEX)='1'B;    /* IN LOCAL WORK         @Y30LB12*/
         SLR   @05,@05                                             0272
         IC    @05,DEVINDEX                                        0272
         SLA   @05,2                                               0272
         LA    @01,REALSPEC-4(@05)                                 0272
         OI    0(@01),B'01000000'                                  0272
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0274
*     ;                             /*                       @Y30LB12*/
*                                                                  0274
@RF00269 DS    0H                                                  0275
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* IF THE SUB-PARAMETER IS SSID...                       @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0275
*   IF SCANDATA(1:5)='SSID='        /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0275
         CLC   SCANDATA(5,@05),@CC00518                            0275
         BNE   @RF00275                                            0275
*     DO;                           /*                       @Y30LB12*/
*       KNOWN4='1'B;                /* RECOGNIZED PARM       @YM32180*/
*       KNOWN3='1'B;                /* FOR CALLED PROC       @Y30LB12*/
         OI    KNOWN4,B'00011000'                                  0278
*       SSIDSPEC(DEVINDEX)='1'B;    /*                       @Y30LB12*/
         SLR   @05,@05                                             0279
         IC    @05,DEVINDEX                                        0279
         SLA   @05,2                                               0279
         LA    @01,SSIDSPEC-4(@05)                                 0279
         OI    0(@01),B'00100000'                                  0279
*       CALL S09DEVSS;              /* TO GET SUB-PARMS      @Y30LB12*/
         BAL   @14,S09DEVSS                                        0280
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0282
*     ;                             /*                       @Y30LB12*/
@RF00275 DS    0H                                                  0283
*   IF KNOWN4='0'B                  /* KEYWORD UNKNOWN       @YM32180*/
*     THEN                          /*                       @Y30LB12*/
         TM    KNOWN4,B'00001000'                                  0283
         BNZ   @RF00283                                            0283
*     IF PARMBIT='1'B               /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         TM    PARMBIT(R4),B'00100000'                             0284
         BNO   @RF00284                                            0284
*       DO;                         /*                       @Y30LB12*/
*                                                                  0285
*         /***********************************************************/
*         /*                                                         */
*         /* *************************************           @Y30LB12*/
*         /* ICG212I UNDEFINED PARAMETER FOUND               @Y30LB12*/
*         /* *************************************           @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0286
*         MSGNO=ICG212I;            /*                       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG212I                                 0286
*         CALL PUTIT2;              /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0287
*       END;                        /*                       @Y30LB12*/
*     ELSE                          /*                       @Y30LB12*/
*       IF KEYBIT='1'B              /*                       @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         B     @RC00284                                            0289
@RF00284 TM    KEYBIT(R4),B'01000000'                              0289
         BNO   @RF00289                                            0289
*         CALL UNKNOWN;             /*                       @Y30LB12*/
         BAL   @14,UNKNOWN                                         0290
*       ELSE                                                       0291
*         ;                         /*                       @Y30LB12*/
@RF00289 DS    0H                                                  0292
*   ELSE                                                           0292
*     ;                             /*                       @Y30LB12*/
@RF00283 DS    0H                                                  0293
*   END S09DEVS2;                   /* RET TO S09DEVS1       @Y30LB12*/
@EL00009 DS    0H                                                  0293
@EF00009 DS    0H                                                  0293
@ER00009 LM    @14,@12,@SA00009                                    0293
         BR    @14                                                 0293
*                                                                  0294
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09DEVSS                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - WHEN THE DEVICE IS TO BE USED FOR STAGING,    @Y30LB12*/
*/*            ITS LOGICAL ADDRESS (SSID) MUST ALSO BE       @Y30LB12*/
*/*            KNOWN.  SSID CONSISTS OF STAGING DASD GROUP   @Y30LB12*/
*/*            PLUS LOGICAL DEVICE WITHIN THE SDG.  IN       @Y30LB12*/
*/*            ADDITION, STAGING DASD GROUP ATTACHES TO A    @Y30LB12*/
*/*            'LOGICAL CONTROLLER' OR 'LOGICAL A-BOX' AND   @Y30LB12*/
*/*            THE TWO LOGICAL CONTROLLERS FOR A GIVEN PAIR  @YD00113*/
*/*            OF SDGS THAT ATTACH TO THE SAME STAGING       @Y30LB12*/
*/*            ADAPTER MUST BE DIFFERENT.  THIS PROCEDURE    @Y30LB12*/
*/*            LOOKS FOR THE THREE PARAMETERS REQUIRED       @Y30LB12*/
*/*            TO LOGICALLY IDENTIFY A DEVICE WITHIN THE     @Y30LB12*/
*/*            SUBSYSTEM AND CALLS THE PROPER PROCEDURES TO  @Y30LB12*/
*/*            CHECK THE VALUES SPECIFIED.                   @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0294
*S09DEVSS:                                                         0294
*   PROCEDURE;                      /*                       @Y30LB12*/
S09DEVSS STM   @14,@12,@SA00010                                    0294
*   DO WHILE(KNOWN3='1'B);          /* CONTROL LOOP          @Y30LB12*/
         B     @DE00295                                            0295
@DL00295 DS    0H                                                  0296
*     KNOWN3='0'B;                  /* ZERO CONTROL FLAG     @Y30LB12*/
         NI    KNOWN3,B'11101111'                                  0296
*     SAVENCOL=NEXTCOL;             /* SAVE FOR RESTART      @Y30LB12*/
         MVC   SAVENCOL(4,R4),NEXTCOL(R4)                          0297
*     SAVESCOL=STARTCOL;            /* SAVE FOR RESTART      @Y30LB12*/
         MVC   SAVESCOL(4,R4),STARTCOL(R4)                         0298
*     CALL READS99;                 /* EXTRACT PARAMETER     @Y30LB12*/
*                                                                  0299
         BAL   @14,READS99                                         0299
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* IF SUB-PARAMETER IS LUAX, SET FLAG 'KNOWN3'         @YD00113*/
*     /* ON AND CALL 'S09LUA' TO GET SUFFIX DATA             @YD00113*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0300
*     IF SCANDATA(1:3)='LUA'        /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0300
         CLC   SCANDATA(3,@05),@CC00523                            0300
         BNE   @RF00300                                            0300
*       DO;                         /*                       @Y30LB12*/
*         KNOWN3='1'B;              /* RECOGNIZED PARM       @Y30LB12*/
         OI    KNOWN3,B'00010000'                                  0302
*         CALL S09LUA;              /* TO GET SUFFIX         @Y30LB12*/
         BAL   @14,S09LUA                                          0303
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0305
*       ;                           /*                       @Y30LB12*/
*                                                                  0305
@RF00300 DS    0H                                                  0306
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* IF SUB-PARAMETER IS LCUX, SET FLAG 'KNOWN3'         @YD00113*/
*     /* ON AND CALL 'S09LCU' TO GET SUFFIX DATA             @YD00113*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0306
*     IF SCANDATA(1:3)='LCU'        /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0306
         CLC   SCANDATA(3,@05),@CC00525                            0306
         BNE   @RF00306                                            0306
*       DO;                         /*                       @Y30LB12*/
*         KNOWN3='1'B;              /* RECOGNIZED PARM       @Y30LB12*/
         OI    KNOWN3,B'00010000'                                  0308
*         CALL S09LCU;              /* TO GET SUFFIX         @Y30LB12*/
         BAL   @14,S09LCU                                          0309
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0311
*       ;                           /*                       @Y30LB12*/
*                                                                  0311
@RF00306 DS    0H                                                  0312
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* IF KEYWORD IS SDG, SET FLAG 'KNOWN3' ON AND         @YD00113*/
*     /* CALL 'S09RSG' TO GET SUFFIX DATA                    @YD00113*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0312
*     IF SCANDATA(1:3)='SDG'        /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0312
         CLC   SCANDATA(3,@05),@CC00527                            0312
         BNE   @RF00312                                            0312
*       DO;                         /*                       @Y30LB12*/
*         KNOWN3='1'B;              /* RECOGNIZED PARM       @Y30LB12*/
         OI    KNOWN3,B'00010000'                                  0314
*         CALL S09RSG;              /* TO GET SUFFIX         @Y30LB12*/
         BAL   @14,S09RSG                                          0315
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0317
*       ;                           /*                       @Y30LB12*/
*                                                                  0317
@RF00312 DS    0H                                                  0318
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* IF THE KEYWORD SCANNED IS NOT ANY OF THE ABOVE      @Y30LB12*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0318
*     IF KNOWN3='0'B                /*                       @Y30LB12*/
*         &KEYBIT='1'B              /* ITEM A KEYWORD        @YM32168*/
*       THEN                        /*                       @Y30LB12*/
         TM    KNOWN3,B'00010000'                                  0318
         BNZ   @RF00318                                            0318
         TM    KEYBIT(R4),B'01000000'                              0318
         BNO   @RF00318                                            0318
*       DO;                         /*                       @Y30LB12*/
*         NEXTCOL=SAVENCOL;         /* RESTORE, RESCAN       @Y30LB12*/
         MVC   NEXTCOL(4,R4),SAVENCOL(R4)                          0320
*         STARTCOL=SAVESCOL;        /* RESTORE, RESCAN       @Y30LB12*/
         MVC   STARTCOL(4,R4),SAVESCOL(R4)                         0321
*         RETURN;                   /* RETURN TO S09DEVS2    @YM32168*/
@EL00010 DS    0H                                                  0322
@EF00010 DS    0H                                                  0322
@ER00010 LM    @14,@12,@SA00010                                    0322
         BR    @14                                                 0322
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0324
*       ;                           /*                       @Y30LB12*/
@RF00318 DS    0H                                                  0325
*     IF LASTPARM='1'B              /* NO MORE DATA          @YM32168*/
*       THEN                        /*                       @YM32168*/
         TM    LASTPARM(R4),B'00001000'                            0325
         BO    @RT00325                                            0325
*       RETURN;                     /* RETURN TO S09DEVS2    @YM32168*/
*     IF KNOWN3='0'B                /*                       @YM32168*/
*         &PARMBIT='1'B             /* ITEM A PARAMETER      @YM32168*/
*       THEN                        /*                       @YM32168*/
         TM    KNOWN3,B'00010000'                                  0327
         BNZ   @RF00327                                            0327
         TM    PARMBIT(R4),B'00100000'                             0327
         BNO   @RF00327                                            0327
*       DO;                         /*                       @YM32168*/
*         KNOWN3='1'B;              /* TO KEEP SCANNING      @YM32168*/
*                                                                  0329
         OI    KNOWN3,B'00010000'                                  0329
*         /***********************************************************/
*         /*                                                         */
*         /* *****************************************       @YM32168*/
*         /* ICG212I UNDEFINED PARAMETER FOUND               @YM32168*/
*         /* *****************************************       @YM32168*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0330
*         MSGNO=ICG212I;            /*                       @YM32168*/
         MVC   MSGNO(2,R4),ICG212I                                 0330
*         CALL PUTIT2;              /* TO MESSAGE WRITER     @YM32168*/
         BAL   @14,PUTIT2                                          0331
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0333
*       ;                           /*                       @Y30LB12*/
@RF00327 DS    0H                                                  0334
*   END;                            /* END OF 'DO WHILE'     @Y30LB12*/
@DE00295 TM    KNOWN3,B'00010000'                                  0334
         BO    @DL00295                                            0334
*   END S09DEVSS;                   /* RET. TO S09DEVS1      @Y30LB12*/
         B     @EL00010                                            0335
*                                                                  0336
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09RSG                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - EXTRACT THE VALUE SPECIFIED FOR SDG FROM THE  @Y30LB12*/
*/*            PARAMETER AND CONVERT THE DECIMAL NUMBER 0-27 @Y30LB12*/
*/*            TO A BINARY VALUE 01-1D AND STORE THE RESULT  @Y30LB12*/
*/*            WORKRSG FOR THE PHYSICAL DEVICE. (ACTUAL      @Y30LB12*/
*/*            STORE IS DONE IN THE PROCEDURE CONVRSG.)      @Y30LB12*/
*/*            WORKRSG, AT THIS POINT, IS ONE GREATER THAN   @Y30LB12*/
*/*            THE ACTUAL RSG, AND CAN BE USED DIRECTLY      @Y30LB12*/
*/*            AS THE ONLY INDEX INTO BUILDRSG AND AS THE    @Y30LB12*/
*/*            FIRST INDEX INTO PABTABLE.  THE VALUE THAT    @Y30LB12*/
*/*            IS STORED IN SPNRSGNO WILL BE ONE LESS THAN   @Y30LB12*/
*/*            THE CURRENT VALUE, AND WILL REPRESENT THE     @Y30LB12*/
*/*            INPUT VALUE (0-27) IN BINARY (00-1C).         @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0336
*S09RSG:                                                           0336
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0336
S09RSG   STM   @14,@12,@SA00011                                    0336
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* INITIALIZE FIELD TO SAVE THE SDG NUMBER THEN          @YD00113*/
*   /* TEST FOR DUPLICATE KEYWORD 'SDG' FOR DEVX.            @YD00113*/
*   /* PRINT ERROR MESSAGE ICG219I FOR DUPLICATE.            @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0337
*   HOLDRSG='0000'X;                /* RSG NUMBER            @Y30LB12*/
         MVC   HOLDRSG(2),@CB00462                                 0337
*   IF WRSGSPEC(DEVINDEX)^='1'B     /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         SLR   @05,@05                                             0338
         IC    @05,DEVINDEX                                        0338
         SLA   @05,2                                               0338
         LA    @01,WRSGSPEC-4(@05)                                 0338
         TM    0(@01),B'10000000'                                  0338
         BO    @RF00338                                            0338
*     WRSGSPEC(DEVINDEX)='1'B;      /*                       @Y30LB12*/
         LA    @01,WRSGSPEC-4(@05)                                 0339
         OI    0(@01),B'10000000'                                  0339
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0340
         B     @RC00338                                            0340
@RF00338 DS    0H                                                  0341
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG219I DUPLICATE KEYWORD SDG FOR DEVX            @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0341
*       OUTBUF2(1:27)=ICGDS219;     /*                       @Y30LB12*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0341
*       OUTBUF2(28:38)='SDG FOR DEV';/*                      @Y30LB12*/
         MVC   OUTBUF2+27(11,R4),@CC00533                          0342
*       OUTBUF2(39)=PATTERN(DEVINDEX);/*                     @Y30LB12*/
         SLR   @05,@05                                             0343
         IC    @05,DEVINDEX                                        0343
         LA    @01,PATTERN-1(@05)                                  0343
         MVC   OUTBUF2+38(1,R4),0(@01)                             0343
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0344
*       RETURN;                     /* RET. TO S09DEVSS      @Y30LB12*/
@EL00011 DS    0H                                                  0345
@EF00011 DS    0H                                                  0345
@ER00011 LM    @14,@12,@SA00011                                    0345
         BR    @14                                                 0345
*     END;                          /*                       @Y30LB12*/
*                                                                  0346
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* TEST LENGTH OF DATA SCANNED. IF LENGTH IS 4,          @YD00113*/
*   /* SET UP FIRST BYTE OF 'HOLDRSG' TO 'F0'X, THEN         @YD00113*/
*   /* MOVE IN SECOND BYTE FROM THE DATA SCANNED.            @YD00113*/
*   /* IF LENGTH IS 5, MOVE BOTH BYTES INTO 'HOLDRSG'        @YD00113*/
*   /* FROM THE DATA SCANNED. IF SCANNED LENGTH IS           @YD00113*/
*   /* NEITHER 4 NOR 5, PRINT ERROR MESSAGE ICG220I.         @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0347
*   IF SCANLEN=4                    /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00338 CLC   SCANLEN(2,R4),@CH00070                              0347
         BNE   @RF00347                                            0347
*     DO;                           /*                       @Y30LB12*/
*       HOLDRSG(1)='F0'X;           /* SET UP FIRST BYTE     @Y30LB12*/
         MVI   HOLDRSG,X'F0'                                       0349
*       HOLDRSG(2)=SCANDATA(4);     /* MOVE 2ND BYTE         @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0350
         MVC   HOLDRSG+1(1),SCANDATA+3(@05)                        0350
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /*                       @Y30LB12*/
*     IF SCANLEN=5                  /* SET BY ICGDSS99       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         B     @RC00347                                            0352
@RF00347 CLC   SCANLEN(2,R4),@CH00121                              0352
         BNE   @RF00352                                            0352
*       HOLDRSG(1:2)=SCANDATA(4:5); /* MOVE 2                @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0353
         MVC   HOLDRSG(2),SCANDATA+3(@05)                          0353
*     ELSE                          /*                       @Y30LB12*/
*       DO;                         /*                       @Y30LB12*/
*                                                                  0354
         B     @RC00352                                            0354
@RF00352 DS    0H                                                  0355
*         /***********************************************************/
*         /*                                                         */
*         /* *************************************           @Y30LB12*/
*         /* ICG220I INVALID PARAMETER LENGTH,               @Y30LB12*/
*         /* KEYWORD IS SDG FOR DEVX                         @Y30LB12*/
*         /* *************************************           @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0355
*         OUTBUF2(1:46)=ICGDS220;   /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0355
*         OUTBUF2(47:57)='SDG FOR DEV';/*                    @Y30LB12*/
         MVC   OUTBUF2+46(11,R4),@CC00533                          0356
*         OUTBUF2(58)=PATTERN(DEVINDEX);/*                   @Y30LB12*/
         SLR   @05,@05                                             0357
         IC    @05,DEVINDEX                                        0357
         LA    @01,PATTERN-1(@05)                                  0357
         MVC   OUTBUF2+57(1,R4),0(@01)                             0357
*         CALL PUTIT1;              /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0358
*         RETURN;                   /* RET. TO S09DEVSS      @Y30LB12*/
         B     @EL00011                                            0359
*       END;                        /*                       @Y30LB12*/
*   CALL CONVRSG;                   /* CONVERT AND STORE     @Y30LB12*/
@RC00352 DS    0H                                                  0361
@RC00347 BAL   @14,CONVRSG                                         0361
*   END S09RSG;                     /* RET. TO S09DEVSS      @Y30LB12*/
         B     @EL00011                                            0362
*                                                                  0363
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CONVRSG                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - COMPARE THE XX PORTION OF SDGXX AS PASSED TO  @Y30LB12*/
*/*            THIS PROCEDURE IN HOLDRSG TO THE VALID VALUES @Y30LB12*/
*/*            FOR RSG AS DEFINED IN THE TABLE LOKUPRSG.  IF @Y30LB12*/
*/*            A MATCH EXISTS, WORKRSG FOR THE APPROPRIATE   @Y30LB12*/
*/*            DEVICE IS SET TO THE POSITION OF THE MATCH IN @Y30LB12*/
*/*            IN THE TABLE IN BINARY, WHICH IS ONE GREATER  @Y30LB12*/
*/*            THAN THE DECIMAL NUMBER PASSED.  IF NO MATCH, @Y30LB12*/
*/*            WRITE MESSAGE ICG223I.                        @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0363
*CONVRSG:                                                          0363
*   PROCEDURE;                      /*                       @Y30LB12*/
CONVRSG  STM   @14,@12,@SA00012                                    0363
*   DO I=1 TO 28;                   /* VALID VALUE RANGE     @Y30LB12*/
         LA    I,1                                                 0364
@DL00364 DS    0H                                                  0365
*     IF HOLDRSG=LOKUPRSG(I)        /* MATCHING VALUE        @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @05,I                                               0365
         ALR   @05,@05                                             0365
         LA    @03,LOKUPRSG-2(@05)                                 0365
         CLC   HOLDRSG(2),0(@03)                                   0365
         BNE   @RF00365                                            0365
*       DO;                         /*                       @Y30LB12*/
*         WORKRSG(DEVINDEX)=I;      /* SDGXX+1, BINARY       @Y30LB12*/
         SLR   @05,@05                                             0367
         IC    @05,DEVINDEX                                        0367
         SLA   @05,2                                               0367
         STC   I,WORKRSG-4(@05)                                    0367
*         RETURN;                   /* RETURN TO S09RSG      @Y30LB12*/
@EL00012 DS    0H                                                  0368
@EF00012 DS    0H                                                  0368
@ER00012 LM    @14,@12,@SA00012                                    0368
         BR    @14                                                 0368
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0370
*       ;                           /*                       @Y30LB12*/
@RF00365 DS    0H                                                  0371
*   END;                            /* DID 28, NO MATCH      @Y30LB12*/
*                                                                  0371
         AH    I,@CH00044                                          0371
         CH    I,@CH00343                                          0371
         BNH   @DL00364                                            0371
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* ICG223I VALUE ERROR FOR SDG FOR DEVX                  @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0372
*   OUTBUF2(1:25)=ICGDS223;         /*                       @Y30LB12*/
         MVC   OUTBUF2(25,R4),ICGDS223                             0372
*   OUTBUF2(26:36)='SDG FOR DEV';   /*                       @Y30LB12*/
         MVC   OUTBUF2+25(11,R4),@CC00533                          0373
*   OUTBUF2(37)=PATTERN(DEVINDEX);  /*                       @Y30LB12*/
         SLR   @05,@05                                             0374
         IC    @05,DEVINDEX                                        0374
         LA    @01,PATTERN-1(@05)                                  0374
         MVC   OUTBUF2+36(1,R4),0(@01)                             0374
*   CALL PUTIT1;                    /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0375
*   END CONVRSG;                    /* RETURN TO S09RSG      @Y30LB12*/
         B     @EL00012                                            0376
*                                                                  0377
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09LCU                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - EXTRACT THE LOGICAL CONTROLLER (OR LOGICAL    @Y30LB12*/
*/*            A-BOX) FROM THE 'LCUX' PARAMETER.  THE        @Y30LB12*/
*/*            LOGICAL CONTROLLER MUST BE EITHER 0 OR 1.     @Y30LB12*/
*/*            THE FUNCTION OF LOCICAL CONTROLLER IS TO      @Y30LB12*/
*/*            DISTINGUISH IN THE STAGING ADAPTER BETWEEN    @Y30LB12*/
*/*            THE TWO STAGING DASD GROUPS.                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0377
*S09LCU:                                                           0377
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0377
S09LCU   STM   @14,@12,@SA00013                                    0377
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* TEST FOR DUPLICATE KEYWORD 'LCU' FOR DEVX. IF         @YD00113*/
*   /* DUPLICATED, PRINT ERROR MESSAGE ICG219I.              @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0378
*   IF ABOXSPEC(DEVINDEX)^='1'B     /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         SLR   @05,@05                                             0378
         IC    @05,DEVINDEX                                        0378
         SLA   @05,2                                               0378
         LA    @01,ABOXSPEC-4(@05)                                 0378
         TM    0(@01),B'00010000'                                  0378
         BO    @RF00378                                            0378
*     ABOXSPEC(DEVINDEX)='1'B;      /*                       @Y30LB12*/
         LA    @01,ABOXSPEC-4(@05)                                 0379
         OI    0(@01),B'00010000'                                  0379
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0380
         B     @RC00378                                            0380
@RF00378 DS    0H                                                  0381
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG219I DUPLICATE KEYWORD LCU FOR                 @Y30LB12*/
*       /* FOR DEVX                                          @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0381
*       OUTBUF2(1:27)=ICGDS219;     /*                       @Y30LB12*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0381
*       OUTBUF2(28:38)='LCU FOR DEV';/*                      @Y30LB12*/
         MVC   OUTBUF2+27(11,R4),@CC00545                          0382
*       OUTBUF2(39)=PATTERN(DEVINDEX);/*                     @Y30LB12*/
         SLR   @05,@05                                             0383
         IC    @05,DEVINDEX                                        0383
         LA    @01,PATTERN-1(@05)                                  0383
         MVC   OUTBUF2+38(1,R4),0(@01)                             0383
*       CALL PUTIT1;                /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0384
*       RETURN;                     /*                       @Y30LB12*/
@EL00013 DS    0H                                                  0385
@EF00013 DS    0H                                                  0385
@ER00013 LM    @14,@12,@SA00013                                    0385
         BR    @14                                                 0385
*     END;                          /*                       @Y30LB12*/
*                                                                  0386
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* TEST TO ASSURE LENGTH OF DATA SCANNED IS 4.           @YD00113*/
*   /* IF LENGTH IS ANY VALUE OTHER THAN 4, PRINT            @YD00113*/
*   /* ERROR MESSAGE ICG220I.                                @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0387
*   IF SCANLEN^=4                   /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00378 CLC   SCANLEN(2,R4),@CH00070                              0387
         BE    @RF00387                                            0387
*     DO;                           /*                       @Y30LB12*/
*                                                                  0388
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG220I INVALID PARAMETER LENGTH,                 @Y30LB12*/
*       /* KEYWORD IS LCU FOR DEVX                           @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0389
*       OUTBUF2(1:46)=ICGDS220;     /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0389
*       OUTBUF2(47:57)='LCU FOR DEV';/*                      @Y30LB12*/
         MVC   OUTBUF2+46(11,R4),@CC00545                          0390
*       OUTBUF2(58)=PATTERN(DEVINDEX);/*                     @Y30LB12*/
         SLR   @05,@05                                             0391
         IC    @05,DEVINDEX                                        0391
         LA    @01,PATTERN-1(@05)                                  0391
         MVC   OUTBUF2+57(1,R4),0(@01)                             0391
*       CALL PUTIT1;                /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0392
*       RETURN;                     /* RET. TO S09DEVSS      @Y30LB12*/
         B     @EL00013                                            0393
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0395
*     ;                             /*                       @Y30LB12*/
*                                                                  0395
@RF00387 DS    0H                                                  0396
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* TEST PARAMETER VALUE FOR LCU TO BE EITHER             @YD00113*/
*   /* 1 OR 0. IF VALUE IS 1, SET FLAG 'ABOX1'               @YD00113*/
*   /* TO '1'. IF VALUE IS NEITHER 0 NOR 1, PRINT            @YD00113*/
*   /* ERROR MESSAGE ICG223I.                                @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0396
*   IF SCANDATA(4)='1'              /* IF PARM LCU1          @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0396
         CLI   SCANDATA+3(@05),C'1'                                0396
         BNE   @RF00396                                            0396
*     ABOX1(DEVINDEX)='1'B;         /* SET EXTRA FLAG        @Y30LB12*/
         SLR   @05,@05                                             0397
         IC    @05,DEVINDEX                                        0397
         SLA   @05,2                                               0397
         LA    @01,ABOX1-4(@05)                                    0397
         OI    0(@01),B'00001000'                                  0397
*   ELSE                            /*                       @Y30LB12*/
*     IF SCANDATA(4)^='0'           /* IF PARM NOT LCU0      @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         B     @RC00396                                            0398
@RF00396 L     @05,STARTCOL(,R4)                                   0398
         CLI   SCANDATA+3(@05),C'0'                                0398
         BE    @RF00398                                            0398
*       DO;                         /*                       @Y30LB12*/
*                                                                  0399
*         /***********************************************************/
*         /*                                                         */
*         /* *************************************           @Y30LB12*/
*         /* ICG223I VALUE ERROR FOR LCU FOR DEVX            @Y30LB12*/
*         /* *************************************           @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0400
*         OUTBUF2(1:25)=ICGDS223;   /*                       @Y30LB12*/
         MVC   OUTBUF2(25,R4),ICGDS223                             0400
*         OUTBUF2(26:36)='LCU FOR DEV';/*                    @Y30LB12*/
         MVC   OUTBUF2+25(11,R4),@CC00545                          0401
*         OUTBUF2(37)=PATTERN(DEVINDEX);/*                   @Y30LB12*/
         SLR   @05,@05                                             0402
         IC    @05,DEVINDEX                                        0402
         LA    @01,PATTERN-1(@05)                                  0402
         MVC   OUTBUF2+36(1,R4),0(@01)                             0402
*         CALL PUTIT1;              /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0403
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0405
*       ;                           /*                       @Y30LB12*/
@RF00398 DS    0H                                                  0406
*   END S09LCU;                     /* RET. TO S09DEVSS      @Y30LB12*/
         B     @EL00013                                            0406
*                                                                  0407
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09LUA                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - FOR SPINDLES THAT ARE USED FOR STAGING,       @Y30LB12*/
*/*            EXTRACT THE LOGICAL UNIT (OR DEVICE) ADDRESS. @Y30LB12*/
*/*            THE LOGICAL UNIT ADDRESS DOES NOT HAVE TO     @Y30LB12*/
*/*            CORRESPOND TO THE PHYSICAL DEVICE ADDRESS.    @Y30LB12*/
*/*            THE LOGICAL DEVICE ADDRESS BECOMES THE LOW-   @Y30LB12*/
*/*            THREE BITS OF THE SSID.                       @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            LOGICAL UNIT ADDRESS IS A DIGIT IN THE RANGE  @Y30LB12*/
*/*            0-7.  THE VALUE IS STORED IN WKLOGDEV AS A    @Y30LB12*/
*/*            BINARY VALUE IN THE RANGE 0 TO 7.  WHEN 1     @Y30LB12*/
*/*            IS ADDED TO IT, IT IS USED AS THE SECOND      @Y30LB12*/
*/*            INDEX INTO PABTABLE.  THE VALUE STORED IN     @Y30LB12*/
*/*            LGDEVICE IN PHYSTYPE IS THREE BITS IN THE     @Y30LB12*/
*/*            RANGE 000-111.                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            IN THIS PROCEDURE, DECINDEX IS THE LOGICAL    @Y30LB12*/
*/*            DEVICE INDEX AND DEVINDEX IS THE PHYSICAL     @Y30LB12*/
*/*            DEVICE INDEX.                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0407
*S09LUA:                                                           0407
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0407
S09LUA   STM   @14,@12,@SA00014                                    0407
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* TEST FOR DUPLICATE KEYWORD 'LUA' FOR DEVX. IF         @YD00113*/
*   /* DUPLICATED, PRINT ERROR MESSAGE ICG219I.              @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0408
*   IF LDEVSPEC(DEVINDEX)^='1'B     /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         SLR   @05,@05                                             0408
         IC    @05,DEVINDEX                                        0408
         SLA   @05,2                                               0408
         LA    @01,LDEVSPEC-4(@05)                                 0408
         TM    0(@01),B'00000001'                                  0408
         BO    @RF00408                                            0408
*     LDEVSPEC(DEVINDEX)='1'B;      /*                       @Y30LB12*/
         LA    @01,LDEVSPEC-4(@05)                                 0409
         OI    0(@01),B'00000001'                                  0409
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0410
         B     @RC00408                                            0410
@RF00408 DS    0H                                                  0411
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG219I DUPLICATE KEYWORD LUA FOR DEVX            @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0411
*       OUTBUF2(1:27)=ICGDS219;     /*                       @Y30LB12*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0411
*       OUTBUF2(28:39)='LUA FOR DEV';/*                      @Y30LB12*/
         MVI   OUTBUF2+38(R4),C' '                                 0412
         MVC   OUTBUF2+27(11,R4),@CC00550                          0412
*       OUTBUF2(40)=PATTERN(DEVINDEX);/*                     @Y30LB12*/
         SLR   @05,@05                                             0413
         IC    @05,DEVINDEX                                        0413
         LA    @01,PATTERN-1(@05)                                  0413
         MVC   OUTBUF2+39(1,R4),0(@01)                             0413
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0414
*       RETURN;                     /* RET. TO S09DEVSS      @Y30LB12*/
@EL00014 DS    0H                                                  0415
@EF00014 DS    0H                                                  0415
@ER00014 LM    @14,@12,@SA00014                                    0415
         BR    @14                                                 0415
*     END;                          /*                       @Y30LB12*/
*                                                                  0416
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* TEST TO ASSURE LENGTH OF DATA SCANNED IS 4.           @YD00113*/
*   /* IF LENGTH IS ANY VALUE OTHER THAN 4, PRINT            @YD00113*/
*   /* ERROR MESSAGE ICG220I.                                @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0417
*   IF SCANLEN^=4                   /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00408 CLC   SCANLEN(2,R4),@CH00070                              0417
         BE    @RF00417                                            0417
*     DO;                           /*                       @Y30LB12*/
*                                                                  0418
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG220I INVALID PARAMETER LENGTH,                 @Y30LB12*/
*       /* KEYWORD IS LUA FOR DEVX                           @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0419
*       OUTBUF2(1:46)=ICGDS220;     /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0419
*       OUTBUF2(47:57)='LUA FOR DEV';/*                      @Y30LB12*/
         MVC   OUTBUF2+46(11,R4),@CC00550                          0420
*       OUTBUF2(58)=PATTERN(DEVINDEX);/*                     @Y30LB12*/
         SLR   @05,@05                                             0421
         IC    @05,DEVINDEX                                        0421
         LA    @01,PATTERN-1(@05)                                  0421
         MVC   OUTBUF2+57(1,R4),0(@01)                             0421
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0422
*       RETURN;                     /* RET. TO S09DEVSS      @Y30LB12*/
         B     @EL00014                                            0423
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0425
*     ;                             /*                       @Y30LB12*/
*                                                                  0425
@RF00417 DS    0H                                                  0426
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* SAVE SCANNED DATA (4 BYTES) AS DATA FOR               @YD00113*/
*   /* A POSSIBLE ERROR MESSAGE. SAVE LOW ORDER              @YD00113*/
*   /* BYTE OF DATA AND CALL 'CONVDEC' PROCEDURE             @YD00113*/
*   /* TO CONVERT THAT BYTE TO A BINARY VALUE, ONE           @YD00113*/
*   /* HIGHER THAN THE ORIGINAL VALUE. IF THE VALUE          @YD00113*/
*   /* DID NOT GET CONVERTED, RETURN TO CALLING              @YD00113*/
*   /* ROUTINE. OTHERWISE, SAVE LOGICAL DEVICE ADDR          @YD00113*/
*   /* IN THE TABLE.                                         @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0426
*   PLUGIN(1:4)=SCANDATA(1:4);      /* FOR MESSAGE           @Y30LB12*/
         L     @05,STARTCOL(,R4)                                   0426
         MVC   PLUGIN(4),SCANDATA(@05)                             0426
*   WORKDEV=SCANDATA(4);            /* VALUE TO CONVERT      @Y30LB12*/
         MVC   WORKDEV(1),SCANDATA+3(@05)                          0427
*   CALL CONVDEC;                   /* CONV. TO BINARY+1     @Y30LB12*/
         BAL   @14,CONVDEC                                         0428
*   IF DECINDEX=0                   /* CONVERT FAILED        @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLI   DECINDEX,0                                          0429
         BE    @RT00429                                            0429
*     RETURN;                       /* MSG ALREADY DONE      @Y30LB12*/
*   ELSE                                                           0431
*     ;                             /*                       @Y30LB12*/
*   WKLOGDEV(DEVINDEX)=WORKDEV;     /* LOGICAL DEVICE        @Y30LB12*/
         SLR   @05,@05                                             0432
         IC    @05,DEVINDEX                                        0432
         SLA   @05,2                                               0432
         SLR   @15,@15                                             0432
         IC    @15,WORKDEV                                         0432
         STC   @15,WKLOGDEV-4(@05)                                 0432
*   END S09LUA;                     /* RET. TO S09DEVSS      @Y30LB12*/
         B     @EL00014                                            0433
*                                                                  0434
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - UNKNOWN                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - IF THE KEYWORD IS NOT 'SA', 'CUA' OR 'DEVX',  @Y30LB12*/
*/*            WRITE ERROR MESSAGE ICG210I UNDEFINED         @Y30LB12*/
*/*            KEYWORD FOUND, AND DO READ TO POSITION AT     @Y30LB12*/
*/*            THE NEXT KEYWORD.                             @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0434
*UNKNOWN:                                                          0434
*   PROCEDURE;                      /*                       @Y30LB12*/
UNKNOWN  STM   @14,@12,@SA00015                                    0434
*   MSGNO=ICG210I;                  /* ID FOR ICGDS210       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG210I                                 0435
*   CALL PUTIT2;                    /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0436
*   CALL READS99;                   /* TO DO DUMMY READ      @Y30LB12*/
         BAL   @14,READS99                                         0437
*   END UNKNOWN;                    /* RETURN TO S09SCAN     @Y30LB12*/
@EL00015 DS    0H                                                  0438
@EF00015 DS    0H                                                  0438
@ER00015 LM    @14,@12,@SA00015                                    0438
         BR    @14                                                 0438
*                                                                  0439
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CONVDEC                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - THIS PROCEDURE RECEIVES AS INPUT THE          @Y30LB12*/
*/*            CHARACTER REPRESENTATION OF A SINGLE          @Y30LB12*/
*/*            DECIMAL DIGIT IN 'WORKDEV'.  IF THE           @Y30LB12*/
*/*            CHARACTER REPRESENTS A VALID DECIMAL          @Y30LB12*/
*/*            DIGIT IN THE RANGE 0-7, IT IS CONVERTED       @Y30LB12*/
*/*            TO BINARY IN WORKDEV, AND DECINDEX IS SET     @Y30LB12*/
*/*            TO WORKDEV + 1.  OTHERWISE MESSAGE            @Y30LB12*/
*/*            ICGDS223 IS WRITTEN.                          @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0439
*CONVDEC:                                                          0439
*   PROCEDURE;                      /*                       @Y30LB12*/
CONVDEC  STM   @14,@12,@SA00016                                    0439
*   DECINDEX=0;                     /* INITIALIZE TO 0       @Y30LB12*/
         MVI   DECINDEX,X'00'                                      0440
*   DO I=1 TO 8;                    /* 8 POSSIBILITIES       @Y30LB12*/
         LA    I,1                                                 0441
@DL00441 DS    0H                                                  0442
*     IF WORKDEV=PATTERN(I)         /* IF MATCH TO CHAR      @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         SLR   @05,@05                                             0442
         IC    @05,WORKDEV                                         0442
         LA    @03,PATTERN-1(I)                                    0442
         MVC   @ZT00003+3(1),0(@03)                                0442
         C     @05,@ZT00003                                        0442
         BNE   @RF00442                                            0442
*       DO;                         /*                       @Y30LB12*/
*         DECINDEX=I;               /* INDEX IS 1-8 BIN      @Y30LB12*/
         STC   I,DECINDEX                                          0444
*         WORKDEV=DECINDEX-1;       /* CHARS ARE 0-7         @Y30LB12*/
         SLR   @05,@05                                             0445
         IC    @05,DECINDEX                                        0445
         BCTR  @05,0                                               0445
         STC   @05,WORKDEV                                         0445
*         RETURN;                   /* RETURN TO CALLER      @Y30LB12*/
@EL00016 DS    0H                                                  0446
@EF00016 DS    0H                                                  0446
@ER00016 LM    @14,@12,@SA00016                                    0446
         BR    @14                                                 0446
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0448
*       ;                           /*                       @Y30LB12*/
@RF00442 DS    0H                                                  0449
*   END;                            /* ALL 8 & NO MATCH      @Y30LB12*/
*                                                                  0449
         AH    I,@CH00044                                          0449
         CH    I,@CH00042                                          0449
         BNH   @DL00441                                            0449
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* ICG223I VALUE ERROR FOR XXXXXXXX                      @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0450
*   OUTBUF2(1:25)=ICGDS223;         /*                       @Y30LB12*/
         MVC   OUTBUF2(25,R4),ICGDS223                             0450
*   OUTBUF2(26:29)=PLUGIN;          /*                       @Y30LB12*/
         MVC   OUTBUF2+25(4,R4),PLUGIN                             0451
*   CALL PUTIT1;                    /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0452
*   END CONVDEC;                    /* RETURN TO CALLER      @Y30LB12*/
         B     @EL00016                                            0453
*                                                                  0454
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09ANAL                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CHECK FOR OMITTED, REQUIRED KEYWORDS, 'SA',   @YD00113*/
*/*            'CUA', AND DEVICE TYPE FOR 'DEVX'.  THEN      @YD00113*/
*/*            CHECK FOR OMITTED PARAMETERS FOR 'DEVX',      @YD00113*/
*/*            'REAL' OR 'SSID', 'SDG', 'LCU', AND 'LUA'.    @YD00113*/
*/*            CHECK TO ASSURE THAT IF PHYSICAL DEVICE IS    @YD00113*/
*/*            A 3330-11, LOGICAL DEVICES RESIDING ON THE    @YD00113*/
*/*            PHYSICAL DEVICE MUST BE AN EVEN/ODD PAIR.     @YD00113*/
*/*            TEST TO ASSURE THE TWO SA IDENTIFICATIONS     @YD00113*/
*/*            ARE DIFFERENT, AND NON ZERO.                  @YD00113*/
*/*                                                          @YD00113*/
*/*            IF ANY OF ABOVE TESTS FAIL, PRINT APPROPRIATE @YD00113*/
*/*            ERROR MESSAGE.                                @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0454
*S09ANAL:                                                          0454
*   PROCEDURE;                      /*                       @Y30LB12*/
S09ANAL  STM   @14,@12,@SA00017                                    0454
*   IF HAVEDS^='1'B                 /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    HAVEDS,B'10000000'                                  0455
         BO    @RF00455                                            0455
*     DO;                           /*                       @Y30LB12*/
*                                                                  0456
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG221I MISSING REQUIRED KEYWORD SA               @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0457
*       OUTBUF2(1:34)=ICGDS221;     /*                       @Y30LB12*/
         MVC   OUTBUF2(34,R4),ICGDS221                             0457
*       OUTBUF2(35:36)='SA';        /*                       @Y30LB12*/
         MVC   OUTBUF2+34(2,R4),@CC00491                           0458
*       CALL PUTIT1;                /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0459
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0461
*     ;                             /*                       @Y30LB12*/
@RF00455 DS    0H                                                  0462
*   IF HAVECUA^='1'B                /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    HAVECUA,B'01000000'                                 0462
         BO    @RF00462                                            0462
*     DO;                           /*                       @Y30LB12*/
*                                                                  0463
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG221I MISSING REQUIRED KEYWORD CUA              @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0464
*       OUTBUF2(1:34)=ICGDS221;     /*                       @Y30LB12*/
         MVC   OUTBUF2(34,R4),ICGDS221                             0464
*       OUTBUF2(35:37)='CUA';       /*                       @Y30LB12*/
         MVC   OUTBUF2+34(3,R4),@CC00481                           0465
*       CALL PUTIT1;                /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0466
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0468
*     ;                             /*                       @Y30LB12*/
@RF00462 DS    0H                                                  0469
*   DO I=1 TO 8;                    /* 8 POSSIBLE DEVS       @Y30LB12*/
         LA    I,1                                                 0469
@DL00469 DS    0H                                                  0470
*     IF HAVEDEV(I)='1'B            /* PHYSICAL DEVICE       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @05,I                                               0470
         SLA   @05,2                                               0470
         LA    @03,HAVEDEV-4(@05)                                  0470
         TM    0(@03),B'10000000'                                  0470
         BNO   @RF00470                                            0470
*       DO;                         /*                       @Y30LB12*/
*         FOUNDDEV='1'B;            /* AT LEAST 1 DEVX       @Y30LB12*/
         OI    FOUNDDEV,B'00100000'                                0472
*         IF REALTYPE(I)='00'B      /* NOT VALID             @X50RSPC*/
*           THEN                    /*                       @Y30LB12*/
         LA    @03,REALTYPE-4(@05)                                 0473
         TM    0(@03),B'00000110'                                  0473
         BNZ   @RF00473                                            0473
*           DO;                     /*                       @Y30LB12*/
*                                                                  0474
*             /*******************************************************/
*             /*                                                     */
*             /* *********************************           @Y30LB12*/
*             /* ICG221I MISSING REQUIRED                    @Y30LB12*/
*             /* KEYWORD DEVICE TYPE FOR DEVX                @Y30LB12*/
*             /* *********************************           @Y30LB12*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0475
*             OUTBUF2(1:34)=ICGDS221;/*                      @Y30LB12*/
         MVC   OUTBUF2(34,R4),ICGDS221                             0475
*             OUTBUF2(35:53)='DEVICE TYPE FOR DEV';                0476
         MVC   OUTBUF2+34(19,R4),@CC00563                          0476
*             OUTBUF2(54)=PATTERN(I);/*                      @Y30LB12*/
         LA    @05,PATTERN-1(I)                                    0477
         MVC   OUTBUF2+53(1,R4),0(@05)                             0477
*             CALL PUTIT1;          /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0478
*           END;                    /*                       @Y30LB12*/
*         ELSE                                                     0480
*           ;                       /*                       @Y30LB12*/
@RF00473 DS    0H                                                  0481
*         IF REALSPEC(I)='0'B       /*                       @Y30LB12*/
*             &SSIDSPEC(I)='0'B     /*                       @Y30LB12*/
*           THEN                    /*                       @Y30LB12*/
         LR    @05,I                                               0481
         SLA   @05,2                                               0481
         LA    @03,REALSPEC-4(@05)                                 0481
         TM    0(@03),B'01100000'                                  0481
         BNZ   @RF00481                                            0481
*           DO;                     /*                       @Y30LB12*/
*                                                                  0482
*             /*******************************************************/
*             /*                                                     */
*             /* *********************************           @Y30LB12*/
*             /* ICG241I MISSING REQUIRED                    @Y30LB12*/
*             /* PARAMETER REAL OR SSID FOR DEVX             @Y30LB12*/
*             /* *********************************           @Y30LB12*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0483
*             OUTBUF2(1:36)=ICGDS241;/*                      @Y30LB12*/
         MVC   OUTBUF2(36,R4),ICGDS241                             0483
*             OUTBUF2(37:56)='REAL OR SSID FOR DEV';               0484
         MVC   OUTBUF2+36(20,R4),@CC00567                          0484
*             OUTBUF2(57)=PATTERN(I);/*                      @Y30LB12*/
         LA    @05,PATTERN-1(I)                                    0485
         MVC   OUTBUF2+56(1,R4),0(@05)                             0485
*             CALL PUTIT1;          /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0486
*           END;                    /*                       @Y30LB12*/
*         ELSE                                                     0488
*           ;                       /*                       @Y30LB12*/
@RF00481 DS    0H                                                  0489
*         IF SSIDSPEC(I)='1'B       /* IF HAS SSID           @Y30LB12*/
*           THEN                    /*                       @Y30LB12*/
         LR    @05,I                                               0489
         SLA   @05,2                                               0489
         LA    @03,SSIDSPEC-4(@05)                                 0489
         TM    0(@03),B'00100000'                                  0489
         BNO   @RF00489                                            0489
*           DO;                     /*                       @Y30LB12*/
*             IF WRSGSPEC(I)='0'B   /* NEEDS RSG             @Y30LB12*/
*               THEN                /*                       @Y30LB12*/
         LA    @03,WRSGSPEC-4(@05)                                 0491
         TM    0(@03),B'10000000'                                  0491
         BNZ   @RF00491                                            0491
*               DO;                 /*                       @Y30LB12*/
*                                                                  0492
*                 /***************************************************/
*                 /*                                                 */
*                 /* ***************************             @Y30LB12*/
*                 /* ICG241I MISSING REQUIRED                @Y30LB12*/
*                 /* PARAMETER SDG FOR DEVX                  @Y30LB12*/
*                 /* ***************************             @Y30LB12*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0493
*                 OUTBUF2(1:36)=ICGDS241;/*                  @Y30LB12*/
         MVC   OUTBUF2(36,R4),ICGDS241                             0493
*                 OUTBUF2(37:47)='SDG FOR DEV';                    0494
         MVC   OUTBUF2+36(11,R4),@CC00533                          0494
*                 OUTBUF2(48)=PATTERN(I);/*                  @Y30LB12*/
         LA    @05,PATTERN-1(I)                                    0495
         MVC   OUTBUF2+47(1,R4),0(@05)                             0495
*                 CALL PUTIT1;      /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0496
*               END;                /*                       @Y30LB12*/
*             ELSE                                                 0498
*               ;                   /*                       @Y30LB12*/
@RF00491 DS    0H                                                  0499
*             IF ABOXSPEC(I)='0'B   /* NEEDS LCU             @Y30LB12*/
*               THEN                /*                       @Y30LB12*/
         LR    @05,I                                               0499
         SLA   @05,2                                               0499
         LA    @03,ABOXSPEC-4(@05)                                 0499
         TM    0(@03),B'00010000'                                  0499
         BNZ   @RF00499                                            0499
*               DO;                 /*                       @Y30LB12*/
*                                                                  0500
*                 /***************************************************/
*                 /*                                                 */
*                 /* ***************************             @Y30LB12*/
*                 /* ICG241I MISSING REQUIRED                @Y30LB12*/
*                 /* PARAMETER LCU FOR DEVX                  @Y30LB12*/
*                 /* ***************************             @Y30LB12*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0501
*                 OUTBUF2(1:36)=ICGDS241;/*                  @Y30LB12*/
         MVC   OUTBUF2(36,R4),ICGDS241                             0501
*                 OUTBUF2(37:47)='LCU FOR DEV';                    0502
         MVC   OUTBUF2+36(11,R4),@CC00545                          0502
*                 OUTBUF2(48)=PATTERN(I);/*                  @Y30LB12*/
         LA    @05,PATTERN-1(I)                                    0503
         MVC   OUTBUF2+47(1,R4),0(@05)                             0503
*                 CALL PUTIT1;      /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0504
*               END;                /*                       @Y30LB12*/
*             ELSE                                                 0506
*               ;                   /*                       @Y30LB12*/
@RF00499 DS    0H                                                  0507
*             IF LDEVSPEC(I)='0'B   /* NEEDS LUA             @Y30LB12*/
*               THEN                /*                       @Y30LB12*/
         LR    @05,I                                               0507
         SLA   @05,2                                               0507
         LA    @03,LDEVSPEC-4(@05)                                 0507
         TM    0(@03),B'00000001'                                  0507
         BNZ   @RF00507                                            0507
*               DO;                 /*                       @Y30LB12*/
*                                                                  0508
*                 /***************************************************/
*                 /*                                                 */
*                 /* ***************************             @Y30LB12*/
*                 /* ICG241I MISSING REQUIRED                @Y30LB12*/
*                 /* PARAMETER LUA FOR DEVX                  @Y30LB12*/
*                 /* ***************************             @Y30LB12*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0509
*                 OUTBUF2(1:36)=ICGDS241;/*                  @Y30LB12*/
         MVC   OUTBUF2(36,R4),ICGDS241                             0509
*                 OUTBUF2(37:47)='LUA FOR DEV';                    0510
         MVC   OUTBUF2+36(11,R4),@CC00550                          0510
*                 OUTBUF2(48)=PATTERN(I);/*                  @Y30LB12*/
         LA    @05,PATTERN-1(I)                                    0511
         MVC   OUTBUF2+47(1,R4),0(@05)                             0511
*                 CALL PUTIT1;      /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0512
*               END;                /*                       @Y30LB12*/
*             ELSE                                                 0514
*               ;                   /*                       @Y30LB12*/
*                                                                  0514
@RF00507 DS    0H                                                  0515
*             /*******************************************************/
*             /*                                                     */
*             /* **********************************          @Y30LB12*/
*             /* IF THE PHYSICAL DEVICE IS A 3330            @Y30LB12*/
*             /* MODEL 11, THE TWO LOGICAL                   @Y30LB12*/
*             /* DEVICES RESIDING ON THE PHYSICAL            @Y30LB12*/
*             /* DEVICE MUST BE AN EVEN/ODD PAIR.            @Y30LB12*/
*             /* **********************************          @Y30LB12*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0515
*             IF REALTYPE(I)=PHYSFICE/*                      @X50RSPC*/
*               THEN                /*                       @Y30LB12*/
         LR    @05,I                                               0515
         SLA   @05,2                                               0515
         LA    @03,REALTYPE-4(@05)                                 0515
         TM    0(@03),B'00000010'                                  0515
         BNO   @RF00515                                            0515
         TM    0(@03),B'00000100'                                  0515
         BNZ   @RF00515                                            0515
*               IF WKLOGDEV(I)^=0   /*                       @Y30LB12*/
*                   &WKLOGDEV(I)^=2 /*                       @Y30LB12*/
*                   &WKLOGDEV(I)^=4 /*                       @Y30LB12*/
*                   &WKLOGDEV(I)^=6 /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         SLR   @03,@03                                             0516
         IC    @03,WKLOGDEV-4(@05)                                 0516
         LTR   @03,@03                                             0516
         BZ    @RF00516                                            0516
         CH    @03,@CH00052                                        0516
         BE    @RF00516                                            0516
         CH    @03,@CH00070                                        0516
         BE    @RF00516                                            0516
         CH    @03,@CH00227                                        0516
         BE    @RF00516                                            0516
*                 DO;               /*                       @Y30LB12*/
*                                                                  0517
*                   /*************************************************/
*                   /*                                               */
*                   /* ***********************               @Y30LB12*/
*                   /* ICG247I LOGICAL DEVICE                @Y30LB12*/
*                   /* FOR DEV X MUST BE 0,                  @Y30LB12*/
*                   /* 2, 4, OR 6                            @Y30LB12*/
*                   /* ***********************               @Y30LB12*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0518
*                   OUTBUF2(1:55)=ICGDS247;                        0518
         MVC   OUTBUF2(55,R4),ICGDS247                             0518
*                   OUTBUF2(33)=PATTERN(I);                        0519
         LA    @05,PATTERN-1(I)                                    0519
         MVC   OUTBUF2+32(1,R4),0(@05)                             0519
*                   CALL PUTIT1;    /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0520
*                 END;              /*                       @Y30LB12*/
*               ELSE                                               0522
*                 ;                 /*                       @Y30LB12*/
@RF00516 DS    0H                                                  0523
*           END;                    /*                       @Y30LB12*/
@RF00515 DS    0H                                                  0524
*       END;                        /*                       @Y30LB12*/
@RF00489 DS    0H                                                  0525
*   END;                            /* EXAMINED ALL 8        @Y30LB12*/
@RF00470 AH    I,@CH00044                                          0525
         CH    I,@CH00042                                          0525
         BNH   @DL00469                                            0525
*   IF FOUNDDEV='0'B THEN                                          0526
         TM    FOUNDDEV,B'00100000'                                0526
         BNZ   @RF00526                                            0526
*     DO;                                                          0527
*                                                                  0527
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICGDS221 MISSING REQUIRED KEYWORD DEVX            @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0528
*       OUTBUF2(1:34)=ICGDS221;     /*                       @Y30LB12*/
         MVC   OUTBUF2(34,R4),ICGDS221                             0528
*       OUTBUF2(35:38)='DEVX';      /*                       @Y30LB12*/
         MVC   OUTBUF2+34(4,R4),@CC00570                           0529
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0530
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0532
*     ;                             /*                       @Y30LB12*/
@RF00526 DS    0H                                                  0533
*   IF DSINDEX1=DSINDEX2            /*                       @Y30LB12*/
*       &DSINDEX1^=0                /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LH    @05,DSINDEX1                                        0533
         CH    @05,DSINDEX2                                        0533
         BNE   @RF00533                                            0533
         LTR   @05,@05                                             0533
         BZ    @RF00533                                            0533
*     DO;                           /*                       @Y30LB12*/
*                                                                  0534
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG243I TWO SA IDENTIFICATIONS MUST BE            @Y30LB12*/
*       /* DIFFERENT                                         @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0535
*       MSGNO=ICG243I;              /* IDENT FOR ICG243I     @Y30LB12*/
         MVC   MSGNO(2,R4),ICG243I                                 0535
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0536
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0538
*     ;                             /*                       @Y30LB12*/
@RF00533 DS    0H                                                  0539
*   END S09ANAL;                    /* RET. TO MAINLINE      @Y30LB12*/
@EL00017 DS    0H                                                  0539
@EF00017 DS    0H                                                  0539
@ER00017 LM    @14,@12,@SA00017                                    0539
         BR    @14                                                 0539
*                                                                  0540
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S09BUILD                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - UPDATE PHYSTYPE STRUCTURE EITHER ONCE OR      @Y30LB12*/
*/*            TWICE, DEPENDING ON WHETHER ONE OR TWO SA'S   @Y30LB12*/
*/*            WERE SPECIFIED.  IF TWO SA'S WERE SPECIFIED,  @Y30LB12*/
*/*            UPDATE PHYSDS2 FOR BOTH STAGING ADAPTER/DASD  @Y30LB12*/
*/*            CONTROLLER TO POINT AT OTHER DS.              @Y30LB12*/
*/*            CALL UPDATPAB TO UPDATE THE PABTABLE AND      @Y30LB12*/
*/*            BUILDRSG FOR STAGING DEVICES ONLY.            @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0540
*S09BUILD:                                                         0540
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0540
S09BUILD STM   @14,@12,@SA00018                                    0540
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* IF THIS DASD CONTROLLER INTERFACES TO TWO DATA        @Y30LB12*/
*   /* STAGERS, PUT THE LOWER DATA STAGER INTO               @Y30LB12*/
*   /* THE FIRST INDEX.                                      @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0541
*   IF DSINDEX2^=0                  /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LH    @05,DSINDEX2                                        0541
         LTR   @05,@05                                             0541
         BZ    @RF00541                                            0541
*     IF DSINDEX2<DSINDEX1          /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LH    @15,DSINDEX1                                        0542
         CR    @05,@15                                             0542
         BNL   @RF00542                                            0542
*       DO;                         /*                       @Y30LB12*/
*         PHYSINDX=DSINDEX1;        /*                       @Y30LB12*/
         STC   @15,PHYSINDX                                        0544
*         DSINDEX1=DSINDEX2;        /*                       @Y30LB12*/
         STH   @05,DSINDEX1                                        0545
*         DSINDEX2=PHYSINDX;        /*                       @Y30LB12*/
         STH   @15,DSINDEX2                                        0546
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0548
*       ;                           /*                       @Y30LB12*/
@RF00542 DS    0H                                                  0549
*   ELSE                                                           0549
*     ;                             /*                       @Y30LB12*/
*                                                                  0549
@RF00541 DS    0H                                                  0550
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* UPDATE PHYSTYPE FOR THE FIRST (LOWER NUMBERED)        @Y30LB12*/
*   /* DATA STAGER                                           @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0550
*   PHYSINDX=DSINDEX1;              /*                       @Y30LB12*/
         MVC   PHYSINDX(1),DSINDEX1+1                              0550
*   CALL UPDAPHYS;                  /*                       @Y30LB12*/
*                                                                  0551
         BAL   @14,UPDAPHYS                                        0551
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* IF A SECOND DATA STAGER INTERFACES TO THIS            @Y30LB12*/
*   /* DASD CONTROLLER, UPDATE PHYSTYPE FOR THE              @Y30LB12*/
*   /* DATA STAGER, AND PUT POINTER TO 'OTHER' DATA          @Y30LB12*/
*   /* STAGER IN THE APPROPRIATE ENTRY OF DSPAIRS FOR        @Y30LB12*/
*   /* BOTH DATA STAGERS.                                    @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0552
*   IF DSINDEX2^=0                  /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LH    @05,DSINDEX2                                        0552
         LTR   @05,@05                                             0552
         BZ    @RF00552                                            0552
*     DO;                           /*                       @Y30LB12*/
*       PHYSINDX=DSINDEX2;          /*                       @Y30LB12*/
         STC   @05,PHYSINDX                                        0554
*       CALL UPDAPHYS;              /*                       @Y30LB12*/
         BAL   @14,UPDAPHYS                                        0555
*       IF PHYSDS2(DSINDEX1,WORKCUA)='FF'X/*                 @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         LH    @05,DSINDEX1                                        0556
         SLA   @05,2                                               0556
         MVC   @ZT00003+3(1),WORKCUA                               0556
         AL    @05,@ZT00003                                        0556
         ST    @05,@TF00001                                        0556
         ALR   @05,R4                                              0556
         CLI   PHYSDS2-5(@05),X'FF'                                0556
         BNE   @RF00556                                            0556
*         PHYSDS2(DSINDEX1,WORKCUA)=DSINDEX2-1;                    0557
         LH    @05,DSINDEX2                                        0557
         BCTR  @05,0                                               0557
         L     @01,@TF00001                                        0557
         STC   @05,PHYSDS2-5(@01,R4)                               0557
*       ELSE                        /*                       @Y30LB12*/
*         IF PHYSDS2(DSINDEX1,WORKCUA)^=DSINDEX2-1 THEN/*    @Y30LB12*/
         B     @RC00556                                            0558
@RF00556 LH    @05,DSINDEX1                                        0558
         SLA   @05,2                                               0558
         MVC   @ZT00003+3(1),WORKCUA                               0558
         AL    @05,@ZT00003                                        0558
         LH    @15,DSINDEX2                                        0558
         BCTR  @15,0                                               0558
         ALR   @05,R4                                              0558
         MVC   @ZT00003+3(1),PHYSDS2-5(@05)                        0558
         C     @15,@ZT00003                                        0558
         BE    @RF00558                                            0558
*           DO;                     /*                       @Y30LB12*/
*                                                                  0559
*             /*******************************************************/
*             /*                                                     */
*             /* *******************************             @Y30LB12*/
*             /* ICG246I DASD CONTROLLER                     @Y30LB12*/
*             /* PREVIOUSLY SPECIFIED WITH                   @Y30LB12*/
*             /* ONE MATCHING SA                             @Y30LB12*/
*             /* *******************************             @Y30LB12*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0560
*             MSGNO=ICG246I;        /*                       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG246I                                 0560
*             CALL PUTIT2;          /*                       @Y30LB12*/
         BAL   @14,PUTIT2                                          0561
*           END;                    /*                       @Y30LB12*/
*         ELSE                                                     0563
*           ;                       /*                       @Y30LB12*/
@RF00558 DS    0H                                                  0564
*       IF PHYSDS2(DSINDEX2,WORKCUA)='FF'X/*                 @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
@RC00556 LH    @05,DSINDEX2                                        0564
         SLA   @05,2                                               0564
         MVC   @ZT00003+3(1),WORKCUA                               0564
         AL    @05,@ZT00003                                        0564
         ST    @05,@TF00001                                        0564
         ALR   @05,R4                                              0564
         CLI   PHYSDS2-5(@05),X'FF'                                0564
         BNE   @RF00564                                            0564
*         PHYSDS2(DSINDEX2,WORKCUA)=DSINDEX1-1;                    0565
         LH    @05,DSINDEX1                                        0565
         BCTR  @05,0                                               0565
         L     @01,@TF00001                                        0565
         STC   @05,PHYSDS2-5(@01,R4)                               0565
*       ELSE                        /*                       @Y30LB12*/
*         IF PHYSDS2(DSINDEX2,WORKCUA)^=DSINDEX1-1 THEN/*    @Y30LB12*/
         B     @RC00564                                            0566
@RF00564 LH    @05,DSINDEX2                                        0566
         SLA   @05,2                                               0566
         MVC   @ZT00003+3(1),WORKCUA                               0566
         AL    @05,@ZT00003                                        0566
         LH    @15,DSINDEX1                                        0566
         BCTR  @15,0                                               0566
         ALR   @05,R4                                              0566
         MVC   @ZT00003+3(1),PHYSDS2-5(@05)                        0566
         C     @15,@ZT00003                                        0566
         BE    @RF00566                                            0566
*           DO;                     /*                       @Y30LB12*/
*                                                                  0567
*             /*******************************************************/
*             /*                                                     */
*             /* *******************************             @Y30LB12*/
*             /* ICG246I DASD CONTROLLER                     @Y30LB12*/
*             /* PREVIOUSLY SPECIFIED WITH                   @Y30LB12*/
*             /* ONE MATCHING SA                             @Y30LB12*/
*             /* *******************************             @Y30LB12*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0568
*             MSGNO=ICG246I;        /*                       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG246I                                 0568
*             CALL PUTIT2;          /*                       @Y30LB12*/
         BAL   @14,PUTIT2                                          0569
*           END;                    /*                       @Y30LB12*/
*         ELSE                                                     0571
*           ;                       /*                       @Y30LB12*/
@RF00566 DS    0H                                                  0572
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /*                       @Y30LB12*/
*                                                                  0573
*     /***************************************************************/
*     /*                                                             */
*     /* *******************************************         @Y30LB12*/
*     /* IF TWO CONTROLLERS IN PREVIOUS STATEMENT            @Y30LB12*/
*     /* BUT ONLY ONE IS CURRENT STATEMENT TO SAME           @Y30LB12*/
*     /* DASD CONTROLLER, WRITE ERROR MESSAGE                @Y30LB12*/
*     /* *******************************************         @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0573
*     IF PHYSDS2(DSINDEX1,WORKCUA)^='FF'X/*                  @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         B     @RC00552                                            0573
@RF00552 LH    @05,DSINDEX1                                        0573
         SLA   @05,2                                               0573
         MVC   @ZT00003+3(1),WORKCUA                               0573
         AL    @05,@ZT00003                                        0573
         ALR   @05,R4                                              0573
         CLI   PHYSDS2-5(@05),X'FF'                                0573
         BE    @RF00573                                            0573
*       DO;                         /*                       @Y30LB12*/
*                                                                  0574
*         /***********************************************************/
*         /*                                                         */
*         /* *************************************           @Y30LB12*/
*         /* ICG246I DASD CONTROLLER PREVIOUSLY              @Y30LB12*/
*         /* SPECIFIED WITH ONE MATCHING SA                  @Y30LB12*/
*         /* *************************************           @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0575
*         MSGNO=ICG246I;            /*                       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG246I                                 0575
*         CALL PUTIT2;              /*                       @Y30LB12*/
         BAL   @14,PUTIT2                                          0576
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0578
*       ;                           /*                       @Y30LB12*/
*                                                                  0578
@RF00573 DS    0H                                                  0579
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* CALL PROCEDURE TO UPDATE PABTABLE FOR DASD            @Y30LB12*/
*   /* DEVICES THAT HAVE AN SSID                             @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0579
*   CALL UPDATPAB;                  /*                       @Y30LB12*/
@RC00552 BAL   @14,UPDATPAB                                        0579
*   END S09BUILD;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00018 DS    0H                                                  0580
@EF00018 DS    0H                                                  0580
@ER00018 LM    @14,@12,@SA00018                                    0580
         BR    @14                                                 0580
*                                                                  0581
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - UPDAPHYS                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - UPDATE THE STRUCTURE PHYSTYPE FOR EITHER THE  @Y30LB12*/
*/*            FIRST DATA STAGER OR THE SECOND DATA STAGER,  @Y30LB12*/
*/*            DEPENDING ON THE VALUE PASSED TO THIS         @Y30LB12*/
*/*            PROCEDURE IN PHYSINDX.                        @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0581
*UPDAPHYS:                                                         0581
*   PROCEDURE;                      /*                       @Y30LB12*/
UPDAPHYS STM   @14,@12,@SA00019                                    0581
*   DO I=1 TO 8;                    /*                       @Y30LB12*/
         LA    I,1                                                 0582
@DL00582 DS    0H                                                  0583
*     IF HAVEDEV(I)='1'B            /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @05,I                                               0583
         SLA   @05,2                                               0583
         LA    @03,HAVEDEV-4(@05)                                  0583
         TM    0(@03),B'10000000'                                  0583
         BNO   @RF00583                                            0583
*       IF MERLICEB(PHYSINDX,WORKCUA,I)='00'B/*              @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         SLR   @03,@03                                             0584
         IC    @03,PHYSINDX                                        0584
         SLA   @03,2                                               0584
         MVC   @ZT00003+3(1),WORKCUA                               0584
         AL    @03,@ZT00003                                        0584
         SLA   @03,3                                               0584
         ALR   @03,I                                               0584
         ALR   @03,@03                                             0584
         ST    @03,@TF00001                                        0584
         ALR   @03,R4                                              0584
         TM    MERLICEB-82(@03),B'11000000'                        0584
         BNZ   @RF00584                                            0584
*         DO;                       /*                       @Y30LB12*/
*           IF REALTYPE(I)=PHYSFMER /*                       @X50RSPC*/
*             THEN                  /*                       @X50RSPC*/
         LA    @03,REALTYPE-4(@05)                                 0586
         TM    0(@03),B'00000100'                                  0586
         BNO   @RF00586                                            0586
         TM    0(@03),B'00000010'                                  0586
         BNZ   @RF00586                                            0586
*             MERLICEB(PHYSINDX,WORKCUA,I)=PHYSFMER;               0587
         LR    @05,R4                                              0587
         AL    @05,@TF00001                                        0587
         NI    MERLICEB-82(@05),B'10111111'                        0587
         OI    MERLICEB-82(@05),B'10000000'                        0587
*           ELSE                    /*                       @X50RSPC*/
*             IF REALTYPE(I)=PHYSFICE/*                      @X50RSPC*/
*               THEN                /*                       @X50RSPC*/
         B     @RC00586                                            0588
@RF00586 LR    @05,I                                               0588
         SLA   @05,2                                               0588
         LA    @03,REALTYPE-4(@05)                                 0588
         TM    0(@03),B'00000010'                                  0588
         BNO   @RF00588                                            0588
         TM    0(@03),B'00000100'                                  0588
         BNZ   @RF00588                                            0588
*               MERLICEB(PHYSINDX,WORKCUA,I)=PHYSFICE;             0589
         SLR   @05,@05                                             0589
         IC    @05,PHYSINDX                                        0589
         SLA   @05,2                                               0589
         MVC   @ZT00003+3(1),WORKCUA                               0589
         AL    @05,@ZT00003                                        0589
         SLA   @05,3                                               0589
         ALR   @05,I                                               0589
         ALR   @05,@05                                             0589
         ALR   @05,R4                                              0589
         NI    MERLICEB-82(@05),B'01111111'                        0589
         OI    MERLICEB-82(@05),B'01000000'                        0589
*             ELSE                  /*                       @X50RSPC*/
*               MERLICEB(PHYSINDX,WORKCUA,I)=PHYSFMAD;/*     @X50RSPC*/
         B     @RC00588                                            0590
@RF00588 SLR   @05,@05                                             0590
         IC    @05,PHYSINDX                                        0590
         SLA   @05,2                                               0590
         MVC   @ZT00003+3(1),WORKCUA                               0590
         AL    @05,@ZT00003                                        0590
         SLA   @05,3                                               0590
         ALR   @05,I                                               0590
         ALR   @05,@05                                             0590
         ALR   @05,R4                                              0590
         OI    MERLICEB-82(@05),B'11000000'                        0590
*           IF REALSPEC(I)='1'B     /*                       @Y30LB12*/
*             THEN                  /*                       @Y30LB12*/
@RC00588 DS    0H                                                  0591
@RC00586 LR    @05,I                                               0591
         SLA   @05,2                                               0591
         LA    @03,REALSPEC-4(@05)                                 0591
         TM    0(@03),B'01000000'                                  0591
         BNO   @RF00591                                            0591
*             PHYSREAL(PHYSINDX,WORKCUA,I)='1'B;                   0592
         SLR   @05,@05                                             0592
         IC    @05,PHYSINDX                                        0592
         SLA   @05,2                                               0592
         MVC   @ZT00003+3(1),WORKCUA                               0592
         AL    @05,@ZT00003                                        0592
         SLA   @05,3                                               0592
         ALR   @05,I                                               0592
         ALR   @05,@05                                             0592
         ALR   @05,R4                                              0592
         OI    PHYSREAL-82(@05),B'00100000'                        0592
*           ELSE                    /*                       @Y30LB12*/
*             DO;                   /*                       @Y30LB12*/
         B     @RC00591                                            0593
@RF00591 DS    0H                                                  0594
*               PHYSSSID(PHYSINDX,WORKCUA,I)='1'B;                 0594
         SLR   @05,@05                                             0594
         IC    @05,PHYSINDX                                        0594
         SLA   @05,2                                               0594
         MVC   @ZT00003+3(1),WORKCUA                               0594
         AL    @05,@ZT00003                                        0594
         SLA   @05,3                                               0594
         ALR   @05,I                                               0594
         ALR   @05,@05                                             0594
         ST    @05,@TF00001                                        0594
         ALR   @05,R4                                              0594
         OI    PHYSSSID-82(@05),B'00010000'                        0594
*               IF ABOX1(I)='1'B    /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         LR    @05,I                                               0595
         SLA   @05,2                                               0595
         LA    @03,ABOX1-4(@05)                                    0595
         TM    0(@03),B'00001000'                                  0595
         BNO   @RF00595                                            0595
*                 LOGABOX1(PHYSINDX,WORKCUA,I)='1'B;               0596
         LR    @05,R4                                              0596
         AL    @05,@TF00001                                        0596
         OI    LOGABOX1-82(@05),B'00001000'                        0596
*               ELSE                                               0597
*                 ;                 /*                       @Y30LB12*/
@RF00595 DS    0H                                                  0598
*               WORKDEV=WKLOGDEV(I);/*                       @Y30LB12*/
         LR    @05,I                                               0598
         SLA   @05,2                                               0598
         SLR   @03,@03                                             0598
         IC    @03,WKLOGDEV-4(@05)                                 0598
         STC   @03,WORKDEV                                         0598
*               IF WORKDEV='00'X    /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         CLI   WORKDEV,0                                           0599
         BNE   @RF00599                                            0599
*                 LGDEVICE(PHYSINDX,WORKCUA,I)='000'B;             0600
         SLR   @05,@05                                             0600
         IC    @05,PHYSINDX                                        0600
         SLA   @05,2                                               0600
         MVC   @ZT00003+3(1),WORKCUA                               0600
         AL    @05,@ZT00003                                        0600
         SLA   @05,3                                               0600
         ALR   @05,I                                               0600
         ALR   @05,@05                                             0600
         ALR   @05,R4                                              0600
         NI    LGDEVICE-82(@05),B'11111000'                        0600
*               ELSE                                               0601
*                 ;                 /*                       @Y30LB12*/
@RF00599 DS    0H                                                  0602
*               IF WORKDEV='01'X    /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         CLI   WORKDEV,1                                           0602
         BNE   @RF00602                                            0602
*                 LGDEVICE(PHYSINDX,WORKCUA,I)='001'B;             0603
         SLR   @05,@05                                             0603
         IC    @05,PHYSINDX                                        0603
         SLA   @05,2                                               0603
         MVC   @ZT00003+3(1),WORKCUA                               0603
         AL    @05,@ZT00003                                        0603
         SLA   @05,3                                               0603
         ALR   @05,I                                               0603
         ALR   @05,@05                                             0603
         ALR   @05,R4                                              0603
         NI    LGDEVICE-82(@05),B'11111001'                        0603
         OI    LGDEVICE-82(@05),B'00000001'                        0603
*               ELSE                                               0604
*                 ;                 /*                       @Y30LB12*/
@RF00602 DS    0H                                                  0605
*               IF WORKDEV='02'X    /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         CLI   WORKDEV,2                                           0605
         BNE   @RF00605                                            0605
*                 LGDEVICE(PHYSINDX,WORKCUA,I)='010'B;             0606
         SLR   @05,@05                                             0606
         IC    @05,PHYSINDX                                        0606
         SLA   @05,2                                               0606
         MVC   @ZT00003+3(1),WORKCUA                               0606
         AL    @05,@ZT00003                                        0606
         SLA   @05,3                                               0606
         ALR   @05,I                                               0606
         ALR   @05,@05                                             0606
         ALR   @05,R4                                              0606
         NI    LGDEVICE-82(@05),B'11111010'                        0606
         OI    LGDEVICE-82(@05),B'00000010'                        0606
*               ELSE                                               0607
*                 ;                 /*                       @Y30LB12*/
@RF00605 DS    0H                                                  0608
*               IF WORKDEV='03'X    /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         CLI   WORKDEV,3                                           0608
         BNE   @RF00608                                            0608
*                 LGDEVICE(PHYSINDX,WORKCUA,I)='011'B;             0609
         SLR   @05,@05                                             0609
         IC    @05,PHYSINDX                                        0609
         SLA   @05,2                                               0609
         MVC   @ZT00003+3(1),WORKCUA                               0609
         AL    @05,@ZT00003                                        0609
         SLA   @05,3                                               0609
         ALR   @05,I                                               0609
         ALR   @05,@05                                             0609
         ALR   @05,R4                                              0609
         NI    LGDEVICE-82(@05),B'11111011'                        0609
         OI    LGDEVICE-82(@05),B'00000011'                        0609
*               ELSE                                               0610
*                 ;                 /*                       @Y30LB12*/
@RF00608 DS    0H                                                  0611
*               IF WORKDEV='04'X    /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         CLI   WORKDEV,4                                           0611
         BNE   @RF00611                                            0611
*                 LGDEVICE(PHYSINDX,WORKCUA,I)='100'B;             0612
         SLR   @05,@05                                             0612
         IC    @05,PHYSINDX                                        0612
         SLA   @05,2                                               0612
         MVC   @ZT00003+3(1),WORKCUA                               0612
         AL    @05,@ZT00003                                        0612
         SLA   @05,3                                               0612
         ALR   @05,I                                               0612
         ALR   @05,@05                                             0612
         ALR   @05,R4                                              0612
         NI    LGDEVICE-82(@05),B'11111100'                        0612
         OI    LGDEVICE-82(@05),B'00000100'                        0612
*               ELSE                                               0613
*                 ;                 /*                       @Y30LB12*/
@RF00611 DS    0H                                                  0614
*               IF WORKDEV='05'X    /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         CLI   WORKDEV,5                                           0614
         BNE   @RF00614                                            0614
*                 LGDEVICE(PHYSINDX,WORKCUA,I)='101'B;             0615
         SLR   @05,@05                                             0615
         IC    @05,PHYSINDX                                        0615
         SLA   @05,2                                               0615
         MVC   @ZT00003+3(1),WORKCUA                               0615
         AL    @05,@ZT00003                                        0615
         SLA   @05,3                                               0615
         ALR   @05,I                                               0615
         ALR   @05,@05                                             0615
         ALR   @05,R4                                              0615
         NI    LGDEVICE-82(@05),B'11111101'                        0615
         OI    LGDEVICE-82(@05),B'00000101'                        0615
*               ELSE                                               0616
*                 ;                 /*                       @Y30LB12*/
@RF00614 DS    0H                                                  0617
*               IF WORKDEV='06'X    /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         CLI   WORKDEV,6                                           0617
         BNE   @RF00617                                            0617
*                 LGDEVICE(PHYSINDX,WORKCUA,I)='110'B;             0618
         SLR   @05,@05                                             0618
         IC    @05,PHYSINDX                                        0618
         SLA   @05,2                                               0618
         MVC   @ZT00003+3(1),WORKCUA                               0618
         AL    @05,@ZT00003                                        0618
         SLA   @05,3                                               0618
         ALR   @05,I                                               0618
         ALR   @05,@05                                             0618
         ALR   @05,R4                                              0618
         NI    LGDEVICE-82(@05),B'11111110'                        0618
         OI    LGDEVICE-82(@05),B'00000110'                        0618
*               ELSE                                               0619
*                 ;                 /*                       @Y30LB12*/
@RF00617 DS    0H                                                  0620
*               IF WORKDEV='07'X    /*                       @Y30LB12*/
*                 THEN              /*                       @Y30LB12*/
         CLI   WORKDEV,7                                           0620
         BNE   @RF00620                                            0620
*                 LGDEVICE(PHYSINDX,WORKCUA,I)='111'B;             0621
         SLR   @05,@05                                             0621
         IC    @05,PHYSINDX                                        0621
         SLA   @05,2                                               0621
         MVC   @ZT00003+3(1),WORKCUA                               0621
         AL    @05,@ZT00003                                        0621
         SLA   @05,3                                               0621
         ALR   @05,I                                               0621
         ALR   @05,@05                                             0621
         ALR   @05,R4                                              0621
         OI    LGDEVICE-82(@05),B'00000111'                        0621
*               ELSE                                               0622
*                 ;                 /*                       @Y30LB12*/
@RF00620 DS    0H                                                  0623
*               SPNRSGNO(PHYSINDX,WORKCUA,I)=WORKRSG(I)-1;         0623
         SLR   @05,@05                                             0623
         IC    @05,PHYSINDX                                        0623
         SLA   @05,2                                               0623
         MVC   @ZT00003+3(1),WORKCUA                               0623
         AL    @05,@ZT00003                                        0623
         SLA   @05,3                                               0623
         ALR   @05,I                                               0623
         ALR   @05,@05                                             0623
         LR    @03,I                                               0623
         SLA   @03,2                                               0623
         SLR   @15,@15                                             0623
         IC    @15,WORKRSG-4(@03)                                  0623
         BCTR  @15,0                                               0623
         STC   @15,SPNRSGNO-82(@05,R4)                             0623
*             END;                  /*                       @Y30LB12*/
*         END;                      /*                       @Y30LB12*/
*       ELSE                        /*                       @Y30LB12*/
*         DO;                       /*                       @Y30LB12*/
*                                                                  0626
         B     @RC00584                                            0626
@RF00584 DS    0H                                                  0627
*           /*********************************************************/
*           /*                                                       */
*           /* *************************************         @Y30LB12*/
*           /* ICG244I PHYSICAL DEVICE X PREVIOUSLY          @Y30LB12*/
*           /* SPECIFIED                                     @Y30LB12*/
*           /* *************************************         @Y30LB12*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0627
*           OUTBUF2(1:47)=ICGDS244; /*                       @Y30LB12*/
         MVC   OUTBUF2(47,R4),ICGDS244                             0627
*           OUTBUF2(26)=PATTERN(I); /*                       @Y30LB12*/
         LA    @05,PATTERN-1(I)                                    0628
         MVC   OUTBUF2+25(1,R4),0(@05)                             0628
*           CALL PUTIT1;            /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0629
*         END;                      /*                       @Y30LB12*/
*     ELSE                                                         0631
*       ;                           /*                       @Y30LB12*/
@RF00583 DS    0H                                                  0632
*   END;                            /*                       @Y30LB12*/
@RC00583 AH    I,@CH00044                                          0632
         CH    I,@CH00042                                          0632
         BNH   @DL00582                                            0632
*   END UPDAPHYS;                   /*                       @Y30LB12*/
@EL00019 DS    0H                                                  0633
@EF00019 DS    0H                                                  0633
@ER00019 LM    @14,@12,@SA00019                                    0633
         BR    @14                                                 0633
*                                                                  0634
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - UPDATPAB                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - FOR SPINDLES THAT HAVE SUBSYSTEM              @Y30LB12*/
*/*            IDENTIFICATION (SSID), UPDATE THE PABTABLE    @Y30LB12*/
*/*            TO INDICATE THAT THE SPINDLE EXISTS, AND      @Y30LB12*/
*/*            WHETHER OR NOT IT IS A 3330 MODEL 11 (FIRST   @Y30LB12*/
*/*            OR SECOND HALF).  PUT THE PHYSICAL ADDRESS    @Y30LB12*/
*/*            (DASD CONTROLLER AND PHYSICAL DEVICE) INTO    @Y30LB12*/
*/*            PABAADDD.                                     @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            CHECK TO BE SURE THAT THE LOGICAL A-BOX       @Y30LB12*/
*/*            SPECIFIED FOR THIS STAGING DASD GROUP DOES    @Y30LB12*/
*/*            NOT CONFLICT WITH A PREVIOUS SPECIFICATION    @Y30LB12*/
*/*            BY CHECKING AND UPDATING THE 'RSGABOX' BITS   @Y30LB12*/
*/*            IN THE STRUCTURE BUILDRSG.                    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            ALSO CHECK TO BE SURE THAT NO MORE THAN TWO   @Y30LB12*/
*/*            DIFFERENT DATA STAGERS INTERFACE TO THIS      @Y30LB12*/
*/*            STAGING DATA GROUP                            @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0634
*UPDATPAB:                                                         0634
*   PROCEDURE;                      /*                       @Y30LB12*/
UPDATPAB STM   @14,@12,@SA00020                                    0634
*   DO I=1 TO 8;                    /*                       @Y30LB12*/
         LA    I,1                                                 0635
@DL00635 DS    0H                                                  0636
*     IF SSIDSPEC(I)='1'B           /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @05,I                                               0636
         SLA   @05,2                                               0636
         LA    @03,SSIDSPEC-4(@05)                                 0636
         TM    0(@03),B'00100000'                                  0636
         BNO   @RF00636                                            0636
*       DO;                         /*                       @Y30LB12*/
*         RSGINDEX=WORKRSG(I);      /*                       @Y30LB12*/
*                                                                  0638
         SLR   @03,@03                                             0638
         IC    @03,WORKRSG-4(@05)                                  0638
         STH   @03,RSGINDEX                                        0638
*         /***********************************************************/
*         /*                                                         */
*         /* *****************************************       @Y30LB12*/
*         /* VERIFY THAT THERE IS NO MIS-MATCH ON            @Y30LB12*/
*         /* LOGICAL A-BOX AND UPDATE A-BOX IN               @Y30LB12*/
*         /* BUILDRSG                                        @Y30LB12*/
*         /* *****************************************       @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0639
*         CALL CHKABOX;             /*                       @Y30LB12*/
*                                                                  0639
         BAL   @14,CHKABOX                                         0639
*         /***********************************************************/
*         /*                                                         */
*         /* *****************************************       @Y30LB12*/
*         /* IF TWO DATA STAGERS INTERFACE TO THE            @Y30LB12*/
*         /* RSG, THEY MUST BOTH HAVE ACCESS TO ALL          @Y30LB12*/
*         /* THE SAME SPINDLES IN COMMON.                    @Y30LB12*/
*         /* *****************************************       @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0640
*         CALL CHECKRSG;            /*                       @Y30LB12*/
*                                                                  0640
         BAL   @14,CHECKRSG                                        0640
*         /***********************************************************/
*         /*                                                         */
*         /* *****************************************       @Y30LB12*/
*         /* IF THE LOGICAL DEVICE HAS NOT BEEN              @Y30LB12*/
*         /* PREVIOUSLY SPECIFIED, UPDATE THE FLAGS          @Y30LB12*/
*         /* PABEXIST (ALWAYS) AND PABIBERG AND              @Y30LB12*/
*         /* PABBERG2 AS APPROPRIATE. ALSO INSERT            @Y30LB12*/
*         /* THE REAL DASD CONTROLLER AND DEVICE             @Y30LB12*/
*         /* ADDRESS INTO PABAADDD. IF THE DEVICE            @Y30LB12*/
*         /* WAS SPECIFIED BEFORE, WRITE ERROR               @Y30LB12*/
*         /* MESSAGE ICGDS242                                @Y30LB12*/
*         /* *****************************************       @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0641
*         CALL DODEVTBL;            /*                       @Y30LB12*/
         BAL   @14,DODEVTBL                                        0641
*       END;                        /*                       @Y30LB12*/
*   END;                            /*                       @Y30LB12*/
@RF00636 AH    I,@CH00044                                          0643
         CH    I,@CH00042                                          0643
         BNH   @DL00635                                            0643
*   END UPDATPAB;                   /*                       @Y30LB12*/
@EL00020 DS    0H                                                  0644
@EF00020 DS    0H                                                  0644
@ER00020 LM    @14,@12,@SA00020                                    0644
         BR    @14                                                 0644
*                                                                  0645
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CHKABOX                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - VERIFY THAT THE LOGICAL A-BOX FOR THIS        @Y30LB12*/
*/*            STAGING SPINDLE IS THE SAME AS FOR ALL OTHER  @Y30LB12*/
*/*            STAGING SPINDLES IN THIS STAGING DASD GROUP.  @Y30LB12*/
*/*            IF THIS IS THE FIRST SPINDLE SPECIFIED FOR    @Y30LB12*/
*/*            THE STAGING DASD GROUP, UPDATE EITHER         @Y30LB12*/
*/*            RSGABOX0 OR RSGABOX1, DEPENDING ON THE        @Y30LB12*/
*/*            LOGICAL CONTROL UNIT SPECIFIED.               @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0645
*CHKABOX:                                                          0645
*   PROCEDURE;                      /*                       @Y30LB12*/
CHKABOX  STM   @14,@12,@SA00021                                    0645
*   IF ABOX1(I)='1'B                /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LR    @05,I                                               0646
         SLA   @05,2                                               0646
         LA    @03,ABOX1-4(@05)                                    0646
         TM    0(@03),B'00001000'                                  0646
         BNO   @RF00646                                            0646
*     IF RSGABOX0(RSGINDEX)='1'B    /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LH    @05,RSGINDEX                                        0647
         MH    @05,@CH00114                                        0647
         ALR   @05,R4                                              0647
         TM    RSGABOX0-9(@05),B'01000000'                         0647
         BNO   @RF00647                                            0647
*       DO;                         /*                       @Y30LB12*/
*                                                                  0648
*         /***********************************************************/
*         /*                                                         */
*         /* *************************************           @Y30LB12*/
*         /* ICG245I SDG FOR DEV X PREVIOUSLY                @Y30LB12*/
*         /* SPECIFIED WITH DIFFERENT LCU                    @Y30LB12*/
*         /* *************************************           @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0649
*         OUTBUF2(1:62)=ICGDS245;   /*                       @Y30LB12*/
         MVC   OUTBUF2(62,R4),ICGDS245                             0649
*         OUTBUF2(22)=PATTERN(I);   /*                       @Y30LB12*/
         LA    @05,PATTERN-1(I)                                    0650
         MVC   OUTBUF2+21(1,R4),0(@05)                             0650
*         CALL PUTIT1;              /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0651
*       END;                        /*                       @Y30LB12*/
*     ELSE                          /*                       @Y30LB12*/
*       RSGABOX1(RSGINDEX)='1'B;    /*                       @Y30LB12*/
         B     @RC00647                                            0653
@RF00647 LH    @05,RSGINDEX                                        0653
         MH    @05,@CH00114                                        0653
         ALR   @05,R4                                              0653
         OI    RSGABOX1-9(@05),B'00100000'                         0653
*   ELSE                            /*                       @Y30LB12*/
*     IF RSGABOX1(RSGINDEX)='1'B    /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         B     @RC00646                                            0654
@RF00646 LH    @05,RSGINDEX                                        0654
         MH    @05,@CH00114                                        0654
         ALR   @05,R4                                              0654
         TM    RSGABOX1-9(@05),B'00100000'                         0654
         BNO   @RF00654                                            0654
*       DO;                         /*                       @Y30LB12*/
*                                                                  0655
*         /***********************************************************/
*         /*                                                         */
*         /* *************************************           @Y30LB12*/
*         /* ICG245I SDG FOR DEV X PREVIOUSLY                @Y30LB12*/
*         /* SPECIFIED WITH DIFFERENT LCU                    @Y30LB12*/
*         /* *************************************           @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0656
*         OUTBUF2(1:62)=ICGDS245;   /*                       @Y30LB12*/
         MVC   OUTBUF2(62,R4),ICGDS245                             0656
*         OUTBUF2(22)=PATTERN(I);   /*                       @Y30LB12*/
         LA    @05,PATTERN-1(I)                                    0657
         MVC   OUTBUF2+21(1,R4),0(@05)                             0657
*         CALL PUTIT1;              /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0658
*       END;                        /*                       @Y30LB12*/
*     ELSE                          /*                       @Y30LB12*/
*       RSGABOX0(RSGINDEX)='1'B;    /*                       @Y30LB12*/
         B     @RC00654                                            0660
@RF00654 LH    @05,RSGINDEX                                        0660
         MH    @05,@CH00114                                        0660
         ALR   @05,R4                                              0660
         OI    RSGABOX0-9(@05),B'01000000'                         0660
*   END CHKABOX;                    /*                       @Y30LB12*/
@EL00021 DS    0H                                                  0661
@EF00021 DS    0H                                                  0661
@ER00021 LM    @14,@12,@SA00021                                    0661
         BR    @14                                                 0661
*                                                                  0662
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CHECKRSG                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - IF A STAGING DASD GROUP INTERFACES TO TWO     @Y30LB12*/
*/*            DATA STAGERS, ALL SPINDLES THAT MAKE UP THE   @Y30LB12*/
*/*            STAGING DASD GROUP MUST ALL INTERFACE TO THE  @Y30LB12*/
*/*            SAME TWO DATA STAGERS.  IT IS NOT ALLOWED     @Y30LB12*/
*/*            THAT A STAGING SPINDLE HAVE A PATH TO ONLY    @Y30LB12*/
*/*            ONE OF THE DATA STAGERS.                      @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0662
*CHECKRSG:                                                         0662
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0662
CHECKRSG STM   @14,@12,@SA00022                                    0662
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* FIRST CASE - FIRST SPINDLE FOR THIS RSG.              @Y30LB12*/
*   /* ENTER EITHER ONE OR TWO RSGS INTO BUILDRSG            @Y30LB12*/
*   /* AND RETURN.                                           @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0663
*   IF TODS1(RSGINDEX)='FF'X        /*                       @Y30LB12*/
*       &TODS2(RSGINDEX)='FF'X      /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LH    @05,RSGINDEX                                        0663
         MH    @05,@CH00114                                        0663
         ST    @05,@TF00001                                        0663
         ALR   @05,R4                                              0663
         CLI   TODS1-9(@05),X'FF'                                  0663
         BNE   @RF00663                                            0663
         LR    @05,R4                                              0663
         AL    @05,@TF00001                                        0663
         CLI   TODS2-9(@05),X'FF'                                  0663
         BNE   @RF00663                                            0663
*     DO;                           /*                       @Y30LB12*/
*       TODS1(RSGINDEX)=DSINDEX1-1; /*                       @Y30LB12*/
         LH    @05,DSINDEX1                                        0665
         BCTR  @05,0                                               0665
         L     @01,@TF00001                                        0665
         STC   @05,TODS1-9(@01,R4)                                 0665
*       IF DSINDEX2^=0              /*                       @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         LH    @05,DSINDEX2                                        0666
         LTR   @05,@05                                             0666
         BZ    @RF00666                                            0666
*         TODS2(RSGINDEX)=DSINDEX2-1;/*                      @Y30LB12*/
         BCTR  @05,0                                               0667
         L     @01,@TF00001                                        0667
         STC   @05,TODS2-9(@01,R4)                                 0667
*       ELSE                                                       0668
*         ;                         /*                       @Y30LB12*/
@RF00666 DS    0H                                                  0669
*       RETURN;                     /*                       @Y30LB12*/
@EL00022 DS    0H                                                  0669
@EF00022 DS    0H                                                  0669
@ER00022 LM    @14,@12,@SA00022                                    0669
         BR    @14                                                 0669
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0671
*     ;                             /*                       @Y30LB12*/
*                                                                  0671
@RF00663 DS    0H                                                  0672
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* SECOND CASE - THIS RSG INTERFACES TO ONLY ONE         @Y30LB12*/
*   /* DATA STAGER AND IT IS THE SAME DATA STAGER            @Y30LB12*/
*   /* THAT WAS ENTERED INTO THE TABLE IN THE FIRST          @Y30LB12*/
*   /* CASE. IF THERE IS NO SECOND DATA STAGER IN            @Y30LB12*/
*   /* EITHER THE PREVIOUS OR CURRENT SPINDLES               @Y30LB12*/
*   /* STATEMENTS, BUT THE FIRST DATA STAGER DOES NOT        @Y30LB12*/
*   /* AGREE WITH THE PREVIOUS SPECIFICATION, SET UP         @Y30LB12*/
*   /* FOR AN ERROR MESSAGE.                                 @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0672
*   IF TODS2(RSGINDEX)='FF'X        /*                       @Y30LB12*/
*       &DSINDEX2=0                 /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LH    @05,RSGINDEX                                        0672
         MH    @05,@CH00114                                        0672
         ST    @05,@TF00001                                        0672
         ALR   @05,R4                                              0672
         CLI   TODS2-9(@05),X'FF'                                  0672
         BNE   @RF00672                                            0672
         LH    @05,DSINDEX2                                        0672
         LTR   @05,@05                                             0672
         BNZ   @RF00672                                            0672
*     IF TODS1(RSGINDEX)=DSINDEX1-1 /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LH    @05,DSINDEX1                                        0673
         BCTR  @05,0                                               0673
         LR    @01,R4                                              0673
         AL    @01,@TF00001                                        0673
         MVC   @ZT00003+3(1),TODS1-9(@01)                          0673
         C     @05,@ZT00003                                        0673
         BE    @RT00673                                            0673
*       RETURN;                     /*                       @Y30LB12*/
*     ELSE                                                         0675
*       ;                           /*                       @Y30LB12*/
*                                                                  0675
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* THIRD CASE - THERE ARE TWO DATA STAGERS               @Y30LB12*/
*   /* SPECIFIED FOR THIS RSG - BOTH MUST AGREE WITH         @Y30LB12*/
*   /* THE PREVIOUSLY SPECIFIED DATA STAGERS.                @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0676
*   IF TODS1(RSGINDEX)=DSINDEX1-1   /*                       @Y30LB12*/
*       &TODS2(RSGINDEX)=DSINDEX2-1 /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RF00672 LH    @05,RSGINDEX                                        0676
         MH    @05,@CH00114                                        0676
         LH    @15,DSINDEX1                                        0676
         BCTR  @15,0                                               0676
         ST    @05,@TF00001                                        0676
         ALR   @05,R4                                              0676
         MVC   @ZT00003+3(1),TODS1-9(@05)                          0676
         C     @15,@ZT00003                                        0676
         BNE   @RF00676                                            0676
         LH    @05,DSINDEX2                                        0676
         BCTR  @05,0                                               0676
         LR    @01,R4                                              0676
         AL    @01,@TF00001                                        0676
         MVC   @ZT00003+3(1),TODS2-9(@01)                          0676
         C     @05,@ZT00003                                        0676
         BE    @RT00676                                            0676
*     RETURN;                       /*                       @Y30LB12*/
*   ELSE                                                           0678
*     ;                             /*                       @Y30LB12*/
*                                                                  0678
@RF00676 DS    0H                                                  0679
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* IF WE REACH THIS POINT, WE HAVE NOT RETURNED          @Y30LB12*/
*   /* TO UPDATPAB BY POSITIVELY VERIFYING THAT THE          @Y30LB12*/
*   /* CONTENTS OF TODS1 AND TODS2 AGREE WITH THE            @Y30LB12*/
*   /* DATA STAGERS SPECIFIED FOR THIS SPINDLE.              @Y30LB12*/
*   /* WRITE ERROR MESSAGE ICG248I SDG XX PREVIOUSLY         @Y30LB12*/
*   /* SPECIFIED TO DIFFERENT SA OR SA PAIR.                 @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0679
*   OUTBUF2(1:63)=ICGDS248;         /*                       @Y30LB12*/
         MVC   OUTBUF2(63,R4),ICGDS248                             0679
*   OUTBUF2(14:15)=LOKUPRSG(RSGINDEX);/*                     @Y30LB12*/
         LH    @05,RSGINDEX                                        0680
         ALR   @05,@05                                             0680
         LA    @01,LOKUPRSG-2(@05)                                 0680
         MVC   OUTBUF2+13(2,R4),0(@01)                             0680
*   CALL PUTIT1;                    /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0681
*   END CHECKRSG;                   /*                       @Y30LB12*/
         B     @EL00022                                            0682
*                                                                  0683
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - DODEVTBL                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - UPDATE THE DEVICE PORTION OF THE PAB USING    @Y30LB12*/
*/*            LOGICAL DEVICE AS INDEX INTO THE TABLE.  IF   @Y30LB12*/
*/*            THE DEVICE IS A 3330 MODEL 11, TWO            @Y30LB12*/
*/*            CONSECUTIVE ENTRIES MUST BE UPDATED.          @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0683
*DODEVTBL:                                                         0683
*   PROCEDURE;                      /*                       @Y30LB12*/
DODEVTBL STM   @14,@12,@SA00023                                    0683
*   DEVINDEX=WKLOGDEV(I)+1;         /*                       @Y30LB12*/
         LR    @05,I                                               0684
         SLA   @05,2                                               0684
         LA    @03,1                                               0684
         LA    @01,WKLOGDEV-4(@05)                                 0684
         MVC   @ZT00003+3(1),0(@01)                                0684
         AL    @03,@ZT00003                                        0684
         STC   @03,DEVINDEX                                        0684
*   IF PABEXIST(RSGINDEX,DEVINDEX)^='1'B/*                   @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LH    @05,RSGINDEX                                        0685
         SLA   @05,3                                               0685
         ALR   @05,@03                                             0685
         MH    @05,@CH00050                                        0685
         ST    @05,@TF00001                                        0685
         ALR   @05,R4                                              0685
         TM    PABEXIST-27(@05),B'10000000'                        0685
         BO    @RF00685                                            0685
*     DO;                           /*                       @Y30LB12*/
*       PABEXIST(RSGINDEX,DEVINDEX)='1'B;/*                  @Y30LB12*/
         LR    @05,R4                                              0687
         AL    @05,@TF00001                                        0687
         OI    PABEXIST-27(@05),B'10000000'                        0687
*       PABAADDD(RSGINDEX,DEVINDEX)=((WORKCUA-1)*8)+I-1;           0688
         SLR   @05,@05                                             0688
         IC    @05,WORKCUA                                         0688
         BCTR  @05,0                                               0688
         SLA   @05,3                                               0688
         ALR   @05,I                                               0688
         BCTR  @05,0                                               0688
         L     @03,@TF00001                                        0688
         STC   @05,PABAADDD-27(@03,R4)                             0688
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0690
         B     @RC00685                                            0690
@RF00685 DS    0H                                                  0691
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG242I LOGICAL DEVICE X FOR SDG XX               @YD00141*/
*       /* PREVIOUSLY SPECIFIED                              @YD00141*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0691
*       OUTBUF2(1:57)=ICGDS242;     /*                       @YD00141*/
         MVC   OUTBUF2(57,R4),ICGDS242                             0691
*       OUTBUF2(25)=PATTERN(DEVINDEX);/*                     @Y30LB12*/
         SLR   @05,@05                                             0692
         IC    @05,DEVINDEX                                        0692
         LA    @03,PATTERN-1(@05)                                  0692
         MVC   OUTBUF2+24(1,R4),0(@03)                             0692
*       OUTBUF2(35:36)=LOKUPRSG(RSGINDEX);/*                 @YD00141*/
         LH    @05,RSGINDEX                                        0693
         ALR   @05,@05                                             0693
         LA    @03,LOKUPRSG-2(@05)                                 0693
         MVC   OUTBUF2+34(2,R4),0(@03)                             0693
*       CALL PUTIT1;                /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0694
*     END;                          /*                       @Y30LB12*/
*   IF REALTYPE(I)=PHYSFICE         /* DEVICE IS 3330-11     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00685 LR    @05,I                                               0696
         SLA   @05,2                                               0696
         LA    @03,REALTYPE-4(@05)                                 0696
         TM    0(@03),B'00000010'                                  0696
         BNO   @RF00696                                            0696
         TM    0(@03),B'00000100'                                  0696
         BNZ   @RF00696                                            0696
*     DO;                           /*                       @Y30LB12*/
*       PABIBERG(RSGINDEX,DEVINDEX)='1'B;/*                  @Y30LB12*/
         LA    @05,3                                               0698
         SLR   @03,@03                                             0698
         IC    @03,DEVINDEX                                        0698
         LH    @15,RSGINDEX                                        0698
         SLA   @15,3                                               0698
         LR    @01,@15                                             0698
         ALR   @01,@03                                             0698
         MR    @00,@05                                             0698
         ALR   @01,R4                                              0698
         OI    PABIBERG-27(@01),B'00010000'                        0698
*       DEVINDEX=DEVINDEX+1;        /*                       @Y30LB12*/
         AH    @03,@CH00044                                        0699
         STC   @03,DEVINDEX                                        0699
*       IF PABEXIST(RSGINDEX,DEVINDEX)^='1'B/*               @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         ALR   @15,@03                                             0700
         MR    @14,@05                                             0700
         ST    @15,@TF00001                                        0700
         ALR   @15,R4                                              0700
         TM    PABEXIST-27(@15),B'10000000'                        0700
         BO    @RF00700                                            0700
*         DO;                       /*                       @Y30LB12*/
*           PABEXIST(RSGINDEX,DEVINDEX)='1'B;/*              @Y30LB12*/
         LR    @05,R4                                              0702
         AL    @05,@TF00001                                        0702
         OI    PABEXIST-27(@05),B'10000000'                        0702
*           PABAADDD(RSGINDEX,DEVINDEX)=((WORKCUA-1)*8)+I-1;       0703
         SLR   @05,@05                                             0703
         IC    @05,WORKCUA                                         0703
         BCTR  @05,0                                               0703
         SLA   @05,3                                               0703
         ALR   @05,I                                               0703
         BCTR  @05,0                                               0703
         L     @03,@TF00001                                        0703
         STC   @05,PABAADDD-27(@03,R4)                             0703
*           PABIBERG(RSGINDEX,DEVINDEX)='1'B;/*              @Y30LB12*/
*           PABBERG2(RSGINDEX,DEVINDEX)='1'B;/*              @Y30LB12*/
         LR    @05,R4                                              0705
         AL    @05,@TF00001                                        0705
         OI    PABIBERG-27(@05),B'00010001'                        0705
*         END;                      /*                       @Y30LB12*/
*       ELSE                        /*                       @Y30LB12*/
*         DO;                       /*                       @Y30LB12*/
*                                                                  0707
         B     @RC00700                                            0707
@RF00700 DS    0H                                                  0708
*           /*********************************************************/
*           /*                                                       */
*           /* ***********************************           @Y30LB12*/
*           /* ICG242I LOGICAL DEVICE X FOR SDG              @YD00141*/
*           /* XX PREVIOUSLY SPECIFIED                       @YD00141*/
*           /* ***********************************           @Y30LB12*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0708
*           OUTBUF2(1:57)=ICGDS242; /*                       @YD00141*/
         MVC   OUTBUF2(57,R4),ICGDS242                             0708
*           OUTBUF2(35:36)=LOKUPRSG(RSGINDEX);/*             @YD00141*/
         LH    @05,RSGINDEX                                        0709
         ALR   @05,@05                                             0709
         LA    @03,LOKUPRSG-2(@05)                                 0709
         MVC   OUTBUF2+34(2,R4),0(@03)                             0709
*           OUTBUF2(25)=PATTERN(DEVINDEX);/*                 @Y30LB12*/
         SLR   @05,@05                                             0710
         IC    @05,DEVINDEX                                        0710
         LA    @03,PATTERN-1(@05)                                  0710
         MVC   OUTBUF2+24(1,R4),0(@03)                             0710
*           CALL PUTIT1;            /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0711
*         END;                      /*                       @Y30LB12*/
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0714
*     ;                             /*                       @Y30LB12*/
@RF00696 DS    0H                                                  0715
*   END DODEVTBL;                   /* RET. TO UPDATPAB      @Y30LB12*/
@EL00023 DS    0H                                                  0715
@EF00023 DS    0H                                                  0715
@ER00023 LM    @14,@12,@SA00023                                    0715
         BR    @14                                                 0715
*                                                                  0716
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - READS99                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL SCAN READ KEYWORD/PARAMETER SUBROUTINE   @Y30LB12*/
*/*            ICGDSS99.  PICK UP STARTING COLUMN FOR THIS   @Y30LB12*/
*/*            SCAN AND STARTING COLUMN FOR NEXT ENTRY INTO  @Y30LB12*/
*/*            ICGDSS99.  IF TERMINATING ERROR OCCURS IN     @Y30LB12*/
*/*            ICGDSS99, SET 'LASTPARM' TO TERMINATE IN THIS @Y30LB12*/
*/*            MODULE ON NEXT READ OF KEYWORD                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0716
*READS99:                                                          0716
*   PROCEDURE;                      /*                       @Y30LB12*/
READS99  STM   @14,@12,@SA00024                                    0716
*   GEN(LINK EP=ICGDSS99);          /* TO SCAN KEYWORD/PARAMETER     */
*                                                                  0717
         LINK EP=ICGDSS99
*   /*****************************************************************/
*   /*                                                               */
*   /* ************************************************@Y30LB12 IF   */
*   /* 'ENDSCAN' BIT IS ON, WE ENCOUNTERED SOME              @Y30LB12*/
*   /* DISASTEROUS CONDITION THAT TERMINATED THE SCAN        @Y30LB12*/
*   /* OF THIS CONTROL STATEMENT. THERE ERRORS ARE           @Y30LB12*/
*   /* ASSOCIATED WITH SCANNING INTO COLUMN 73 AND           @Y30LB12*/
*   /* WITH FINDING A FORMAT ERROR IN THE                    @Y30LB12*/
*   /* CONTINUATION STATEMENT. SHOULD SUCH A                 @Y30LB12*/
*   /* CONDITION OCCUR, WE TERMINATE SCAN OF THE             @Y30LB12*/
*   /* CONTROL STATEMENT UPON READ OF THE NEXT               @Y30LB12*/
*   /* KEYWORD.                                              @Y30LB12*/
*   /* ************************************************@Y30LB12      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0718
*   IF ENDSCAN='1'B                 /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    ENDSCAN(R4),B'00010000'                             0718
         BNO   @RF00718                                            0718
*     LASTPARM='1'B;                /*                       @Y30LB12*/
         OI    LASTPARM(R4),B'00001000'                            0719
*   ELSE                                                           0720
*     ;                             /*                       @Y30LB12*/
@RF00718 DS    0H                                                  0721
*   END READS99;                    /*                       @Y30LB12*/
@EL00024 DS    0H                                                  0721
@EF00024 DS    0H                                                  0721
@ER00024 LM    @14,@12,@SA00024                                    0721
         BR    @14                                                 0721
*                                                                  0722
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0722
*PUTIT1:                                                           0722
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT1   STM   @14,@12,@SA00025                                    0722
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'01000000'                                0723
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0724
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @05,1                                               0725
         AH    @05,TERMINAT(,R4)                                   0725
         STH   @05,TERMINAT(,R4)                                   0725
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0727
*   END PUTIT1;                     /*                       @Y30LB12*/
@EL00025 DS    0H                                                  0728
@EF00025 DS    0H                                                  0728
@ER00025 LM    @14,@12,@SA00025                                    0728
         BR    @14                                                 0728
*                                                                  0729
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT2                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH MESSAGE     @Y30LB12*/
*/*            TEXT IS IN ICGDSMSG.  'MSGNO' INDICATES THE   @Y30LB12*/
*/*            OFFSET OF THE MESSAGE TEXT.                   @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0729
*PUTIT2:                                                           0729
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT2   STM   @14,@12,@SA00026                                    0729
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'01000000'                                0730
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @05,1                                               0731
         AH    @05,TERMINAT(,R4)                                   0731
         STH   @05,TERMINAT(,R4)                                   0731
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   END PUTIT2;                     /*                       @Y30LB12*/
@EL00026 DS    0H                                                  0733
@EF00026 DS    0H                                                  0733
@ER00026 LM    @14,@12,@SA00026                                    0733
         BR    @14                                                 0733
*                                                                  0734
*/********************************************************** @Y30LB12*/
*/*                    P A T C H   A R E A                   @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0734
*   GENERATE;                                                      0734
*                                                         /*@Y30LB12*/
PATCHS09 DC    32C'PATCHS09'                              /*@Y30LB12*/
*   END ICGDSS09                    /*                       @Y30LB12*/
*                                                                  0735
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA1)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA3)                                       */
*                                                                  0735
*       ;                                                          0735
         B     @EL00001                                            0735
@DATA    DS    0H
@CH00044 DC    H'1'
@CH00052 DC    H'2'
@CH00050 DC    H'3'
@CH00070 DC    H'4'
@CH00121 DC    H'5'
@CH00227 DC    H'6'
@CH00135 DC    H'7'
@CH00042 DC    H'8'
@CH00114 DC    H'9'
@CH00164 DC    H'16'
@CH00343 DC    H'28'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00003 DS    15F
@SA00017 DS    15F
@SA00018 DS    15F
@SA00024 DS    15F
@SA00026 DS    15F
@SA00005 DS    15F
@SA00004 DS    15F
@SA00007 DS    15F
@SA00015 DS    15F
@SA00025 DS    15F
@SA00006 DS    15F
@SA00016 DS    15F
@SA00008 DS    15F
@SA00009 DS    15F
@SA00010 DS    15F
@SA00014 DS    15F
@SA00013 DS    15F
@SA00011 DS    15F
@SA00012 DS    15F
@SA00019 DS    15F
@SA00020 DS    15F
@SA00021 DS    15F
@SA00022 DS    15F
@SA00023 DS    15F
@TF00001 DS    F
@ZTEMPS  DS    0F
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSS09 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
SPNWORKA DS    CL58
         ORG   SPNWORKA
PLUGIN   DS    CL8
DEVICES  DS    CL4
         ORG   DEVICES+0
FLAGS    DS    BL2
         ORG   FLAGS+0
HAVEDEV  DS    BL1
REALSPEC EQU   FLAGS+0
SSIDSPEC EQU   FLAGS+0
ABOXSPEC EQU   FLAGS+0
ABOX1    EQU   FLAGS+0
REALTYPE EQU   FLAGS+0
LDEVSPEC EQU   FLAGS+0
WRSGSPEC DS    BL1
@NM00020 EQU   FLAGS+1
         ORG   DEVICES+2
WKLOGDEV DS    CL1
WORKRSG  DS    CL1
         ORG   SPNWORKA+40
HEXINDEX DS    FL2
DSINDEX1 DS    FL2
DSINDEX2 DS    FL2
RSGINDEX DS    FL2
DEVINDEX DS    FL1
PHYSINDX DS    FL1
DECINDEX DS    FL1
WORKDEV  DS    FL1
WORKCUA  DS    FL1
         ORG   WORKCUA
HIGHCUA  DS    BL1
MIDCUA   EQU   WORKCUA+0
LOWCUA   EQU   WORKCUA+0
         ORG   SPNWORKA+53
HEXCHAR  DS    CL1
HOLDRSG  DS    CL2
HAVES    DS    CL1
         ORG   HAVES
HAVEDS   DS    BL1
HAVECUA  EQU   HAVES+0
FOUNDDEV EQU   HAVES+0
@NM00021 EQU   HAVES+0
         ORG   SPNWORKA+57
S09MSGID DS    CL1
         ORG   S09MSGID
KNOWN    DS    BL1
STOPSCAN EQU   S09MSGID+0
KNOWN2   EQU   S09MSGID+0
KNOWN3   EQU   S09MSGID+0
KNOWN4   EQU   S09MSGID+0
@NM00022 EQU   S09MSGID+0
         ORG   SPNWORKA+58
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSS09 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ICG209I  DC    H'209'
ICG210I  DC    H'210'
ICG211I  DC    H'211'
ICG212I  DC    H'212'
ICG243I  DC    H'243'
ICG246I  DC    H'246'
@CC00567 DC    C'REAL OR SSID FOR DEV'
@CC00563 DC    C'DEVICE TYPE FOR DEV'
@CC00494 DC    C'SA (2ND PARM)'
@CC00533 DC    C'SDG FOR DEV'
@CC00545 DC    C'LCU FOR DEV'
@CC00550 DC    C'LUA FOR DEV'
@CC00511 DC    C'3330-11='
@CC00509 DC    C'3330-1='
@CC00512 DC    C'3350='
@CC00518 DC    C'SSID='
@CC00473 DC    C'CUA='
@CC00513 EQU   @CC00567
@CC00570 DC    C'DEVX'
@CC00471 DC    C'SA='
@CC00475 EQU   @CC00563
@CC00481 EQU   @CC00473
@CC00523 EQU   @CC00550
@CC00525 EQU   @CC00545
@CC00527 EQU   @CC00533
@CC00491 EQU   @CC00494
@CB00462 DC    X'0000'
ICGDS219 DC    CL27' ICG219I DUPLICATE KEYWORD '
ICGDS220 DC    CL46' ICG220I INVALID PARAMETER LENGTH, KEYWORD IS '
ICGDS221 DC    CL34' ICG221I MISSING REQUIRED KEYWORD '
ICGDS223 DC    CL25' ICG223I VALUE ERROR FOR '
ICGDS227 DC    CL51' ICG227I PARAMETER MUST BE HEXADECIMAL. KEYWORD IS C
               '
ICGDS229 DC    CL37' ICG229I FOR DEVX, USAGE MUST BE REAL'
ICGDS241 DC    CL36' ICG241I MISSING REQUIRED PARAMETER '
ICGDS242 DC    CL57' ICG242I LOGICAL DEVICE X FOR SDG XX PREVIOUSLY SPEC
               CIFIED'
ICGDS244 DC    CL47' ICG244I PHYSICAL DEVICE X PREVIOUSLY SPECIFIED'
ICGDS245 DC    CL62' ICG245I SDG FOR DEV X PREVIOUSLY SPECIFIED WITH DIC
               FFERENT LCU'
ICGDS247 DC    CL55' ICG247I LOGICAL DEVICE FOR DEV X MUST BE 0, 2, 4, C
               OR 6'
ICGDS248 DC    CL63' ICG248I SDG XX PREVIOUSLY SPECIFIED TO DIFFERENT SC
               A OR SA PAIR'
PATTERN  DC    CL1'0'
         DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
         DC    CL1'6'
         DC    CL1'7'
         DC    CL1'8'
         DC    CL1'9'
         DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
LOKUPRSG DC    CL2'00'
         DC    CL2'01'
         DC    CL2'02'
         DC    CL2'03'
         DC    CL2'04'
         DC    CL2'05'
         DC    CL2'06'
         DC    CL2'07'
         DC    CL2'08'
         DC    CL2'09'
         DC    CL2'10'
         DC    CL2'11'
         DC    CL2'12'
         DC    CL2'13'
         DC    CL2'14'
         DC    CL2'15'
         DC    CL2'16'
         DC    CL2'17'
         DC    CL2'18'
         DC    CL2'19'
         DC    CL2'20'
         DC    CL2'21'
         DC    CL2'22'
         DC    CL2'23'
         DC    CL2'24'
         DC    CL2'25'
         DC    CL2'26'
         DC    CL2'27'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @02
R11      EQU   @11
R10      EQU   @10
R4       EQU   @04
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
KEYBIT   EQU   READFLAG
PARMBIT  EQU   READFLAG
ENDSCAN  EQU   READFLAG
LASTPARM EQU   READFLAG
PCHBF    EQU   READER+99
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
SAVESCOL EQU   READER+188
SAVENCOL EQU   READER+192
SCANLEN  EQU   READER+204
PRINTER  EQU   COMTAB+464
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
MSGNO    EQU   MESSAGES+2
TERMINAT EQU   MESSAGES+6
SPECLMSG EQU   MESSAGES+18
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
COMPTR2  EQU   GENIO+16
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGABOX0 EQU   RSGABOX
RSGABOX1 EQU   RSGABOX
RSGTODS  EQU   RSG+7
TODS1    EQU   RSGTODS
TODS2    EQU   RSGTODS+1
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABEXIST EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
PABBERG2 EQU   PABFLAGS
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSDS2  EQU   DSPAIRS
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
LGDEVICE EQU   PHYSFLGS
SPNRSGNO EQU   PHYSTYPE+1
CPUASSOC EQU   COMTAB+3026
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
SCANDATA EQU   0
SCANBUF  EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
CPUREFNO EQU   RSGUCB+6
RSGCPUID EQU   RSGUCB+1
@NM00019 EQU   RSGFLAGS
CISPEC   EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00018 EQU   @NM00017
CYLFAULT EQU   @NM00017
PRNTONLY EQU   @NM00017
UPDCREAT EQU   @NM00017
NEWCREAT EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
CPUSPEC  EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00013 EQU   CPUFLAG1
TOMPCPU  EQU   CPU+5
CPUID    EQU   CPU
CPUNUM   EQU   CPUASSOC
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
BUILDPTR EQU   GENIO+20
SAVE14   EQU   GENIO+12
EXLST    EQU   GENIO+8
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00006 EQU   MESSAGES+19
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00005 EQU   SPECLMSG
PRNTCARD EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
WARNING  EQU   MESSAGES+4
RETCODE  EQU   MESSAGES
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00003 EQU   READER+206
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
INBUF    EQU   READER+100
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00058 EQU   @EL00003
@RC00117 EQU   @EL00004
@RC00212 EQU   @EL00007
@RF00211 EQU   @EL00007
@RC00283 EQU   @EL00009
@RT00325 EQU   @EL00010
@RC00396 EQU   @EL00013
@RT00429 EQU   @EL00014
@RC00564 EQU   @RC00552
@RC00584 EQU   @RC00583
@RC00654 EQU   @EL00021
@RC00646 EQU   @EL00021
@RT00673 EQU   @EL00022
@RT00676 EQU   @EL00022
@RC00696 EQU   @EL00023
@RC00284 EQU   @RC00283
@RC00591 EQU   @RC00584
@RC00647 EQU   @RC00646
@RC00700 EQU   @RC00696
@ENDDATA EQU   *
         END   ICGDSS09,(C'PLS2233',0603,76349)
