         TITLE 'ICGDSSCN MSC TABLE CREATE, SCAN EXECUTIVE              *
                        '
ICGDSSCN CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSSCN  76.337'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0031
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/*            ICGDSSCN, MAINLINE (SCANOPEN)                 @XD00153*/
*/*                                                          @Y30LB12*/
*/*            COPY MODEL SYSIN DCB TO COMMON WORK AREA,     @XD00153*/
*/*            INSERT SUBSTITUTE DDNAME, IF PRESENT,         @XD00153*/
*/*            AND OPEN SYSIN.                               @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0031
*SCANOPEN:                                                         0031
*   READDCB=MYDCB2A;                /* COPY SYSIN DCB        @Y30LB12*/
SCANOPEN LA    @10,MYDCB2                                          0031
         MVC   READDCB(96,R4),MYDCB2A(@10)                         0031
*   DCBPTR=ADDR(READDCB);           /* SET DCB OVERLAY       @Y30LB12*/
         LA    @10,READDCB(,R4)                                    0032
         ST    @10,DCBPTR(,R4)                                     0032
*   DCBEXLST=ADDR(EXLST);           /* PTR TO EXIT LIST      @Y30LB12*/
         LA    @05,EXLST(,R4)                                      0033
         ST    @05,DCBEXLST+28(,@10)                               0033
*   EXLST=ADDR(DCBROUT2);           /* PTR TO EXIT ROUT      @Y30LB12*/
         LA    @10,DCBROUT2                                        0034
         ST    @10,EXLST(,R4)                                      0034
*   EXLST(1)='85'X;                 /* ACTIVATE EXIT         @Y30LB12*/
         MVI   EXLST(R4),X'85'                                     0035
*   IF SVSYSIN^='0000000000000000'X /* IF ALTERNATE          @Y30LB12*/
*     THEN                          /* NAME FOR SYSIN,       @Y30LB12*/
         CLC   SVSYSIN(8,R4),@CB00630                              0036
         BE    @RF00036                                            0036
*     READDCB(41:48)=SVSYSIN;       /* TO SYSIN DCB          @Y30LB12*/
         MVC   READDCB+40(8,R4),SVSYSIN(R4)                        0037
*   ELSE                                                           0038
*     ;                             /* ELSE NAME SYSIN       @Y30LB12*/
@RF00036 DS    0H                                                  0039
*   OPENLIST=ADDR(READDCB);         /* ADDR OF SYSIN DCB     @Y30LB12*/
         LA    @10,READDCB(,R4)                                    0039
         ST    @10,OPENLIST(,R4)                                   0039
*   OPENLIST(1)='80'X;              /* SET END-OF-LIST       @Y30LB12*/
         MVI   OPENLIST(R4),X'80'                                  0040
*   R1=ADDR(OPENLIST);              /* ADDR OF DCB TO R1     @Y30LB12*/
         LA    R1,OPENLIST(,R4)                                    0041
*   GEN(OPEN  MF=(E,(1)));          /* OPEN SYSIN            @Y30LB12*/
*                                                                  0042
         OPEN  MF=(E,(1))
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* CHECK TO SEE THAT OPEN OF SYSIN WAS SUCCESSFUL        @Y30LB12*/
*   /* IF NOT, ISSUE ERROR MESSAGE ICG200I AND RETURN        @XD00153*/
*   /* TO 'ICGDSINT'.                                        @XD00153*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0043
*   DCBPTR=ADDR(READDCB);           /* SET DCB OVERLAY       @Y30LB12*/
         LA    @10,READDCB(,R4)                                    0043
         ST    @10,DCBPTR(,R4)                                     0043
*   IF DCBOFOPN^='1'B               /* IF SYSIN NOT OPEN     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    DCBOFOPN+40(@10),B'00010000'                        0044
         BO    @RF00044                                            0044
*     DO;                           /*                       @Y30LB12*/
*ICGDS200:                                                         0046
*       MSGNO=ICG200I;              /* ID OF ICGDS200        @Y30LB12*/
ICGDS200 MVC   MSGNO(2,R4),ICG200I                                 0046
*       RETCODE=16;                 /* SET RETURN CODE       @Y30LB12*/
         MVC   RETCODE(2,R4),@CH00162                              0047
*       GEN(LINK  EP=ICGDSMSG);     /* CALL MESSAGE WTR      @Y30LB12*/
         LINK  EP=ICGDSMSG
*       TERMINAT=TERMINAT+1;        /* BUMP TERM COUNT       @Y30LB12*/
         LA    @10,1                                               0049
         AH    @10,TERMINAT(,R4)                                   0049
         STH   @10,TERMINAT(,R4)                                   0049
*       RETURN;                     /* TO ICGDSINT           @Y30LB12*/
@EL00001 L     @13,4(,@13)                                         0050
@EF00001 L     @00,@SIZDATD                                        0050
         LR    @01,@11                                             0050
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0050
         BR    @14                                                 0050
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0052
*     ;                             /* SYSIN OPEN OKAY       @Y30LB12*/
*                                                                  0052
@RF00044 DS    0H                                                  0053
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* INITIALIZE DS/RSG TABLE TO 'FF'X                      @Y30LB12*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0053
*   DO I=1 TO 16;                   /*                       @Y30LB12*/
         LA    @10,1                                               0053
         ST    @10,I                                               0053
@DL00053 DS    0H                                                  0054
*     TORSG1(I)='FF'X;              /*                       @Y30LB12*/
         LR    @05,@10                                             0054
         ALR   @05,@05                                             0054
         L     @15,COMPTR2(,R4)                                    0054
         ST    @05,@TF00001                                        0054
         ALR   @05,@15                                             0054
         AL    @05,@CF00683                                        0054
         MVI   TORSG1(@05),X'FF'                                   0054
*     TORSG2(I)='FF'X;              /*                       @Y30LB12*/
         AL    @15,@TF00001                                        0055
         AL    @15,@CF00684                                        0055
         MVI   TORSG2-1(@15),X'FF'                                 0055
*   END;                            /*                       @Y30LB12*/
*                                                                  0056
         AH    @10,@CH00042                                        0056
         ST    @10,I                                               0056
         CH    @10,@CH00162                                        0056
         BNH   @DL00053                                            0056
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* INITIALIZE DSPAIRS TABLE TO 'FF'X                     @Y30LB12*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0057
*   DO I=1 TO 16;                   /*                       @Y30LB12*/
         LA    @10,1                                               0057
         ST    @10,I                                               0057
@DL00057 DS    0H                                                  0058
*     DO J=1 TO 4;                  /*                       @Y30LB12*/
         LA    @10,1                                               0058
         ST    @10,J                                               0058
@DL00058 DS    0H                                                  0059
*       PHYSDS2(I,J)='FF'X;         /*                       @Y30LB12*/
         L     @05,I                                               0059
         SLA   @05,2                                               0059
         ALR   @05,@10                                             0059
         ALR   @05,R4                                              0059
         MVI   PHYSDS2-5(@05),X'FF'                                0059
*     END;                          /*                       @Y30LB12*/
         AH    @10,@CH00042                                        0060
         ST    @10,J                                               0060
         CH    @10,@CH00068                                        0060
         BNH   @DL00058                                            0060
*   END;                            /*                       @Y30LB12*/
*                                                                  0061
         LA    @10,1                                               0061
         AL    @10,I                                               0061
         ST    @10,I                                               0061
         CH    @10,@CH00162                                        0061
         BNH   @DL00057                                            0061
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* INITIALIZE RSGTODS ENTRIES IN BUILDRSG TABLE          @Y30LB12*/
*   /* TO 'FF'X                                              @Y30LB12*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0062
*   DO I=1 TO 30;                   /*                       @Y30LB12*/
         LA    @10,1                                               0062
         ST    @10,I                                               0062
@DL00062 DS    0H                                                  0063
*     TODS1(I)='FF'X;               /*                       @Y30LB12*/
         LR    @05,@10                                             0063
         MH    @05,@CH00112                                        0063
         ST    @05,@TF00001                                        0063
         ALR   @05,R4                                              0063
         MVI   TODS1-9(@05),X'FF'                                  0063
*     TODS2(I)='FF'X;               /*                       @Y30LB12*/
         LR    @05,R4                                              0064
         AL    @05,@TF00001                                        0064
         MVI   TODS2-9(@05),X'FF'                                  0064
*   END;                            /*                       @Y30LB12*/
         AH    @10,@CH00042                                        0065
         ST    @10,I                                               0065
         CH    @10,@CH00111                                        0065
         BNH   @DL00062                                            0065
*                                                                  0066
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/*            READ AND PRINT CONTROL STATEMENT              @XD00153*/
*/*            IF COLUMN 1 CONTAINS AN ASTERISK (*),         @Y30LB12*/
*/*            THE RECORD IS TREATED AS A COMMENTS           @Y30LB12*/
*/*            RECORD, AND THE NEXT RECORD IS READ.          @Y30LB12*/
*/*            IF COLUMN 1 CONTAINS ANY OTHER NON-BLANK      @Y30LB12*/
*/*            CHARACTER, THAT CHARACTER IS TREATED AS       @Y30LB12*/
*/*            THE FIRST CHARACTER OF THE LABEL FIELD.       @Y30LB12*/
*/*            LABELS ARE IGNORED, AND THEREFORE NOT         @Y30LB12*/
*/*            CHECKED FOR LENGTH OR CONTENTS.   LABELS      @Y30LB12*/
*/*            ARE TERMINATED BY A BLANK.                    @Y30LB12*/
*/*            IF COLUMN 1 CONTAINS A BLANK, THE FIRST       @Y30LB12*/
*/*            NON-BLANK CHARACTER ENCOUNTERED IS TREATED    @Y30LB12*/
*/*            AS THE FIRST CHARACTER OF THE COMMAND         @Y30LB12*/
*/*            WORD.                                         @Y30LB12*/
*/*            COMPLETELY BLANK RECORDS, COMPLETELY          @Y30LB12*/
*/*            NON-BLANK RECORDS, AND RECORDS CONTAINING     @Y30LB12*/
*/*            ONLY A LABEL FIELD ARE IGNORED EXCEPT         @Y30LB12*/
*/*            FOR THE PRINTING OF A WARNING MESSAGE         @Y30LB12*/
*/*            (RETURN CODE = 4).                            @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            NOTE - READTERM INDICATES THAT END-OF-DATA    @Y30LB12*/
*/*            WAS ENCOUNTERED IN ICGDSS99.  IF              @Y30LB12*/
*/*            END-OF-DATA ENCOUNTERED IN THIS MODULE,       @Y30LB12*/
*/*            THE ACCESS METHOD WILL CALL THE END OF        @Y30LB12*/
*/*            DATA ROUTINE, ENDDATA.                        @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0066
*READDATA:                                                         0066
*   DO WHILE(READTERM^='1'B);       /* UNTIL END-OF-DATA     @Y30LB12*/
READDATA B     @DE00066                                            0066
@DL00066 DS    0H                                                  0067
*     R1=ADDR(READDCB);             /* ADDR OF DCB           @Y30LB12*/
         LA    R1,READDCB(,R4)                                     0067
*     R0=ADDR(INBUF);               /* ADDR OF I/O AREA      @Y30LB12*/
         LA    R0,INBUF(,R4)                                       0068
*     GEN(GET   (1),(0));           /* GET REG NOTATION      @Y30LB12*/
         GET   (1),(0)
*     PRNTCARD='1'B;                /* PRINT CARD ON         @Y30LB12*/
         OI    PRNTCARD(R4),B'00010000'                            0070
*     GEN(LINK  EP=ICGDSMSG);       /* CALL MSG WRITER       @Y30LB12*/
         LINK  EP=ICGDSMSG
*     PRNTCARD='0'B;                /* PRINT CARD OFF        @Y30LB12*/
         NI    PRNTCARD(R4),B'11101111'                            0072
*     LASTPARM='0'B;                /* RESET END-OF-CARD     @Y30LB12*/
*     ENDSCAN='0'B;                 /* SET OFF READ ERR      @XM01737*/
*                                                                  0074
         NI    LASTPARM(R4),B'11100111'                            0074
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @YD00113*/
*     /* SET NEXTCOL TO POINT AT THE FIRST CHARACTER         @Y30LB12*/
*     /* IN THE INPUT BUFFER AND BEGIN EXAMINATION OF        @Y30LB12*/
*     /* OF THE CONTROL STATEMENT JUST READ AND              @Y30LB12*/
*     /* PRINTED.                                            @Y30LB12*/
*     /* ***********************************************     @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0075
*     NEXTCOL=ADDR(INBUF);          /* BASED INBUF           @Y30LB12*/
         LA    @10,INBUF(,R4)                                      0075
         ST    @10,NEXTCOL(,R4)                                    0075
*     IF INBUF(1)^='*'              /* IF NOT COMMENT        @Y30LB12*/
*         &INBUF(1)^='40'X          /* AND NOT BLANK         @Y30LB12*/
*       THEN                        /* IN FIRST COLUMN       @Y30LB12*/
         CLI   INBUF(R4),C'*'                                      0076
         BE    @RF00076                                            0076
         CLI   INBUF(R4),X'40'                                     0076
         BE    @RF00076                                            0076
*       CALL DOLABEL;               /* THEN IS LABEL         @Y30LB12*/
         BAL   @14,DOLABEL                                         0077
*     ELSE                          /* IF NOT LABEL,         @Y30LB12*/
*       IF INBUF(1)='40'X           /* THEN IF BLANK,        @Y30LB12*/
*         THEN                      /* SET END OF LABEL      @Y30LB12*/
         B     @RC00076                                            0078
@RF00076 CLI   INBUF(R4),X'40'                                     0078
         BNE   @RF00078                                            0078
*         DO;                       /* POINTER TO FIRST      @Y30LB12*/
*           I=1;                    /* CHAR IN BUFFER,       @Y30LB12*/
         MVC   I(4),@CF00042                                       0080
*           CALL FINDCMD;           /* FIND START OF CMD     @Y30LB12*/
         BAL   @14,FINDCMD                                         0081
*         END;                      /*                       @Y30LB12*/
*       ELSE                                                       0083
*         ;                         /* DONE IF COMMENT       @Y30LB12*/
@RF00078 DS    0H                                                  0084
*   END;                            /* END OF DO WHILE       @Y30LB12*/
@RC00076 DS    0H                                                  0084
@DE00066 TM    READTERM(R4),B'10000000'                            0084
         BNO   @DL00066                                            0084
*                                                                  0085
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - ICGDSSCN, MAINLINE (ENDDATA)            @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CLOSE SYSIN, RETURN TO ICGDSINT               @Y30LB12*/
*/*            IF DCB HAD NOT BEEN OPENED, SET RETURN CODE   @XD00153*/
*/*            (RETCODE) OF 16 AND RETURN TO 'ICGDSINT'.     @XD00153*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0085
*ENDDATA:                                                          0085
*   ;                               /*                       @Y30LB12*/
ENDDATA  DS    0H                                                  0086
*   DCBPTR=ADDR(READDCB);           /* SET DCB OVERLAY       @Y30LB12*/
         LA    @10,READDCB(,R4)                                    0086
         ST    @10,DCBPTR(,R4)                                     0086
*   IF DCBOFOPN='1'B                /* IF SYSIN IS OPEN,     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    DCBOFOPN+40(@10),B'00010000'                        0087
         BNO   @RF00087                                            0087
*     DO;                           /*                       @Y30LB12*/
*       OPENLIST=ADDR(READDCB);     /* POINTER TO DCB        @Y30LB12*/
         ST    @10,OPENLIST(,R4)                                   0089
*       OPENLIST(1)='80'X;          /* END-OF LIST IND.      @Y30LB12*/
         MVI   OPENLIST(R4),X'80'                                  0090
*       R1=ADDR(OPENLIST);          /* POINT AT LIST         @Y30LB12*/
         LA    R1,OPENLIST(,R4)                                    0091
*       GEN(CLOSE MF=(E,(1)));      /* EXECUTE CLOSE         @Y30LB12*/
         CLOSE MF=(E,(1))
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /* IF NEVER OPENED,      @Y30LB12*/
*     RETCODE=16;                   /* SET RETURN CODE       @Y30LB12*/
         B     @RC00087                                            0094
@RF00087 MVC   RETCODE(2,R4),@CH00162                              0094
*   RETURN;                         /* TO ICGDSINT           @Y30LB12*/
         B     @EL00001                                            0095
*                                                                  0096
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - DOLABEL                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - LOCATE THE FIRST BLANK COLUMN FOLLOWING THE   @Y30LB12*/
*/*            OPTIONAL LABEL FIELD.  IF ONLY A LABEL FIELD  @Y30LB12*/
*/*            IN THIS RECORD, WRITE WARNING MESSAGE         @Y30LB12*/
*/*            ICGDS202 AND READ ANOTHER RECORD VIA RETURN   @XD00153*/
*/*            TO 'READDATA'.                                @XD00153*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0096
*DOLABEL:                                                          0096
*   PROCEDURE;                      /*                       @Y30LB12*/
DOLABEL  STM   @14,@12,@SA00002                                    0096
*   DO I=1 TO 72 WHILE(SCANBUF(I)^='40'X);/*                 @Y30LB12*/
         LA    @10,1                                               0097
         ST    @10,I                                               0097
@DL00097 L     @05,NEXTCOL(,R4)                                    0097
         ALR   @05,@10                                             0097
         AL    @05,@CF00684                                        0097
         CLI   SCANBUF(@05),X'40'                                  0097
         BE    @DC00097                                            0097
*   END;                            /* WAS BLANK OR 72       @Y30LB12*/
         AH    @10,@CH00042                                        0098
         ST    @10,I                                               0098
         CH    @10,@CH00272                                        0098
         BNH   @DL00097                                            0098
@DC00097 DS    0H                                                  0099
*   IF I^=73                        /* IF NOT 72, THEN       @Y30LB12*/
*     THEN                          /* WAS END OF LABEL      @Y30LB12*/
         CLC   I(4),@CF00650                                       0099
         BE    @RF00099                                            0099
*     CALL FINDCMD;                 /* FIND START OF CMD     @Y30LB12*/
         BAL   @14,FINDCMD                                         0100
*   ELSE                            /* WAS COLUMN 72         @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0101
         B     @RC00099                                            0101
@RF00099 DS    0H                                                  0102
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00113*/
*       /* ICG202I CONTROL STATEMENT IGNORED                 @Y30LB12*/
*       /* *****************************************         @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0102
*       MSGNO=ICG202I;              /* ID = ICGDS202         @Y30LB12*/
         MVC   MSGNO(2,R4),ICG202I                                 0102
*       WARNING=WARNING+1;          /* BUMP WARN COUNT       @Y30LB12*/
         LA    @10,1                                               0103
         AH    @10,WARNING(,R4)                                    0103
         STH   @10,WARNING(,R4)                                    0103
*       GEN(LINK  EP=ICGDSMSG);     /* CALL MSG WRITER       @Y30LB12*/
         LINK  EP=ICGDSMSG
*     END;                          /*                       @Y30LB12*/
*   END DOLABEL;                    /* RET. TO READDATA      @Y30LB12*/
@EL00002 DS    0H                                                  0106
@EF00002 DS    0H                                                  0106
@ER00002 LM    @14,@12,@SA00002                                    0106
         BR    @14                                                 0106
*                                                                  0107
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - FINDCMD                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - SPACE OVER THE BLANKS THAT SEPARATE COMMAND   @Y30LB12*/
*/*            WORD FROM EITHER THE FIRST COLUMN OR FROM     @Y30LB12*/
*/*            THE LABEL FIELD.  IF NO COMMAND WORD IS       @Y30LB12*/
*/*            FOUND (REMAINDER OF THE STATEMENT IS BLANK),  @Y30LB12*/
*/*            RETURN TO CALLER. ELSE PROCESS COMMAND.       @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0107
*FINDCMD:                                                          0107
*   PROCEDURE;                      /*                       @Y30LB12*/
FINDCMD  STM   @14,@12,@SA00003                                    0107
*   DO J=I TO 72 WHILE(SCANBUF(J)='40'X);/*                  @Y30LB12*/
         L     @10,I                                               0108
         B     @DE00108                                            0108
@DL00108 L     @05,NEXTCOL(,R4)                                    0108
         ALR   @05,@10                                             0108
         AL    @05,@CF00684                                        0108
         CLI   SCANBUF(@05),X'40'                                  0108
         BNE   @DC00108                                            0108
*   END;                            /* NON-BLANK OR 72       @Y30LB12*/
         AH    @10,@CH00042                                        0109
@DE00108 ST    @10,J                                               0109
         CH    @10,@CH00272                                        0109
         BNH   @DL00108                                            0109
@DC00108 DS    0H                                                  0110
*   IF J^=73                        /* IF NOT 72, THEN       @Y30LB12*/
*     THEN                          /* START OF COMMAND      @Y30LB12*/
         CLC   J(4),@CF00650                                       0110
         BE    @RF00110                                            0110
*     CALL STARTCMD;                /* FIND END OF CMD       @Y30LB12*/
         BAL   @14,STARTCMD                                        0111
*   ELSE                            /* WAS COLUMN 72         @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0112
         B     @RC00110                                            0112
@RF00110 DS    0H                                                  0113
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00113*/
*       /* ICG202I CONTROL STATEMENT IGNORED                 @Y30LB12*/
*       /* *****************************************         @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0113
*       MSGNO=ICG202I;              /* ID = ICGDS202         @Y30LB12*/
         MVC   MSGNO(2,R4),ICG202I                                 0113
*       WARNING=WARNING+1;          /* BUMP WARN COUNT       @Y30LB12*/
         LA    @10,1                                               0114
         AH    @10,WARNING(,R4)                                    0114
         STH   @10,WARNING(,R4)                                    0114
*       GEN(LINK  EP=ICGDSMSG);     /* CALL MSG WRITER       @Y30LB12*/
         LINK  EP=ICGDSMSG
*     END;                          /*                       @Y30LB12*/
*   END FINDCMD;                    /* RETURN TO CALLER      @Y30LB12*/
@EL00003 DS    0H                                                  0117
@EF00003 DS    0H                                                  0117
@ER00003 LM    @14,@12,@SA00003                                    0117
         BR    @14                                                 0117
*                                                                  0118
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - STARTCMD                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - SAVE THE START OF THE COMMAND WORD IN         @Y30LB12*/
*/*            STARTCOL AND LOCATE THE FIRST BLANK           @Y30LB12*/
*/*            FOLLOWING COMMAND WORD.  WRITE ERROR          @Y30LB12*/
*/*            MESSAGE IF COMMAND WORD EXTENDS INTO          @Y30LB12*/
*/*            COLUMN 72.                                    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0118
*STARTCMD:                                                         0118
*   PROCEDURE;                      /*                       @Y30LB12*/
STARTCMD STM   @14,@12,@SA00004                                    0118
*   STARTCOL=ADDR(INBUF)+J-1;       /* SAVE START CMD        @Y30LB12*/
         L     @10,J                                               0119
         LA    @05,INBUF(,R4)                                      0119
         ALR   @05,@10                                             0119
         BCTR  @05,0                                               0119
         ST    @05,STARTCOL(,R4)                                   0119
*   DO K=J TO 72 WHILE(SCANBUF(K)^='40'X);/*                 @Y30LB12*/
         B     @DE00120                                            0120
@DL00120 L     @05,NEXTCOL(,R4)                                    0120
         ALR   @05,@10                                             0120
         AL    @05,@CF00684                                        0120
         CLI   SCANBUF(@05),X'40'                                  0120
         BE    @DC00120                                            0120
*   END;                            /* WAS BLANK OR 72       @Y30LB12*/
         AH    @10,@CH00042                                        0121
@DE00120 ST    @10,K                                               0121
         CH    @10,@CH00272                                        0121
         BNH   @DL00120                                            0121
@DC00120 DS    0H                                                  0122
*   IF K^=73                        /* IF NOT 72, THEN       @Y30LB12*/
*     THEN                          /* END OF CMD WORD       @Y30LB12*/
         CLC   K(4),@CF00650                                       0122
         BE    @RF00122                                            0122
*     CALL FINDKEY;                 /* FIND START OF KEY     @Y30LB12*/
         BAL   @14,FINDKEY                                         0123
*   ELSE                            /* WAS COLUMN 72         @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0124
         B     @RC00122                                            0124
@RF00122 DS    0H                                                  0125
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00113*/
*       /* ICG203I SYNTAX ERROR IN CONTINUATION              @Y30LB12*/
*       /* *****************************************         @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0125
*       MSGNO=ICG203I;              /* ID FOR ICGDS203       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG203I                                 0125
*       TERMINAT=TERMINAT+1;        /* BUMP TERM COUNT       @Y30LB12*/
         LA    @10,1                                               0126
         AH    @10,TERMINAT(,R4)                                   0126
         STH   @10,TERMINAT(,R4)                                   0126
*       GEN(LINK  EP=ICGDSMSG);     /* CALL MSG WRITER       @Y30LB12*/
         LINK  EP=ICGDSMSG
*     END;                          /*                       @Y30LB12*/
*   END STARTCMD;                   /* RETURN TO FINDCMD     @Y30LB12*/
@EL00004 DS    0H                                                  0129
@EF00004 DS    0H                                                  0129
@ER00004 LM    @14,@12,@SA00004                                    0129
         BR    @14                                                 0129
*                                                                  0130
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - FINDKEY                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - FIND THE FIRST CHARACTER OF KEYWORD OR        @Y30LB12*/
*/*            PARAMETER.  WHEN FOUND, ENTER ITS ADDRESS IN  @XD00153*/
*/*            'NEXTCOL', THEN CALL 'DOCMD' TO EXAMINE THE   @XD00153*/
*/*            COMMAND WORD.  IF NO DATA FOUND PRIOR TO      @XD00153*/
*/*            COLUMN 73, SET 'LASTPARM' FLAG TO '1'.        @XD00153*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0130
*FINDKEY:                                                          0130
*   PROCEDURE;                      /*                       @Y30LB12*/
FINDKEY  STM   @14,@12,@SA00005                                    0130
*   DO L=K TO 72 WHILE(SCANBUF(L)='40'X);/*                  @Y30LB12*/
         L     @10,K                                               0131
         B     @DE00131                                            0131
@DL00131 L     @05,NEXTCOL(,R4)                                    0131
         ALR   @05,@10                                             0131
         AL    @05,@CF00684                                        0131
         CLI   SCANBUF(@05),X'40'                                  0131
         BNE   @DC00131                                            0131
*   END;                            /* NON-BLANK OR 72       @Y30LB12*/
         AH    @10,@CH00042                                        0132
@DE00131 ST    @10,L                                               0132
         CH    @10,@CH00272                                        0132
         BNH   @DL00131                                            0132
@DC00131 DS    0H                                                  0133
*   IF L=73                         /* IF COL 72, THEN       @Y30LB12*/
*     THEN                          /* NO KEYWORD FOUND      @Y30LB12*/
         CLC   L(4),@CF00650                                       0133
         BNE   @RF00133                                            0133
*     LASTPARM='1'B;                /* STOP SCAN IN          @Y30LB12*/
         OI    LASTPARM(R4),B'00001000'                            0134
*   ELSE                                                           0135
*     ;                             /* CALLED PROCEDURES     @Y30LB12*/
@RF00133 DS    0H                                                  0136
*   NEXTCOL=ADDR(INBUF)+L-1;        /* START OF KEYWORD      @Y30LB12*/
         LA    @10,INBUF(,R4)                                      0136
         AL    @10,L                                               0136
         BCTR  @10,0                                               0136
         ST    @10,NEXTCOL(,R4)                                    0136
*   CALL DOCMD;                     /* EXAMINE CMD WORD      @Y30LB12*/
         BAL   @14,DOCMD                                           0137
*   END FINDKEY;                    /* RET. TO STARTCMD      @Y30LB12*/
@EL00005 DS    0H                                                  0138
@EF00005 DS    0H                                                  0138
@ER00005 LM    @14,@12,@SA00005                                    0138
         BR    @14                                                 0138
*                                                                  0139
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - DOCMD                                   @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - AT THIS POINT, SCANDATA IS POSITIONED TO      @Y30LB12*/
*/*            POINT AT THE FIRST CHARACTER OF COMMAND WORD  @Y30LB12*/
*/*            AND SCANBUF IS POSITIONED TO POINT AT THE     @Y30LB12*/
*/*            FIRST CHARACTER OF KEYWORD OR COLUMN 73,      @Y30LB12*/
*/*            WHICHEVER OCCURRED FIRST.                     @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            WE WILL NOW CHECK THE COMMAND WORD AGAINST    @Y30LB12*/
*/*            KNOWN COMMAND WORDS AND LINK TO THE ROUTINE   @Y30LB12*/
*/*            WHICH HANDLES THE MATCHING COMMAND WORD.      @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0139
*DOCMD:                                                            0139
*   PROCEDURE;                      /*                       @Y30LB12*/
DOCMD    STM   @14,@12,@SA00006                                    0139
*   KNOWN='0'B;                     /* MATCH FLAG OFF        @Y30LB12*/
         NI    KNOWN,B'01111111'                                   0140
*   IF SCANDATA(1:5)='DASD '        /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0141
         CLC   SCANDATA(5,@10),@CC00666                            0141
         BNE   @RF00141                                            0141
*     DO;                           /*                       @Y30LB12*/
*       KNOWN='1'B;                 /* MATCH FLAG ON         @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0143
*       GEN(LINK  EP=ICGDSS09);     /*                       @Y30LB12*/
         LINK  EP=ICGDSS09
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0146
*     ;                             /*                       @Y30LB12*/
@RF00141 DS    0H                                                  0147
*   IF SCANDATA(1:3)='SDG'&KNOWN='0'B/*                      @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0147
         CLC   SCANDATA(3,@10),@CC00667                            0147
         BNE   @RF00147                                            0147
         TM    KNOWN,B'10000000'                                   0147
         BNZ   @RF00147                                            0147
*     DO;                           /*                       @Y30LB12*/
*       KNOWN='1'B;                 /*                       @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0149
*       GEN(LINK  EP=ICGDSS01);     /*                       @Y30LB12*/
         LINK  EP=ICGDSS01
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0152
*     ;                             /*                       @Y30LB12*/
@RF00147 DS    0H                                                  0153
*   IF SCANDATA(1:9)='UPPERCON '&KNOWN='0'B/*                @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0153
         CLC   SCANDATA(9,@10),@CC00668                            0153
         BNE   @RF00153                                            0153
         TM    KNOWN,B'10000000'                                   0153
         BNZ   @RF00153                                            0153
*     DO;                           /*                       @Y30LB12*/
*       KNOWN='1'B;                 /*                       @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0155
*       GEN(LINK  EP=ICGDSS04);     /*                       @Y30LB12*/
         LINK  EP=ICGDSS04
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0158
*     ;                             /*                       @Y30LB12*/
@RF00153 DS    0H                                                  0159
*   IF SCANDATA(1:9)='LOWERCON '&KNOWN='0'B/*                @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0159
         CLC   SCANDATA(9,@10),@CC00670                            0159
         BNE   @RF00159                                            0159
         TM    KNOWN,B'10000000'                                   0159
         BNZ   @RF00159                                            0159
*     DO;                           /*                       @Y30LB12*/
*       KNOWN='1'B;                 /*                       @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0161
*       GEN(LINK  EP=ICGDSS05);     /*                       @Y30LB12*/
         LINK  EP=ICGDSS05
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0164
*     ;                             /*                       @Y30LB12*/
@RF00159 DS    0H                                                  0165
*   IF SCANDATA(1:9)='CPUCONFG '&KNOWN='0'B/*                @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0165
         CLC   SCANDATA(9,@10),@CC00672                            0165
         BNE   @RF00165                                            0165
         TM    KNOWN,B'10000000'                                   0165
         BNZ   @RF00165                                            0165
*     DO;                           /*                       @Y30LB12*/
*       KNOWN='1'B;                 /*                       @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0167
*       GEN(LINK  EP=ICGDSS02);     /*                       @Y30LB12*/
         LINK  EP=ICGDSS02
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0170
*     ;                             /*                       @Y30LB12*/
@RF00165 DS    0H                                                  0171
*   IF SCANDATA(1:3)='MSF'&KNOWN='0'B/*                      @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0171
         CLC   SCANDATA(3,@10),@CC00674                            0171
         BNE   @RF00171                                            0171
         TM    KNOWN,B'10000000'                                   0171
         BNZ   @RF00171                                            0171
*     DO;                           /*                       @Y30LB12*/
*       KNOWN='1'B;                 /*                       @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0173
*       GEN(LINK  EP=ICGDSS06);     /*                       @Y30LB12*/
         LINK  EP=ICGDSS06
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0176
*     ;                             /*                       @Y30LB12*/
@RF00171 DS    0H                                                  0177
*   IF SCANDATA(1:7)='CREATE '&KNOWN='0'B/*                  @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0177
         CLC   SCANDATA(7,@10),@CC00675                            0177
         BNE   @RF00177                                            0177
         TM    KNOWN,B'10000000'                                   0177
         BNZ   @RF00177                                            0177
*     DO;                           /*                       @Y30LB12*/
*       KNOWN='1'B;                 /*                       @Y30LB12*/
         OI    KNOWN,B'10000000'                                   0179
*       GEN(LINK  EP=ICGDSS08);     /*                       @Y30LB12*/
         LINK  EP=ICGDSS08
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0182
*     ;                             /*                       @Y30LB12*/
@RF00177 DS    0H                                                  0183
*   IF KNOWN^='1'B                  /* IF NO MATCH TO        @Y30LB12*/
*     THEN                          /* COMMAND WORD          @Y30LB12*/
         TM    KNOWN,B'10000000'                                   0183
         BO    @RF00183                                            0183
*     DO;                           /*                       @Y30LB12*/
*                                                                  0184
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00113*/
*       /* ICG204I INVALID COMMAND WORD                      @Y30LB12*/
*       /* *****************************************         @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0185
*       MSGNO=ICG204I;              /* ID FOR ICGDS204       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG204I                                 0185
*       TERMINAT=TERMINAT+1;        /* BUMP TERM COUNT       @Y30LB12*/
         LA    @10,1                                               0186
         AH    @10,TERMINAT(,R4)                                   0186
         STH   @10,TERMINAT(,R4)                                   0186
*       GEN(LINK  EP=ICGDSMSG);     /* CALL MSG WRITER       @Y30LB12*/
         LINK  EP=ICGDSMSG
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0189
*     ;                             /*                       @Y30LB12*/
@RF00183 DS    0H                                                  0190
*   END DOCMD;                      /* RETURN TO FINDKEY     @Y30LB12*/
@EL00006 DS    0H                                                  0190
@EF00006 DS    0H                                                  0190
@ER00006 LM    @14,@12,@SA00006                                    0190
         BR    @14                                                 0190
*                                                                  0191
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/*            DCB OPEN EXIT FOR SYSIN.  THIS EXIT           @XD00153*/
*/*            ESTABLISHES THE BLOCKSIZE OF SYSIN AS 80 IF   @Y30LB12*/
*/*            NOT SUPPLIED ON THE DD STATEMENT.  ALSO SETS  @Y30LB12*/
*/*            RECFM TO FIXED-BLOCKED.  IF BLOCKSIZE NOT     @Y30LB12*/
*/*            A MULTIPLE OF 80, BLOCKSIZE IS SET TO 80.     @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0191
*DCBROUT2:                                                         0191
*   SAVE14=R14;                     /* SAVE OPEN'S REG14     @Y30LB12*/
DCBROUT2 ST    R14,SAVE14(,R4)                                     0191
*   DCBPTR=ADDR(READDCB);           /* SET DCB OVERLAY       @Y30LB12*/
         LA    @10,READDCB(,R4)                                    0192
         ST    @10,DCBPTR(,R4)                                     0192
*   IF DCBBLKSI=0                   /* IF NO BLOCKSIZE,      @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         AH    @10,@CH00276                                        0193
         LH    @05,DCBBLKSI(,@10)                                  0193
         LTR   @05,@05                                             0193
         BNZ   @RF00193                                            0193
*     DCBBLKSI=80;                  /* DEFAULT TO 80         @Y30LB12*/
         MVC   DCBBLKSI(2,@10),@CH00054                            0194
*   ELSE                                                           0195
*     ;                             /*                       @Y30LB12*/
@RF00193 DS    0H                                                  0196
*   LEFTOVER=DCBBLKSI//DCBLRECL;    /* IF BLKSIZE NOT        @Y30LB12*/
         L     @10,DCBPTR(,R4)                                     0196
         LA    @05,52                                              0196
         ALR   @05,@10                                             0196
         LH    @02,DCBBLKSI(,@05)                                  0196
         SRDA  @02,32                                              0196
         LH    @10,DCBLRECL+72(,@10)                               0196
         DR    @02,@10                                             0196
         ST    @02,LEFTOVER                                        0196
*   IF LEFTOVER^=0                  /* MULTIPLE OF LRECL     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LTR   @02,@02                                             0197
         BZ    @RF00197                                            0197
*     DCBBLKSI=80;                  /* SET BLKSIZE TO 80     @Y30LB12*/
         MVC   DCBBLKSI(2,@05),@CH00054                            0198
*   ELSE                                                           0199
*     ;                             /*                       @Y30LB12*/
@RF00197 DS    0H                                                  0200
*   DCBRECFM='90'X;                 /* SET RECFM TO FB       @Y30LB12*/
         L     @10,DCBPTR(,R4)                                     0200
         MVI   DCBRECFM+28(@10),X'90'                              0200
*   R14=SAVE14;                     /* RESTORE REG 14        @Y30LB12*/
         L     R14,SAVE14(,R4)                                     0201
*   GEN(BR    14);                  /* RETURN TO OPEN        @Y30LB12*/
         BR    14
*                                                                  0203
*/********************************************************** @YD00113*/
*/* SYNAD EXIT FOR SYSIN, TAKEN FOR READ ERRORS.             @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0203
*READERR:                                                          0203
*   ;                               /*                       @Y30LB12*/
READERR  DS    0H                                                  0204
*   GEN(SYNADAF ACSMETH=QSAM);      /*                       @Y30LB12*/
         SYNADAF ACSMETH=QSAM
*   GEN(MVC   OUTBUF2+30(79,R4),49(1));/*                    @YM32166*/
         MVC   OUTBUF2+30(79,R4),49(1)
*   OUTBUF2(1:30)=ICGDS201;         /*                       @YM32166*/
         MVC   OUTBUF2(30,R4),ICGDS201                             0206
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0207
*   GEN(LINK  EP=ICGDSMSG);         /* PRINT SYNAD MSG       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   GEN(SYNADRLS);                  /*                       @Y30LB12*/
         SYNADRLS
*   RETCODE=16;                     /* RETURN CODE TO 16     @Y30LB12*/
         MVC   RETCODE(2,R4),@CH00162                              0210
*   TERMINAT=TERMINAT+1;            /* BUMP TERM COUNT       @Y30LB12*/
         LA    @10,1                                               0211
         AH    @10,TERMINAT(,R4)                                   0211
         STH   @10,TERMINAT(,R4)                                   0211
*   GEN(BR    R14);                 /* RETURN TO IOS         @Y30LB12*/
         BR    R14
*   GENERATE;                                                      0213
*                                                         /*@Y30LB12*/
PATCHSCN DC    32C'PATCHSCN'                              /*@Y30LB12*/
MYDCB2   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=ENDDATA,          **
               EXLST=DCBROUT2,EROPT=ACC,SYNAD=READERR,LRECL=80
*   END ICGDSSCN                    /*                       @Y30LB12*/
*                                                                  0214
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*                                                                  0214
*       ;                                                          0214
         B     @EL00001                                            0214
@DATA    DS    0H
@CH00068 DC    H'4'
@CH00112 DC    H'9'
@CH00162 DC    H'16'
@CH00111 DC    H'30'
@CH00276 DC    H'52'
@CH00272 DC    H'72'
@CH00054 DC    H'80'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00005 DS    15F
@SA00006 DS    15F
@TF00001 DS    F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSSCN CSECT
         DS    0F
@CF00042 DC    F'1'
@CH00042 EQU   @CF00042+2
@CF00650 DC    F'73'
@CF00683 DC    F'-2'
@CF00684 DC    F'-1'
@DATD    DSECT
         DS    0D
SCNMODWK DS    CL21
         ORG   SCNMODWK
LEFTOVER DS    FL4
I        DS    FL4
J        DS    FL4
K        DS    FL4
L        DS    FL4
LOCALFLG DS    BL1
         ORG   LOCALFLG
KNOWN    DS    BL1
@NM00049 EQU   LOCALFLG+0
         ORG   SCNMODWK+21
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSSCN CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ICG200I  DC    H'200'
ICG202I  DC    H'202'
ICG203I  DC    H'203'
ICG204I  DC    H'204'
@CC00668 DC    C'UPPERCON '
@CC00670 DC    C'LOWERCON '
@CC00672 DC    C'CPUCONFG '
@CC00675 DC    C'CREATE '
@CC00666 DC    C'DASD '
@CC00667 DC    C'SDG'
@CC00674 DC    C'MSF'
@CB00630 DC    X'0000000000000000'
ICGDS201 DC    CL30' ICG201I I/O ERROR ON SYSIN   '
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R4       EQU   @04
R0       EQU   @00
R1       EQU   @01
R14      EQU   @14
COMTAB   EQU   0
READER   EQU   COMTAB+256
READDCB  EQU   READER
READFLAG EQU   READER+96
READTERM EQU   READFLAG
ENDSCAN  EQU   READFLAG
LASTPARM EQU   READFLAG
PCHBF    EQU   READER+99
INBUF    EQU   READER+100
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
PRINTER  EQU   COMTAB+464
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
RETCODE  EQU   MESSAGES
MSGNO    EQU   MESSAGES+2
WARNING  EQU   MESSAGES+4
TERMINAT EQU   MESSAGES+6
SPECLMSG EQU   MESSAGES+18
PRNTCARD EQU   SPECLMSG
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
OPENLIST EQU   GENIO
DCBPTR   EQU   GENIO+4
EXLST    EQU   GENIO+8
SAVE14   EQU   GENIO+12
COMPTR2  EQU   GENIO+16
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
SVSYSIN  EQU   SAVEDDS
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
TODS1    EQU   RSGTODS
TODS2    EQU   RSGTODS+1
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSDS2  EQU   DSPAIRS
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
CPUASSOC EQU   COMTAB+3026
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
TORSG1   EQU   DSENTRY
TORSG2   EQU   DSENTRY+1
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
SCANDATA EQU   0
SCANBUF  EQU   0
IHADCB   EQU   0
IHADCS05 EQU   0
DCBMODE  EQU   IHADCS05
DCBSTACK EQU   DCBMODE
DCBFUNC  EQU   IHADCS05+3
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBBLKSI EQU   IHADCS36+10
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBLRECL EQU   IHADCS38+10
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
IHADCS40 EQU   0
DCBEOBAD EQU   IHADCS40
DCBCCCW  EQU   IHADCS40+4
DCBRECAD EQU   DCBCCCW
DCBRECBT EQU   DCBRECAD
DCBRCREL EQU   DCBRECBT
@NM00045 EQU   IHADCS40+12
DCBEROPT EQU   @NM00045
MYDCB2A  EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DCBEOB   EQU   IHADCS40+20
DCBPRECL EQU   IHADCS40+18
@NM00048 EQU   IHADCS40+16
@NM00047 EQU   @NM00045+1
@NM00046 EQU   DCBEROPT
DCBERABE EQU   DCBEROPT
DCBERSKP EQU   DCBEROPT
DCBERACC EQU   DCBEROPT
@NM00044 EQU   IHADCS40+10
@NM00043 EQU   IHADCS40+9
@NM00042 EQU   IHADCS40+8
DCBRECA  EQU   DCBRECAD+1
@NM00041 EQU   DCBRECBT
DCBRCFGT EQU   DCBRCREL
DCBRCTRU EQU   DCBRCREL
DCBLCCW  EQU   DCBEOBAD
DCBNOTE  EQU   DCBCNTRL
@NM00040 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00039 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00038 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00037 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00036 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00035 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00034 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
@NM00033 EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUTA  EQU   DCBGETA
@NM00032 EQU   DCBPUT
DCBREADA EQU   DCBWRITA
@NM00031 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00030 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBIFPCT EQU   DCBIFLGS
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00029 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBIBPCT EQU   DCBIFLG
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00028 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00027 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00026 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00025 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
DCBDSGMQ EQU   DCBDSRG1
DCBDSGCQ EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
@NM00024 EQU   DCBFUNC
DCBFNCBT EQU   DCBFUNC
DCBFNCBX EQU   DCBFUNC
DCBFNCBD EQU   DCBFUNC
DCBFNCBW EQU   DCBFUNC
DCBFNCBP EQU   DCBFUNC
DCBFNCBR EQU   DCBFUNC
DCBFNCBI EQU   DCBFUNC
@NM00023 EQU   IHADCS05+2
@NM00022 EQU   IHADCS05+1
DCBSTCK1 EQU   DCBSTACK
DCBSTCK2 EQU   DCBSTACK
@NM00021 EQU   DCBSTACK
DCBMODER EQU   DCBSTACK
DCBMODEO EQU   DCBSTACK
DCBMODEE EQU   DCBSTACK
DCBMODEC EQU   DCBSTACK
@NM00020 EQU   IHADCB
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
CPUREFNO EQU   RSGUCB+6
RSGCPUID EQU   RSGUCB+1
@NM00019 EQU   RSGFLAGS
CISPEC   EQU   RSGFLAGS
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00018 EQU   @NM00017
PRNTONLY EQU   @NM00017
UPDCREAT EQU   @NM00017
NEWCREAT EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
CPUSPEC  EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00013 EQU   CPUFLAG1
TOMPCPU  EQU   CPU+5
CPUID    EQU   CPU
CPUNUM   EQU   CPUASSOC
SPNRSGNO EQU   PHYSTYPE+1
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSICEB EQU   MERLICEB
PHYSMERL EQU   MERLICEB
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
PARMPTR  EQU   INVOKED
BUILDPTR EQU   GENIO+20
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
@NM00006 EQU   MESSAGES+19
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00005 EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00003 EQU   READER+206
SCANLEN  EQU   READER+204
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
PARMBIT  EQU   READFLAG
KEYBIT   EQU   READFLAG
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00087 EQU   @EL00001
@RC00099 EQU   @EL00002
@RC00110 EQU   @EL00003
@RC00122 EQU   @EL00004
@ENDDATA EQU   *
         END   ICGDSSCN,(C'PLS2031',0603,76337)
