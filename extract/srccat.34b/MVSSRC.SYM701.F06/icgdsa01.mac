         TITLE 'ICGDSA01 MSC TABLE CREATE, ANALYZE CPU ASSOCIATIONS    *
                        '
ICGDSA01 CSECT ,                                                   0001
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0026
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            INITIALIZE FLAG FIELDS, THEN ROUTE CONTROL    @YD00113*/
*/*            TO SUBROUTINES.  ON RETURN FROM FINAL SUB-    @YD00113*/
*/*            ROUTINE, RETURN TO ICGDSANL.                  @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0026
*   MSCFLAGS=CLEARFLG;              /*                       @YD00113*/
         MVI   MSCFLAGS,B'00000000'                                0026
*   FLAGS=CLEARFLG;                 /*                       @YD00113*/
*                                                                  0027
         MVI   FLAGS,B'00000000'                                   0027
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @YD00113*/
*   /* CALL A01PROC1 TO CHECK MULTIPROCESSING                @YD00113*/
*   /* ENVIRONMENT.                                          @YD00113*/
*   /* ******************************************            @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0028
*   CALL A01PROC1;                  /*                       @Y30LB12*/
*                                                                  0028
         BAL   @14,A01PROC1                                        0028
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @YD00113*/
*   /* CALL A01PROC2 TO VERIFY CPUID SPECIFICATION           @YD00113*/
*   /* ******************************************            @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0029
*   CALL A01PROC2;                  /*                       @Y30LB12*/
*                                                                  0029
         BAL   @14,A01PROC2                                        0029
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @YD00113*/
*   /* CALL A01PROC3 TO VERIFY CPUID ENTRIES IN              @YD00113*/
*   /* AN 'UPPERCON' STATEMENT AND 'CPUASSOC' TABLE          @YD00113*/
*   /* ******************************************            @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0030
*   CALL A01PROC3;                  /*                       @Y30LB12*/
         BAL   @14,A01PROC3                                        0030
*   RETURN;                         /*                       @Y30LB12*/
@EL00001 L     @13,4(,@13)                                         0031
@EF00001 L     @00,@SIZDATD                                        0031
         LR    @01,@11                                             0031
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0031
         BR    @14                                                 0031
*                                                                  0032
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - A01PROC1                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - LOOP THRU ALL CPUID'S PRESENT IN THE TABLE    @YD00113*/
*/*            TESTING FIRST THAT EACH CPU USES A UNIQUE     @YD00113*/
*/*            INTERFACE INTO THE MSC.  IF NOT, SET AN ERROR @YD00113*/
*/*            FLAG WHICH WILL CAUSE ERROR MESSAGE ICG304I   @YD00113*/
*/*            TO BE PRINTED.                                @YD00113*/
*/*            AFTER SUCCESSFUL INTERFACE TEST, TEST FOR     @YD00113*/
*/*            MULTIPROCESSOR.  IF IT IS, CALL 'CHECKMP' TO  @YD00113*/
*/*            CROSS CHECK CPUID'S                           @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0032
*A01PROC1:                                                         0032
*   PROCEDURE;                      /*                       @Y30LB12*/
A01PROC1 STM   @14,@12,@SA00002                                    0032
*   DO INDEX=1 TO CPUNUM;           /* COUNT OF CPUS         @Y30LB12*/
         LA    INDEX,1                                             0033
         B     @DE00033                                            0033
@DL00033 DS    0H                                                  0034
*     IF CPUSPEC(INDEX)='1'B        /* IF CPU SPECIFIED      @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @10,INDEX                                           0034
         SLA   @10,3                                               0034
         ST    @10,@TF00001                                        0034
         ALR   @10,R4                                              0034
         TM    CPUSPEC-8(@10),B'10000000'                          0034
         BNO   @RF00034                                            0034
*       DO;                         /*                       @Y30LB12*/
*         ERROR='0'B;               /* ERROR INTERFACE       @Y30LB12*/
         NI    ERROR,B'11011111'                                   0036
*         IF CPUMSCIN(INDEX)=AINT   /* 'A' INTERFACE         @YD00113*/
*           THEN                    /*                       @Y30LB12*/
         LR    @10,R4                                              0037
         AL    @10,@TF00001                                        0037
         TM    CPUMSCIN-8(@10),B'00000011'                         0037
         BNZ   @RF00037                                            0037
*           IF INTA='0'B            /* IF NOT USED           @Y30LB12*/
*             THEN                  /*                       @Y30LB12*/
         TM    INTA,B'10000000'                                    0038
         BNZ   @RF00038                                            0038
*             INTA='1'B;            /* MARK AS USED          @Y30LB12*/
         OI    INTA,B'10000000'                                    0039
*           ELSE                    /*                       @Y30LB12*/
*             ERROR='1'B;           /* SET ERROR FLAG        @Y30LB12*/
         B     @RC00038                                            0040
@RF00038 OI    ERROR,B'00100000'                                   0040
*         ELSE                                                     0041
*           ;                       /*                       @Y30LB12*/
@RF00037 DS    0H                                                  0042
*         IF CPUMSCIN(INDEX)=BINT   /* 'B' INTERFACE         @YD00113*/
*           THEN                    /*                       @Y30LB12*/
@RC00037 LR    @10,INDEX                                           0042
         SLA   @10,3                                               0042
         ALR   @10,R4                                              0042
         TM    CPUMSCIN-8(@10),B'00000001'                         0042
         BNO   @RF00042                                            0042
         TM    CPUMSCIN-8(@10),B'00000010'                         0042
         BNZ   @RF00042                                            0042
*           IF INTB='0'B            /* IF NOT USED           @Y30LB12*/
*             THEN                  /*                       @Y30LB12*/
         TM    INTB,B'01000000'                                    0043
         BNZ   @RF00043                                            0043
*             INTB='1'B;            /* MARK AS USED          @Y30LB12*/
         OI    INTB,B'01000000'                                    0044
*           ELSE                    /*                       @Y30LB12*/
*             ERROR='1'B;           /* SET ERROR FLAG        @Y30LB12*/
         B     @RC00043                                            0045
@RF00043 OI    ERROR,B'00100000'                                   0045
*         ELSE                                                     0046
*           ;                       /*                       @Y30LB12*/
@RF00042 DS    0H                                                  0047
*         IF CPUMSCIN(INDEX)=CINT   /* 'C' INTERFACE         @YD00113*/
*           THEN                    /*                       @Y30LB12*/
@RC00042 LR    @10,INDEX                                           0047
         SLA   @10,3                                               0047
         ALR   @10,R4                                              0047
         TM    CPUMSCIN-8(@10),B'00000010'                         0047
         BNO   @RF00047                                            0047
         TM    CPUMSCIN-8(@10),B'00000001'                         0047
         BNZ   @RF00047                                            0047
*           IF INTC='0'B            /* IF NOT USED           @Y30LB12*/
*             THEN                  /*                       @Y30LB12*/
         TM    INTC,B'00100000'                                    0048
         BNZ   @RF00048                                            0048
*             INTC='1'B;            /* MARK AS USED          @Y30LB12*/
         OI    INTC,B'00100000'                                    0049
*           ELSE                    /*                       @Y30LB12*/
*             ERROR='1'B;           /* SET ERROR FLAG        @Y30LB12*/
         B     @RC00048                                            0050
@RF00048 OI    ERROR,B'00100000'                                   0050
*         ELSE                                                     0051
*           ;                       /*                       @Y30LB12*/
@RF00047 DS    0H                                                  0052
*         IF CPUMSCIN(INDEX)=DINT   /* 'D' INTERFACE         @YD00113*/
*           THEN                    /*                       @Y30LB12*/
@RC00047 LR    @10,INDEX                                           0052
         SLA   @10,3                                               0052
         ALR   @10,R4                                              0052
         TM    CPUMSCIN-8(@10),B'00000011'                         0052
         BNO   @RF00052                                            0052
*           IF INTD='0'B            /* IF NOT USED           @Y30LB12*/
*             THEN                  /*                       @Y30LB12*/
         TM    INTD,B'00010000'                                    0053
         BNZ   @RF00053                                            0053
*             INTD='1'B;            /* MARK AS USED          @Y30LB12*/
         OI    INTD,B'00010000'                                    0054
*           ELSE                    /*                       @Y30LB12*/
*             ERROR='1'B;           /* SET ERROR FLAG        @Y30LB12*/
         B     @RC00053                                            0055
@RF00053 OI    ERROR,B'00100000'                                   0055
*         ELSE                                                     0056
*           ;                       /*                       @Y30LB12*/
*                                                                  0056
@RF00052 DS    0H                                                  0057
*         /***********************************************************/
*         /*                                                         */
*         /* *********************************************** @YD00142*/
*         /* PERFORM SAME CHECKS FOR ALTERNATE MSC           @YD00142*/
*         /* INTERFACE, IF SPECIFIED.                        @YD00142*/
*         /* *********************************************** @YD00142*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0057
*         IF CPUALTFL(INDEX)='1'B   /*                       @YD00142*/
*           THEN                    /*                       @YD00142*/
@RC00052 LR    @10,INDEX                                           0057
         SLA   @10,3                                               0057
         ST    @10,@TF00001                                        0057
         ALR   @10,R4                                              0057
         TM    CPUALTFL-8(@10),B'00100000'                         0057
         BNO   @RF00057                                            0057
*           DO;                     /*                       @YD00142*/
*             IF ALTMSCIN(INDEX)=AINT/*                      @YD00142*/
*               THEN                /*                       @YD00142*/
         LR    @10,R4                                              0059
         AL    @10,@TF00001                                        0059
         TM    ALTMSCIN-8(@10),B'00000011'                         0059
         BNZ   @RF00059                                            0059
*               IF INTA='0'B        /*                       @YD00142*/
*                 THEN              /*                       @YD00142*/
         TM    INTA,B'10000000'                                    0060
         BNZ   @RF00060                                            0060
*                 INTA='1'B;        /*                       @YD00142*/
         OI    INTA,B'10000000'                                    0061
*               ELSE                /*                       @YD00142*/
*                 ERROR='1'B;       /*                       @YD00142*/
         B     @RC00060                                            0062
@RF00060 OI    ERROR,B'00100000'                                   0062
*             IF ALTMSCIN(INDEX)=BINT/*                      @YD00142*/
*               THEN                /*                       @YD00142*/
@RC00060 DS    0H                                                  0063
@RF00059 LR    @10,INDEX                                           0063
         SLA   @10,3                                               0063
         ALR   @10,R4                                              0063
         TM    ALTMSCIN-8(@10),B'00000001'                         0063
         BNO   @RF00063                                            0063
         TM    ALTMSCIN-8(@10),B'00000010'                         0063
         BNZ   @RF00063                                            0063
*               IF INTB='0'B        /*                       @YD00142*/
*                 THEN              /*                       @YD00142*/
         TM    INTB,B'01000000'                                    0064
         BNZ   @RF00064                                            0064
*                 INTB='1'B;        /*                       @YD00142*/
         OI    INTB,B'01000000'                                    0065
*               ELSE                /*                       @YD00142*/
*                 ERROR='1'B;       /*                       @YD00142*/
         B     @RC00064                                            0066
@RF00064 OI    ERROR,B'00100000'                                   0066
*             IF ALTMSCIN(INDEX)=CINT/*                      @YD00142*/
*               THEN                /*                       @YD00142*/
@RC00064 DS    0H                                                  0067
@RF00063 LR    @10,INDEX                                           0067
         SLA   @10,3                                               0067
         ALR   @10,R4                                              0067
         TM    ALTMSCIN-8(@10),B'00000010'                         0067
         BNO   @RF00067                                            0067
         TM    ALTMSCIN-8(@10),B'00000001'                         0067
         BNZ   @RF00067                                            0067
*               IF INTC='0'B        /*                       @YD00142*/
*                 THEN              /*                       @YD00142*/
         TM    INTC,B'00100000'                                    0068
         BNZ   @RF00068                                            0068
*                 INTC='1'B;        /*                       @YD00142*/
         OI    INTC,B'00100000'                                    0069
*               ELSE                /*                       @YD00142*/
*                 ERROR='1'B;       /*                       @YD00142*/
         B     @RC00068                                            0070
@RF00068 OI    ERROR,B'00100000'                                   0070
*             IF ALTMSCIN(INDEX)=DINT/*                      @YD00142*/
*               THEN                /*                       @YD00142*/
@RC00068 DS    0H                                                  0071
@RF00067 LR    @10,INDEX                                           0071
         SLA   @10,3                                               0071
         ALR   @10,R4                                              0071
         TM    ALTMSCIN-8(@10),B'00000011'                         0071
         BNO   @RF00071                                            0071
*               IF INTD='0'B        /*                       @YD00142*/
*                 THEN              /*                       @YD00142*/
         TM    INTD,B'00010000'                                    0072
         BNZ   @RF00072                                            0072
*                 INTD='1'B;        /*                       @YD00142*/
         OI    INTD,B'00010000'                                    0073
*               ELSE                /*                       @YD00142*/
*                 ERROR='1'B;       /*                       @YD00142*/
         B     @RC00072                                            0074
@RF00072 OI    ERROR,B'00100000'                                   0074
*           END;                                                   0075
@RC00072 DS    0H                                                  0075
@RF00071 DS    0H                                                  0076
*         IF ERROR='1'B             /* IF ERROR FLAG SET     @Y30LB12*/
*           THEN                    /*                       @Y30LB12*/
@RF00057 TM    ERROR,B'00100000'                                   0076
         BNO   @RF00076                                            0076
*           DO;                     /*                       @Y30LB12*/
*                                                                  0077
*             /*******************************************************/
*             /*                                                     */
*             /* *****************************************   @Y30LB12*/
*             /* ICG304I CPU XXXXXXXXXX USING PREVIOUSLY     @Y30LB12*/
*             /* SPECIFIED MSC INTERFACE                     @Y30LB12*/
*             /* *****************************************   @Y30LB12*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0078
*             OUTBUF2(1:64)=ICGDS304;/*                      @Y30LB12*/
         MVC   OUTBUF2(64,R4),ICGDS304                             0078
*             PACKED(1:5)=CPUID(INDEX);/*                    @Y30LB12*/
         LR    @10,INDEX                                           0079
         SLA   @10,3                                               0079
         ALR   @10,R4                                              0079
         MVC   PACKED(5),CPUID-8(@10)                              0079
*             PACKED(6)='0F'X;      /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0080
*             GEN(UNPK  UNPACKED(11),PACKED(6));/*           @Y30LB12*/
         UNPK  UNPACKED(11),PACKED(6)
*             OUTBUF2(14:23)=UNPACKED(1:10);/*               @Y30LB12*/
         MVC   OUTBUF2+13(10,R4),UNPACKED                          0082
*             CALL PUTIT1;          /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0083
*           END;                    /*                       @Y30LB12*/
*         ELSE                                                     0085
*           ;                       /*                       @Y30LB12*/
@RF00076 DS    0H                                                  0086
*       END;                        /* END OF MSC CHECK      @Y30LB12*/
*     IF CPUTIGHT(INDEX)='1'B       /* IF MP CPU             @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
@RF00034 LR    @10,INDEX                                           0087
         SLA   @10,3                                               0087
         ALR   @10,R4                                              0087
         TM    CPUTIGHT-8(@10),B'01000000'                         0087
         BNO   @RF00087                                            0087
*       CALL CHECKMP;               /* TO CROSS-CHECK MP     @Y30LB12*/
         BAL   @14,CHECKMP                                         0088
*     ELSE                                                         0089
*       ;                           /*                       @Y30LB12*/
@RF00087 DS    0H                                                  0090
*   END;                            /* OF CPU COUNT          @Y30LB12*/
         AH    INDEX,@CH00042                                      0090
@DE00033 CH    INDEX,CPUNUM(,R4)                                   0090
         BNH   @DL00033                                            0090
*   END A01PROC1;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00002 DS    0H                                                  0091
@EF00002 DS    0H                                                  0091
@ER00002 LM    @14,@12,@SA00002                                    0091
         BR    @14                                                 0091
*                                                                  0092
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - A01PROC2                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CHECK TO BE SURE THAT EVERY CPUID THAT        @Y30LB12*/
*/*            APPEARS IN THE TABLE WAS ACTUALLY             @Y30LB12*/
*/*            SPECIFIED AS CPUID.                           @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0092
*A01PROC2:                                                         0092
*   PROCEDURE;                      /*                       @Y30LB12*/
A01PROC2 STM   @14,@12,@SA00003                                    0092
*   DO INDEX=1 TO CPUNUM;           /* COUNT OF CPUS         @Y30LB12*/
         LA    INDEX,1                                             0093
         B     @DE00093                                            0093
@DL00093 DS    0H                                                  0094
*     IF CPUSPEC(INDEX)='0'B        /* CPU NOT SPECIFIED     @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @10,INDEX                                           0094
         SLA   @10,3                                               0094
         ST    @10,@TF00001                                        0094
         ALR   @10,R4                                              0094
         TM    CPUSPEC-8(@10),B'10000000'                          0094
         BNZ   @RF00094                                            0094
*       DO;                         /*                       @Y30LB12*/
*                                                                  0095
*         /***********************************************************/
*         /*                                                         */
*         /* *****************************************       @Y30LB12*/
*         /* ICG303I CPU XXXXXXXXXX IS REFERENCED BY         @Y30LB12*/
*         /* ANOTHER CPU BUT NOT SPECIFIED AS CPUID          @Y30LB12*/
*         /* *****************************************       @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0096
*         OUTBUF2(1:79)=ICGDS303;   /*                       @Y30LB12*/
         MVC   OUTBUF2(79,R4),ICGDS303                             0096
*         PACKED(1:5)=CPUID(INDEX); /*                       @Y30LB12*/
         LR    @10,R4                                              0097
         AL    @10,@TF00001                                        0097
         MVC   PACKED(5),CPUID-8(@10)                              0097
*         PACKED(6)='0F'X;          /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0098
*         GEN(UNPK  UNPACKED(11),PACKED(6));/*               @Y30LB12*/
         UNPK  UNPACKED(11),PACKED(6)
*         OUTBUF2(14:23)=UNPACKED(1:10);/*                   @Y30LB12*/
         MVC   OUTBUF2+13(10,R4),UNPACKED                          0100
*         CALL PUTIT1;              /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0101
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0103
*       ;                           /*                       @Y30LB12*/
@RF00094 DS    0H                                                  0104
*   END;                            /* END OF DO LOOP        @Y30LB12*/
         AH    INDEX,@CH00042                                      0104
@DE00093 CH    INDEX,CPUNUM(,R4)                                   0104
         BNH   @DL00093                                            0104
*   END A01PROC2;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00003 DS    0H                                                  0105
@EF00003 DS    0H                                                  0105
@ER00003 LM    @14,@12,@SA00003                                    0105
         BR    @14                                                 0105
*                                                                  0106
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - A01PROC3                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - FOR EACH CPUID SPECIFIED IN AN UPPERCON       @Y30LB12*/
*/*            STATEMENT, FIND THE COMPARABLE ENTRY IN       @Y30LB12*/
*/*            CPUASSOC, AND PUT THE LOGICAL CPUID           @Y30LB12*/
*/*            BACK INTO THE CONFGCON ENTRY.  IF NO          @Y30LB12*/
*/*            CORRESPONDING ENTRY CAN BE FOUND, WRITE       @Y30LB12*/
*/*            AN ERROR MESSAGE.                             @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0106
*A01PROC3:                                                         0106
*   PROCEDURE;                      /*                       @Y30LB12*/
A01PROC3 STM   @14,@12,@SA00004                                    0106
*   DO I=1 TO MAXSACI;              /* 48 INTERFACES         @YD00113*/
         LA    I,1                                                 0107
@DL00107 DS    0H                                                  0108
*     HAVEHIT='0'B;                 /* MATCH FLAG            @Y30LB12*/
         NI    HAVEHIT,B'01111111'                                 0108
*     IF CISPEC(I)='1'B             /* CHANNEL INTERFACE     @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @10,I                                               0109
         MH    @10,@CH00112                                        0109
         L     @05,COMPTR2(,R4)                                    0109
         ALR   @05,@10                                             0109
         TM    CISPEC-9(@05),B'10000000'                           0109
         BNO   @RF00109                                            0109
*       DO;                         /*                       @Y30LB12*/
*         DO J=1 TO CPUNUM;         /* LOOK FOR MATCH        @Y30LB12*/
         LA    J,1                                                 0111
         B     @DE00111                                            0111
@DL00111 DS    0H                                                  0112
*           IF CPUID(J)=RSGCPUID(I) /* IF MATCH              @Y30LB12*/
*             THEN                  /*                       @Y30LB12*/
         LR    @10,J                                               0112
         SLA   @10,3                                               0112
         LR    @05,I                                               0112
         MH    @05,@CH00112                                        0112
         L     @15,COMPTR2(,R4)                                    0112
         ALR   @10,R4                                              0112
         ST    @05,@TF00001                                        0112
         ALR   @05,@15                                             0112
         CLC   CPUID-8(5,@10),RSGCPUID-9(@05)                      0112
         BNE   @RF00112                                            0112
*             DO;                   /*                       @Y30LB12*/
*               CPUREFNO(I)=J-1;    /* SAVE REFNO            @Y30LB12*/
         LR    @10,J                                               0114
         BCTR  @10,0                                               0114
         L     @05,@TF00001                                        0114
         STC   @10,CPUREFNO-9(@05,@15)                             0114
*               HAVEHIT='1'B;       /* SET MATCH             @Y30LB12*/
         OI    HAVEHIT,B'10000000'                                 0115
*             END;                  /*                       @Y30LB12*/
*           ELSE                                                   0117
*             ;                     /*                       @Y30LB12*/
@RF00112 DS    0H                                                  0118
*         END;                      /* DID ALL CPUASSOC      @Y30LB12*/
         AH    J,@CH00042                                          0118
@DE00111 CH    J,CPUNUM(,R4)                                       0118
         BNH   @DL00111                                            0118
*         IF HAVEHIT^='1'B          /* IF NO MATCH           @Y30LB12*/
*           THEN                    /*                       @Y30LB12*/
         TM    HAVEHIT,B'10000000'                                 0119
         BO    @RF00119                                            0119
*           DO;                     /*                       @Y30LB12*/
*                                                                  0120
*             /*******************************************************/
*             /*                                                     */
*             /* ***********************************         @Y30LB12*/
*             /* ICG301I NO CPUCONFG MATCH FOR               @Y30LB12*/
*             /* UPPERCON CPU XXXXXXXXXX                     @Y30LB12*/
*             /* ***********************************         @Y30LB12*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0121
*             OUTBUF2(1:44)=ICGDS301;/*                      @Y30LB12*/
         MVC   OUTBUF2(44,R4),ICGDS301                             0121
*             PACKED(1:5)=RSGCPUID(I);/*                     @Y30LB12*/
         LR    @10,I                                               0122
         MH    @10,@CH00112                                        0122
         L     @05,COMPTR2(,R4)                                    0122
         ALR   @05,@10                                             0122
         MVC   PACKED(5),RSGCPUID-9(@05)                           0122
*             PACKED(6)='0F'X;      /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0123
*             GEN(UNPK  UNPACKED(11),PACKED(6));/*           @Y30LB12*/
         UNPK  UNPACKED(11),PACKED(6)
*             OUTBUF2(45:54)=UNPACKED(1:10);/*               @Y30LB12*/
         MVC   OUTBUF2+44(10,R4),UNPACKED                          0125
*             CALL PUTIT1;          /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0126
*           END;                    /*                       @Y30LB12*/
*         ELSE                                                     0128
*           ;                       /*                       @Y30LB12*/
@RF00119 DS    0H                                                  0129
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0130
*       ;                           /*                       @Y30LB12*/
@RF00109 DS    0H                                                  0131
*   END;                            /* END OF DO I           @Y30LB12*/
         AH    I,@CH00042                                          0131
         CH    I,@CH00235                                          0131
         BNH   @DL00107                                            0131
*   END A01PROC3;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00004 DS    0H                                                  0132
@EF00004 DS    0H                                                  0132
@ER00004 LM    @14,@12,@SA00004                                    0132
         BR    @14                                                 0132
*                                                                  0133
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CHECKMP                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - THIS ROUTINE IS CALLED WHEN AN ENTRY IN THE   @Y30LB12*/
*/*            CPUASSOC TABLE HAS THE 'CPUTIGHT' BIT ON.     @Y30LB12*/
*/*            TRANSLATE THE  'TOMPCPU' BITS IN THAT ENTRY   @Y30LB12*/
*/*            INTO THE LOGICAL CPUID REFERENCE NUMBER OF    @Y30LB12*/
*/*            THE CPU TO WHICH IT POINTS, AND CHECK TO      @Y30LB12*/
*/*            SEE THAT THAT CPU ALSO IN MP (VIA CHECKMP2).  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0133
*CHECKMP:                                                          0133
*   PROCEDURE;                      /*                       @Y30LB12*/
CHECKMP  STM   @14,@12,@SA00005                                    0133
*   HAVEHIT='0'B;                   /* RESET MATCH FLAG      @Y30LB12*/
         NI    HAVEHIT,B'01111111'                                 0134
*   REFINDEX=TOMPCPU(INDEX)+1;      /*                       @Y30LB12*/
         LR    @10,INDEX                                           0135
         SLA   @10,3                                               0135
         LA    REFINDEX,1                                          0135
         ALR   @10,R4                                              0135
         MVC   @ZT00003+3(1),TOMPCPU-8(@10)                        0135
         AL    REFINDEX,@ZT00003                                   0135
*   CALL CHECKMP2;                  /*                       @Y30LB12*/
         BAL   @14,CHECKMP2                                        0136
*   END CHECKMP;                    /* RET. TO A01PROC1      @Y30LB12*/
@EL00005 DS    0H                                                  0137
@EF00005 DS    0H                                                  0137
@ER00005 LM    @14,@12,@SA00005                                    0137
         BR    @14                                                 0137
*                                                                  0138
*/***********************************************************@YD00113*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - CHECKMP2                                @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - TEST TO ASSURE THE MULTIPROCESSING CPU HAS    @YD00113*/
*/*            CROSS REFERENCE TO THE OTHER MULTIPROCESSING  @YD00113*/
*/*            CPU.  IF NOT, ISSUE APPROPRIATE ERROR MESSAGE @YD00113*/
*/*                                                          @YD00113*/
*/***********************************************************@YD00113*/
*                                                                  0138
*CHECKMP2:                                                         0138
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0138
CHECKMP2 STM   @14,@12,@SA00006                                    0138
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* THE LOGICAL CPUID OF THE CPU BEING EXAMINED           @YD00113*/
*   /* IS 'INDEX'. THE POINTER TO THE OTHER CPU OF           @YD00113*/
*   /* THE MP PAIR IS 'REFINDEX'. IF THE VALUES ARE          @YD00113*/
*   /* EQUAL, THE CPUCONFG STATEMENT INDICATED THE           @XD00153*/
*   /* SAME 10-CHARACTER CPU IDENTIFICATION IN BOTH          @XD00153*/
*   /* 'CPUID=' AND 'MPCPU='                                 @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0139
*   IF INDEX=REFINDEX               /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CR    INDEX,REFINDEX                                      0139
         BNE   @RF00139                                            0139
*     DO;                           /*                       @Y30LB12*/
*                                                                  0140
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG305I CPU XXXXXXXXXX REFERENCES                 @Y30LB12*/
*       /* ITSELF                                            @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0141
*       OUTBUF2(1:41)=ICGDS305;     /*                       @Y30LB12*/
         MVC   OUTBUF2(41,R4),ICGDS305                             0141
*       PACKED(1:5)=CPUID(INDEX);   /*                       @Y30LB12*/
         LR    @10,INDEX                                           0142
         SLA   @10,3                                               0142
         ALR   @10,R4                                              0142
         MVC   PACKED(5),CPUID-8(@10)                              0142
*       PACKED(6)='0F'X;            /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0143
*       GEN(UNPK  UNPACKED(11),PACKED(6));/*                 @Y30LB12*/
         UNPK  UNPACKED(11),PACKED(6)
*       OUTBUF2(14:23)=UNPACKED(1:10);/*                     @Y30LB12*/
         MVC   OUTBUF2+13(10,R4),UNPACKED                          0145
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0146
*       RETURN;                     /* RETURN TO CHECKMP     @Y30LB12*/
@EL00006 DS    0H                                                  0147
@EF00006 DS    0H                                                  0147
@ER00006 LM    @14,@12,@SA00006                                    0147
         BR    @14                                                 0147
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0149
*     ;                             /*                       @Y30LB12*/
*                                                                  0149
@RF00139 DS    0H                                                  0150
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* IF THE CPU FLAG INICATING THAT THE SECOND CPU         @YD00113*/
*   /* IS A CPU IN A MP PAIR IS NOT SET TO ONE,              @YD00113*/
*   /* THERE IS AN ERROR IN THE CPUCONFG STATEMENTS.         @YD00113*/
*   /* THE CURRENT CPU BEING EXAMINED POINTS AT A            @XD00153*/
*   /* SECOND CPU, BUT THE SECOND CPU WAS NOT                @YD00113*/
*   /* SPECIFIED IN ITS OWN CPUCONFG STATEMENT AS A          @XD00153*/
*   /* CPU IN A MP PAIR.                                     @YD00113*/
*   /* THE SECOND CPU MAY NOT HAVE BEEN SPECIFIED AT         @YD00113*/
*   /* AT ALL, IN WHICH CASE ICG303I IS ALSO PRINTED.        @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0150
*   IF CPUTIGHT(REFINDEX)^='1'B     /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LR    @10,REFINDEX                                        0150
         SLA   @10,3                                               0150
         ALR   @10,R4                                              0150
         TM    CPUTIGHT-8(@10),B'01000000'                         0150
         BO    @RF00150                                            0150
*     DO;                           /*                       @Y30LB12*/
*                                                                  0151
*       /*************************************************************/
*       /*                                                           */
*       /* *************************************             @Y30LB12*/
*       /* ICG302I CPU XXXXXXXXXX MP                         @Y30LB12*/
*       /* CONNECTION TO CPU XXXXXXXXXX INVALID              @Y30LB12*/
*       /* *************************************             @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0152
*       OUTBUF2(1:66)=ICGDS302;     /*                       @Y30LB12*/
         MVC   OUTBUF2(66,R4),ICGDS302                             0152
*       PACKED(1:5)=CPUID(INDEX);   /*                       @Y30LB12*/
         LR    @10,INDEX                                           0153
         SLA   @10,3                                               0153
         ALR   @10,R4                                              0153
         MVC   PACKED(5),CPUID-8(@10)                              0153
*       PACKED(6)='0F'X;            /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0154
*       GEN(UNPK  UNPACKED(11),PACKED(6));/*                 @Y30LB12*/
         UNPK  UNPACKED(11),PACKED(6)
*       OUTBUF2(14:23)=UNPACKED(1:10);/*                     @Y30LB12*/
         MVC   OUTBUF2+13(10,R4),UNPACKED                          0156
*       PACKED(1:5)=CPUID(REFINDEX);/*                       @Y30LB12*/
         LR    @10,REFINDEX                                        0157
         SLA   @10,3                                               0157
         ALR   @10,R4                                              0157
         MVC   PACKED(5),CPUID-8(@10)                              0157
*       PACKED(6)='0F'X;            /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0158
*       GEN(UNPK  UNPACKED(11),PACKED(6));/*                 @Y30LB12*/
         UNPK  UNPACKED(11),PACKED(6)
*       OUTBUF2(46:55)=UNPACKED(1:10);/*                     @Y30LB12*/
         MVC   OUTBUF2+45(10,R4),UNPACKED                          0160
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0161
*       RETURN;                     /* RETURN TO CHECKMP     @Y30LB12*/
         B     @EL00006                                            0162
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0164
*     ;                             /*                       @Y30LB12*/
*                                                                  0164
@RF00150 DS    0H                                                  0165
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* DEVELOP THE MP POINTER FROM THE SECOND CPU            @YD00113*/
*   /* BACK TO THE FIRST CPU AND MAKE SURE THAT THEY         @YD00113*/
*   /* CROSS-CHECK BACK, THAT IS 'A' POINTS AT 'B'           @YD00113*/
*   /* AND 'B' POINTS BACK AT 'A'. IF 'B' POINTS AT          @YD00113*/
*   /* 'C', WRITE ERROR MESSAGE.                             @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0165
*   J=TOMPCPU(REFINDEX)+1;          /*                       @Y30LB12*/
         LR    @10,REFINDEX                                        0165
         SLA   @10,3                                               0165
         LA    J,1                                                 0165
         ALR   @10,R4                                              0165
         MVC   @ZT00003+3(1),TOMPCPU-8(@10)                        0165
         AL    J,@ZT00003                                          0165
*   IF J^=INDEX                     /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CR    J,INDEX                                             0166
         BE    @RF00166                                            0166
*     DO;                           /*                       @Y30LB12*/
*                                                                  0167
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG306I CPU XXXXXXXXXX REFERENCES                 @Y30LB12*/
*       /* CPU XXXXXXXXXX BUT CPU XXXXXXXXXX                 @Y30LB12*/
*       /* DOES NOT REFERENCE CPU XXXXXXXXXX                 @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0168
*       OUTBUF2(1:102)=ICGDS306;    /*                       @Y30LB12*/
         MVC   OUTBUF2(102,R4),ICGDS306                            0168
*       PACKED(1:5)=CPUID(INDEX);   /*                       @Y30LB12*/
         LR    @10,INDEX                                           0169
         SLA   @10,3                                               0169
         ALR   @10,R4                                              0169
         MVC   PACKED(5),CPUID-8(@10)                              0169
*       PACKED(6)='0F'X;            /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0170
*       GEN(UNPK  UNPACKED(11),PACKED(6));/*                 @Y30LB12*/
         UNPK  UNPACKED(11),PACKED(6)
*       OUTBUF2(14:23)=UNPACKED(1:10);/*                     @Y30LB12*/
         MVC   OUTBUF2+13(10,R4),UNPACKED                          0172
*       OUTBUF2(93:102)=UNPACKED(1:10);/*                    @Y30LB12*/
         MVC   OUTBUF2+92(10,R4),UNPACKED                          0173
*       PACKED(1:5)=CPUID(REFINDEX);/*                       @Y30LB12*/
         LR    @10,REFINDEX                                        0174
         SLA   @10,3                                               0174
         ALR   @10,R4                                              0174
         MVC   PACKED(5),CPUID-8(@10)                              0174
*       PACKED(6)='0F'X;            /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0175
*       GEN(UNPK  UNPACKED(11),PACKED(6));/*                 @Y30LB12*/
         UNPK  UNPACKED(11),PACKED(6)
*       OUTBUF2(40:49)=UNPACKED(1:10);/*                     @Y30LB12*/
         MVC   OUTBUF2+39(10,R4),UNPACKED                          0177
*       OUTBUF2(59:68)=UNPACKED(1:10);/*                     @Y30LB12*/
         MVC   OUTBUF2+58(10,R4),UNPACKED                          0178
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0179
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0181
*     ;                             /*                       @Y30LB12*/
@RF00166 DS    0H                                                  0182
*   END CHECKMP2;                   /* RETURN TO CHECKMP     @Y30LB12*/
         B     @EL00006                                            0182
*                                                                  0183
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0183
*PUTIT1:                                                           0183
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT1   STM   @14,@12,@SA00007                                    0183
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'01000000'                                0184
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0185
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @10,1                                               0186
         AH    @10,TERMINAT(,R4)                                   0186
         STH   @10,TERMINAT(,R4)                                   0186
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0188
*   END PUTIT1;                     /*                       @Y30LB12*/
@EL00007 DS    0H                                                  0189
@EF00007 DS    0H                                                  0189
@ER00007 LM    @14,@12,@SA00007                                    0189
         BR    @14                                                 0189
*                                                                  0190
*/********************************************************** @Y30LB12*/
*/*                    P A T C H   A R E A                   @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0190
*   GENERATE;                                                      0190
*                                                         /*@Y30LB12*/
PATCHA01 DC    32C'PATCHA01'                              /*@Y30LB12*/
*   END ICGDSA01                    /*                       @Y30LB12*/
*                                                                  0191
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */
*                                                                  0191
*       ;                                                          0191
         B     @EL00001                                            0191
@DATA    DS    0H
@CH00042 DC    H'1'
@CH00112 DC    H'9'
@CH00235 DC    H'48'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00007 DS    15F
@SA00005 DS    15F
@SA00006 DS    15F
@TF00001 DS    F
@ZTEMPS  DS    0F
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSA01 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
A01WORK  DS    CL2
         ORG   A01WORK
MSCFLAGS DS    BL1
         ORG   MSCFLAGS
INTA     DS    BL1
INTB     EQU   MSCFLAGS+0
INTC     EQU   MSCFLAGS+0
INTD     EQU   MSCFLAGS+0
@NM00020 EQU   MSCFLAGS+0
         ORG   A01WORK+1
FLAGS    DS    BL1
         ORG   FLAGS
HAVEHIT  DS    BL1
STOPSCAN EQU   FLAGS+0
ERROR    EQU   FLAGS+0
@NM00021 EQU   FLAGS+0
         ORG   A01WORK+2
UNPACKED DS    CL11
PACKED   DS    CL6
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSA01 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ICGDS301 DC    CL44' ICG301I NO CPUCONFG MATCH FOR UPPERCON CPU '
ICGDS302 DC    CL66' ICG302I CPU XXXXXXXXXX MP CONNECTION TO CPU XXXXXXC
               XXXX IS INVALID'
ICGDS303 DC    CL79' ICG303I CPU XXXXXXXXXX IS REFERENCED BY ANOTHER CPC
               U BUT NOT SPECIFIED AS CPUID'
ICGDS304 DC    CL64' ICG304I CPU XXXXXXXXXX USING PREVIOUSLY SPECIFIED C
               MSC INTERFACE'
ICGDS305 DC    CL41' ICG305I CPU XXXXXXXXXX REFERENCES ITSELF'
ICGDS306 DC    CL102' ICG306I CPU XXXXXXXXXX REFERENCES CPU XXXXXXXXXX C
               BUT CPU XXXXXXXXXX DOES NOT REFERENCE CPU XXXXXXXXXX'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
REFINDEX EQU   @05
J        EQU   @03
I        EQU   @02
INDEX    EQU   @02
R4       EQU   @04
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
PCHBF    EQU   READER+99
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
PRINTER  EQU   COMTAB+464
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
TERMINAT EQU   MESSAGES+6
SPECLMSG EQU   MESSAGES+18
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
COMPTR2  EQU   GENIO+16
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
CPUASSOC EQU   COMTAB+3026
CPUNUM   EQU   CPUASSOC
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUID    EQU   CPU
TOMPCPU  EQU   CPU+5
CPUFLAG1 EQU   CPU+6
CPUTIGHT EQU   CPUFLAG1
CPUALTFL EQU   CPUFLAG1
OPSYSTYP EQU   CPUFLAG1
CPUMSCIN EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
CPUSPEC  EQU   CPUFLAG2
ALTMSCIN EQU   CPUFLAG2
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CISPEC   EQU   RSGFLAGS
RSGCPUID EQU   RSGUCB+1
CPUREFNO EQU   RSGUCB+6
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
SCANBUF  EQU   0
SCANDATA EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
@NM00019 EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00018 EQU   @NM00017
PRNTONLY EQU   @NM00017
UPDCREAT EQU   @NM00017
NEWCREAT EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
@NM00013 EQU   CPUFLAG1
SPNRSGNO EQU   PHYSTYPE+1
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSICEB EQU   MERLICEB
PHYSMERL EQU   MERLICEB
PHYSDS2  EQU   DSPAIRS
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
TODS2    EQU   RSGTODS+1
TODS1    EQU   RSGTODS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
BUILDPTR EQU   GENIO+20
SAVE14   EQU   GENIO+12
EXLST    EQU   GENIO+8
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00006 EQU   MESSAGES+19
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00005 EQU   SPECLMSG
PRNTCARD EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
WARNING  EQU   MESSAGES+4
MSGNO    EQU   MESSAGES+2
RETCODE  EQU   MESSAGES
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00003 EQU   READER+206
SCANLEN  EQU   READER+204
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
INBUF    EQU   READER+100
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
LASTPARM EQU   READFLAG
ENDSCAN  EQU   READFLAG
PARMBIT  EQU   READFLAG
KEYBIT   EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00038 EQU   @RC00037
@RC00043 EQU   @RC00042
@RC00048 EQU   @RC00047
@RC00053 EQU   @RC00052
@ENDDATA EQU   *
         END   ICGDSA01,(C'PLS1845',0603,76335)
