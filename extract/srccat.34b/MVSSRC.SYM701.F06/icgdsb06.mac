         TITLE 'ICGDSB06 TABLE CREATE, EXCP WRITE TO DASD    VS2       *
                        '
ICGDSB06 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSB06  76.336'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0065
*   /*****************************************************************/
*   /*                                                               */
*   /* GET ADDRESS OF SYSUT2 DCB AND IOB. IF THE DCB IS NOT OPEN,    */
*   /* RETURN TO THE CALLER (EXIT-NORMAL). SET FLAGS 'UT2VCERR',     */
*   /* 'UT2VWERR' AND 'UT3VWERR' OFF.                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0065
*   DCBPTSAV=DCBPTR;                /*                       @Y30LB10*/
         L     DCBPTSAV,DCBPTR(,R4)                                0065
*   DCBPTR=ADDR(UT2DCB);            /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0066
         LA    @00,UT2DCB(,@10)                                    0066
         ST    @00,DCBPTR(,R4)                                     0066
*   IOBSTPTR=ADDR(UT2IOB);          /*                       @Y30LB10*/
         LA    IOBSTPTR,UT2IOB(,@10)                               0067
*   UT2VWERR=OFF;                   /*                       @Y30LB10*/
         NI    UT2VWERR(@10),B'11011111'                           0068
*   UT3VWERR=OFF;                   /*                       @Y30LB10*/
         NI    UT3VWERR(@10),B'11011111'                           0069
*   IF DCBOFOPN=OFF                 /*                       @Y30LB10*/
*     THEN                          /*                       @Y30LB10*/
         LR    @15,@00                                             0070
         TM    DCBOFOPN+40(@15),B'00010000'                        0070
         BZ    @RT00070                                            0070
*     GOTO EXIT;                    /*                       @Y30LB10*/
*   ELSE                                                           0072
*     ;                             /*                       @Y30LB10*/
*                                                                  0073
*   /*****************************************************************/
*   /*                                                               */
*   /* GET ADDRESS OF WRITE BUFFER TO BE USED. PUT COUNT FIELD (EIGHT*/
*   /* BYTES) IN FRONT OF EACH 256 BYTE RECORD, (32 RECORDS).        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0073
*   R6=B06BUFPT;                    /*                       @Y30LB10*/
         L     R6,B06BUFPT(,@10)                                   0073
*   RECNUM=B06REC;                  /*                       @Y30LB10*/
         SLR   RECNUM,RECNUM                                       0074
         IC    RECNUM,B06REC(,@10)                                 0074
*   DO I=1 TO 32;                   /*                       @Y30LB10*/
         LA    I,1                                                 0075
@DL00075 DS    0H                                                  0076
*     COUNTCC=B06CYL;               /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0076
         SLR   @00,@00                                             0076
         IC    @00,B06CYL(,@10)                                    0076
         STH   @00,COUNTCC(,R6)                                    0076
*     COUNTHH=B06HEAD;              /*                       @Y30LB10*/
         SLR   @00,@00                                             0077
         IC    @00,B06HEAD(,@10)                                   0077
         STH   @00,COUNTHH(,R6)                                    0077
*     COUNTR=RECNUM;                /*                       @Y30LB10*/
         STC   RECNUM,COUNTR(,R6)                                  0078
*     LKEYDATA=LEN264;              /*                       @Y30LB10*/
         MVC   LKEYDATA(3,R6),LEN264                               0079
*     RECNUM=RECNUM+CHARONE;        /*                       @Y30LB10*/
         MVC   @ZT00003+3(1),CHARONE                               0080
         AL    RECNUM,@ZT00003                                     0080
*     R6=R6+LEN272;                 /*                       @Y30LB10*/
         MVC   @ZT00002+2(2),LEN272                                0081
         AL    R6,@ZT00002                                         0081
*   END;                            /*                       @Y30LB10*/
         AH    I,@CH00035                                          0082
         CH    I,@CH00249                                          0082
         BNH   @DL00075                                            0082
*                                                                  0083
*   /*****************************************************************/
*   /*                                                               */
*   /* GET ADDRESS OF WRITE BUFFER. BUILD 32 WRITE-COUNT-DATA CCWS   */
*   /* FOR SYSUT2. SET IN DATA ADDRESS, OP CODE, COMMAND CHAIN FLAG  */
*   /* AND A COUNT OF 272. SET THE COMMAND CHAIN FLAG OFF IN THE LAST*/
*   /* CCW.                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0083
*   R6=B06BUFPT;                    /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0083
         L     R6,B06BUFPT(,@10)                                   0083
*   DO I=1 TO 32;                   /*                       @Y30LB10*/
         LA    I,1                                                 0084
@DL00084 DS    0H                                                  0085
*     WRITEDA2(I)=R6;               /*                       @Y30LB10*/
         LR    @10,I                                               0085
         SLA   @10,3                                               0085
         LA    @03,984                                             0085
         AL    @03,BUILDPTR(,R4)                                   0085
         ST    R6,@TF00001                                         0085
         ST    @10,@TF00002                                        0085
         ALR   @10,@03                                             0085
         MVC   WRITEDA2-8(3,@10),@TF00001+1                        0085
*     WRITEOP2(I)=WRTOP;            /*                       @Y30LB10*/
         LR    @10,@03                                             0086
         AL    @10,@TF00002                                        0086
         MVC   WRITEOP2-8(1,@10),WRTOP                             0086
*     WRTEFLG2(I)=CMDCHN;           /*                       @Y30LB10*/
         LR    @10,@03                                             0087
         AL    @10,@TF00002                                        0087
         MVC   WRTEFLG2-8(2,@10),CMDCHN                            0087
*     WRTELEN2(I)=LEN272;           /*                       @Y30LB10*/
         AL    @03,@TF00002                                        0088
         MVC   WRTELEN2-8(2,@03),LEN272                            0088
*     R6=R6+LEN272;                 /*                       @Y30LB10*/
         MVC   @ZT00002+2(2),LEN272                                0089
         AL    R6,@ZT00002                                         0089
*   END;                            /*                       @Y30LB10*/
         AH    I,@CH00035                                          0090
         CH    I,@CH00249                                          0090
         BNH   @DL00084                                            0090
*   WRTEFLG2(32)=NOCHN;             /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0091
         LA    @15,984                                             0091
         ALR   @15,@10                                             0091
         MVC   WRTEFLG2+248(2,@15),NOCHN                           0091
*                                                                  0092
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN THE REAL CYLINDER ADDRESS FROM THE TRANSLATION TABLE   */
*   /* BUILT BY THE CALLER AND PUT IT IN THE SYSUT2 IOB. SET IN HEAD */
*   /* AND RECORD ADDR FOR RECORD 0. SET START ADDRESS IN IOB. SET   */
*   /* THE IOB TO WRITE EXTENT 1 FOR VERIFICATION DATA AND EXTENT 0  */
*   /* FOR NORMAL WRITE DATA.                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0092
*   IOBCC2=LTRTRANO(B06CYL);        /*                       @Y30LB10*/
         SLR   @14,@14                                             0092
         IC    @14,B06CYL(,@10)                                    0092
         ALR   @14,@14                                             0092
         AL    @14,@CF00992                                        0092
         LH    @00,LTRTRANO-22236(@14,@10)                         0092
         STC   @00,IOBCC2(,IOBSTPTR)                               0092
*   IOBHH2=B06HEAD;                 /*                       @Y30LB10*/
         MVC   IOBHH2(1,IOBSTPTR),B06HEAD(@10)                     0093
*   IOBR=CHARZERO;                  /*                       @Y30LB10*/
         MVC   IOBR(1,IOBSTPTR),CHARZERO                           0094
*   IOBSTART=ADDR(SIDEQ2);          /*                       @Y30LB10*/
         ST    @15,IOBSTART(,IOBSTPTR)                             0095
*   IF IOBCC2=CHARZERO              /*                       @Y30LB10*/
*     THEN                          /*                       @Y30LB10*/
         CLC   IOBCC2(1,IOBSTPTR),CHARZERO                         0096
         BNE   @RF00096                                            0096
*     IOBM=CHARONE;                 /*                       @Y30LB10*/
         MVC   IOBM(1,IOBSTPTR),CHARONE                            0097
*   ELSE                            /*                       @Y30LB10*/
*     IOBM=CHARZERO;                /*                       @Y30LB10*/
         B     @RC00096                                            0098
@RF00096 MVC   IOBM(1,IOBSTPTR),CHARZERO                           0098
*                                                                  0099
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD CCWS FOR SEARCH ID EQUAL AND TIC.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0099
*   SIDOP2=SIDOP;                   /*                       @Y30LB10*/
@RC00096 LA    @10,984                                             0099
         AL    @10,BUILDPTR(,R4)                                   0099
         MVC   SIDOP2(1,@10),SIDOP                                 0099
*   SIDADR2=ADDR(IOBCC);            /*                       @Y30LB10*/
         LA    @00,IOBCC(,IOBSTPTR)                                0100
         ST    @00,@TF00001                                        0100
         MVC   SIDADR2(3,@10),@TF00001+1                           0100
*   SIDFLCT2=SIDFLCT;               /*                       @Y30LB10*/
         MVC   SIDFLCT2(4,@10),SIDFLCT                             0101
*   TICOP2=TICOP;                   /*                       @Y30LB10*/
         MVC   TICOP2(1,@10),TICOP                                 0102
*   TICADR2=ADDR(SIDEQ2);           /*                       @Y30LB10*/
         ST    @10,@TF00001                                        0103
         MVC   TICADR2(3,@10),@TF00001+1                           0103
*   TICFLCT2=TICFLCT;               /*                       @Y30LB10*/
         MVC   TICFLCT2(4,@10),TICFLCT                             0104
*                                                                  0105
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE ERROR COUNTER TO 0. SET THE ECB TO ZERO. ISSUE EXCP TO*/
*   /* SYSUT2 AND WAIT FOR COMPLETION. STEP THE ERROR COUNTER BY 1.  */
*   /* IF THE COMPLETION CODE IS '7F'X CONTINUE. IF THE COMPLETION   */
*   /* CODE IS NOT '7F'X AND THE ERROR COUNTER IS NOT 5, THEN REISSUE*/
*   /* THE CCW STRING. IF THE ERROR COUNTER IS 5, THEN PRINT A       */
*   /* MESSAGE (ICG406I I/O ERROR ON SYSUT2) AND RETURN TO THE CALLER*/
*   /* WITH 'RETCODE' = 16 AND 'UT2VWERR' FLAG SET ON.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0105
*   R6=WORDZERO;                    /*                       @Y30LB10*/
         SLR   R6,R6                                               0105
*EXCPUT2:                                                          0106
*   UT2ECB=WORDZERO;                /*                       @Y30LB10*/
EXCPUT2  L     @10,BUILDPTR(,R4)                                   0106
         SLR   @00,@00                                             0106
         ST    @00,UT2ECB(,@10)                                    0106
*   DCBIFEC=OFFTWO;                 /*                       @Y30LB10*/
         L     @15,DCBPTR(,R4)                                     0107
         NI    DCBIFEC+40(@15),B'00111111'                         0107
*   R1=ADDR(UT2IOB);                /*                       @Y30LB10*/
         LA    R1,UT2IOB(,@10)                                     0108
*   GEN(EXCP (1));                  /*                       @Y30LB10*/
         EXCP (1)
*   R1=ADDR(UT2ECB);                /*                       @Y30LB10*/
         L     R1,BUILDPTR(,R4)                                    0110
         LA    R1,UT2ECB(,R1)                                      0110
*   GEN(WAIT 1,ECB=(1));            /*                       @Y30LB10*/
         WAIT 1,ECB=(1)
*   R6=R6+CHARONE;                  /*                       @Y30LB10*/
         MVC   @ZT00003+3(1),CHARONE                               0112
         AL    R6,@ZT00003                                         0112
*   IF UT2ECB(1)^=CODE7F            /*                       @Y30LB10*/
*     THEN                          /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0113
         CLC   UT2ECB(1,@10),CODE7F                                0113
         BE    @RF00113                                            0113
*     IF R6^=WORDFIVE               /*                       @Y30LB10*/
*       THEN                        /*                       @Y30LB10*/
         CH    R6,@CH00145                                         0114
         BNE   @RT00114                                            0114
*       GOTO EXCPUT2;               /*                       @Y30LB10*/
*     ELSE                          /*                       @Y30LB10*/
*       DO;                         /*                       @Y30LB10*/
*         LIVEIO=IOMSG;             /*                       @Y30LB10*/
         LA    @15,689                                             0117
         ALR   @15,R4                                              0117
         MVC   LIVEIO(30,@15),IOMSG                                0117
*         IMSGNAM=UT2DDN;           /*                       @Y30LB10*/
         MVC   IMSGNAM(8,@15),UT2DDN(@10)                          0118
*         R1=ADDR(UT2IOB);          /*                       @YM34316*/
         LA    R1,UT2IOB(,@10)                                     0119
*         CALL IOERR;               /*                       @Y30LB10*/
         BAL   @14,IOERR                                           0120
*         UT2VWERR=ON;              /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0121
         OI    UT2VWERR(@10),B'00100000'                           0121
*         GOTO EXIT;                /*                       @Y30LB10*/
         B     EXIT                                                0122
*       END;                        /*                       @Y30LB10*/
*                                                                  0124
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE 32 WRITE COMMANDS TO READ(COUNT-KEY-DATA), COMMAND    */
*   /* CHAINED AND THE SKIP FLAG ON.                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0124
*   DO I=1 TO 32;                   /*                       @Y30LB10*/
@RF00113 LA    I,1                                                 0124
@DL00124 DS    0H                                                  0125
*     WRITEOP2(I)=READOP;           /*                       @Y30LB10*/
         LR    @10,I                                               0125
         SLA   @10,3                                               0125
         LA    @03,984                                             0125
         AL    @03,BUILDPTR(,R4)                                   0125
         ST    @10,@TF00001                                        0125
         ALR   @10,@03                                             0125
         MVC   WRITEOP2-8(1,@10),READOP                            0125
*     WRTEFLG2(I)=SKIP;             /*                       @Y30LB10*/
         AL    @03,@TF00001                                        0126
         MVC   WRTEFLG2-8(2,@03),SKIP                              0126
*   END;                            /*                       @Y30LB10*/
         AH    I,@CH00035                                          0127
         CH    I,@CH00249                                          0127
         BNH   @DL00124                                            0127
*   WRTEFLG2(32)=NOCHNSK;           /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0128
         MVC   WRTEFLG2+1232(2,@10),NOCHNSK                        0128
*                                                                  0129
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE ECB TO ZERO ISSUE A EXCP AND WAIT TO SYSUT2. IF THE   */
*   /* COMPLETION CODE IS '7F'X, CONTINUE. IF THE COMPLETION CODE IS */
*   /* NOT '7F'X, PRINT A MESSAGE (ICG406I I/O ERROR ON SYSUT2) AND  */
*   /* RETURN TO THE CALLER WITH 'RETCODE' = 16 AND 'UT2VWERR' FLAG  */
*   /* SET ON.                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0129
*   UT2VWERR=OFF;                   /*                       @Y30LB10*/
         NI    UT2VWERR(@10),B'11011111'                           0129
*   UT2ECB=WORDZERO;                /*                       @Y30LB10*/
         SLR   @00,@00                                             0130
         ST    @00,UT2ECB(,@10)                                    0130
*   R1=ADDR(UT2IOB);                /*                       @Y30LB10*/
         LA    R1,UT2IOB(,@10)                                     0131
*   GEN(EXCP (1));                  /*                       @Y30LB10*/
         EXCP (1)
*   R1=ADDR(UT2ECB);                /*                       @Y30LB10*/
         L     R1,BUILDPTR(,R4)                                    0133
         LA    R1,UT2ECB(,R1)                                      0133
*   GEN(WAIT 1,ECB=(1));            /*                       @Y30LB10*/
         WAIT 1,ECB=(1)
*   IF UT2ECB(1)^=CODE7F            /*                       @Y30LB10*/
*     THEN                          /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0135
         CLC   UT2ECB(1,@10),CODE7F                                0135
         BE    @RF00135                                            0135
*     DO;                           /*                       @Y30LB10*/
*       LIVEIO=IOMSG;               /*                       @Y30LB10*/
         LA    @15,689                                             0137
         ALR   @15,R4                                              0137
         MVC   LIVEIO(30,@15),IOMSG                                0137
*       IMSGNAM=UT2DDN;             /*                       @Y30LB10*/
         MVC   IMSGNAM(8,@15),UT2DDN(@10)                          0138
*       R1=ADDR(UT2IOB);            /*                       @YM34316*/
         LA    R1,UT2IOB(,@10)                                     0139
*       CALL IOERR;                 /*                       @Y30LB10*/
         BAL   @14,IOERR                                           0140
*       UT2VWERR=ON;                /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0141
         OI    UT2VWERR(@10),B'00100000'                           0141
*       GOTO EXIT;                  /*                       @Y30LB10*/
         B     EXIT                                                0142
*     END;                          /*                       @Y30LB10*/
*                                                                  0144
*   /*****************************************************************/
*   /*                                                               */
*   /* GET ADDRESS OF SYSUT3 IOB AND DCB. IF THE DCB IS NOT OPEN,    */
*   /* RETURN TO THE CALLER.                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0144
*   DCBPTR=ADDR(UT3DCB);            /*                       @Y30LB10*/
@RF00135 L     @10,BUILDPTR(,R4)                                   0144
         LA    @00,UT3DCB(,@10)                                    0144
         ST    @00,DCBPTR(,R4)                                     0144
*   IOBSTPTR=ADDR(UT3IOB);          /*                       @Y30LB10*/
         LA    IOBSTPTR,UT3IOB(,@10)                               0145
*   IF DCBOFOPN=OFF                 /*                       @Y30LB10*/
*     THEN                          /*                       @Y30LB10*/
         LR    @15,@00                                             0146
         TM    DCBOFOPN+40(@15),B'00010000'                        0146
         BZ    @RT00146                                            0146
*     GOTO EXIT;                    /*                       @Y30LB10*/
*   ELSE                                                           0148
*     ;                             /*                       @Y30LB10*/
*                                                                  0149
*   /*****************************************************************/
*   /*                                                               */
*   /* GET ADDRESS OF WRITE BUFFER. BUILD 32 WRITE-COUNT-DATA CCWS   */
*   /* FOR SYSUT3. SET IN DATA ADDRESS, OP CODE, COMMAND CHAIN FLAG  */
*   /* AND A COUNT OF 272. SET THE COMMAND CHAIN FLAG OFF IN THE LAST*/
*   /* CCW.                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0149
*   R6=B06BUFPT;                    /*                       @Y30LB10*/
         L     R6,B06BUFPT(,@10)                                   0149
*   DO I=1 TO 32;                   /*                       @Y30LB10*/
         LA    I,1                                                 0150
@DL00150 DS    0H                                                  0151
*     WRITEDA3(I)=R6;               /*                       @Y30LB10*/
         LR    @10,I                                               0151
         SLA   @10,3                                               0151
         LA    @03,1608                                            0151
         AL    @03,BUILDPTR(,R4)                                   0151
         ST    R6,@TF00001                                         0151
         ST    @10,@TF00002                                        0151
         ALR   @10,@03                                             0151
         MVC   WRITEDA3-8(3,@10),@TF00001+1                        0151
*     WRITEOP3(I)=WRTOP;            /*                       @Y30LB10*/
         LR    @10,@03                                             0152
         AL    @10,@TF00002                                        0152
         MVC   WRITEOP3-8(1,@10),WRTOP                             0152
*     WRTEFLG3(I)=CMDCHN;           /*                       @Y30LB10*/
         LR    @10,@03                                             0153
         AL    @10,@TF00002                                        0153
         MVC   WRTEFLG3-8(2,@10),CMDCHN                            0153
*     WRTELEN3(I)=LEN272;           /*                       @Y30LB10*/
         AL    @03,@TF00002                                        0154
         MVC   WRTELEN3-8(2,@03),LEN272                            0154
*     R6=R6+LEN272;                 /*                       @Y30LB10*/
         MVC   @ZT00002+2(2),LEN272                                0155
         AL    R6,@ZT00002                                         0155
*   END;                            /*                       @Y30LB10*/
         AH    I,@CH00035                                          0156
         CH    I,@CH00249                                          0156
         BNH   @DL00150                                            0156
*   WRTEFLG3(32)=NOCHN;             /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0157
         LA    @15,1608                                            0157
         ALR   @15,@10                                             0157
         MVC   WRTEFLG3+248(2,@15),NOCHN                           0157
*                                                                  0158
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN THE REAL CYLINDER ADDRESS FROM THE TRANSLATION TABLE   */
*   /* BUILT BY THE CALLER AND PUT IT IN THE SYSUT3 IOB. SET IN HEAD */
*   /* AND RECORD ADDR FOR RECORD 0. SET THE ERROR COUNTER TO 0. SET */
*   /* START ADDRESS IN IOB. SET THE IOB TO WRITE EXTENT 1 FOR       */
*   /* VERIFICATION DATA AND EXTENT 0 FOR NORMAL WRITE DATA.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0158
*   IOBCC2=LTRTRANO(B06CYL);        /*                       @Y30LB10*/
         SLR   @14,@14                                             0158
         IC    @14,B06CYL(,@10)                                    0158
         ALR   @14,@14                                             0158
         AL    @14,@CF00992                                        0158
         LH    @00,LTRTRANO-22236(@14,@10)                         0158
         STC   @00,IOBCC2(,IOBSTPTR)                               0158
*   IOBHH2=B06HEAD;                 /*                       @Y30LB10*/
         MVC   IOBHH2(1,IOBSTPTR),B06HEAD(@10)                     0159
*   IOBR=CHARZERO;                  /*                       @Y30LB10*/
         MVC   IOBR(1,IOBSTPTR),CHARZERO                           0160
*   IOBSTART=ADDR(SIDEQ3);          /*                       @Y30LB10*/
         ST    @15,IOBSTART(,IOBSTPTR)                             0161
*   IF IOBCC2=CHARZERO              /*                       @Y30LB10*/
*     THEN                          /*                       @Y30LB10*/
         CLC   IOBCC2(1,IOBSTPTR),CHARZERO                         0162
         BNE   @RF00162                                            0162
*     IOBM=CHARONE;                 /*                       @Y30LB10*/
         MVC   IOBM(1,IOBSTPTR),CHARONE                            0163
*   ELSE                            /*                       @Y30LB10*/
*     IOBM=CHARZERO;                /*                       @Y30LB10*/
         B     @RC00162                                            0164
@RF00162 MVC   IOBM(1,IOBSTPTR),CHARZERO                           0164
*                                                                  0165
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD CCWS FOR SEARCH ID EQUAL AND TIC.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0165
*   SIDOP3=SIDOP;                   /*                       @Y30LB10*/
@RC00162 L     @10,BUILDPTR(,R4)                                   0165
         LA    @15,1608                                            0165
         ALR   @15,@10                                             0165
         MVC   SIDOP3(1,@15),SIDOP                                 0165
*   SIDADR3=ADDR(IOBCC);            /*                       @Y30LB10*/
         LA    @00,IOBCC(,IOBSTPTR)                                0166
         ST    @00,@TF00001                                        0166
         MVC   SIDADR3(3,@15),@TF00001+1                           0166
*   SIDFLCT3=SIDFLCT;               /*                       @Y30LB10*/
         MVC   SIDFLCT3(4,@15),SIDFLCT                             0167
*   TICOP3=TICOP;                   /*                       @Y30LB10*/
         MVC   TICOP3(1,@15),TICOP                                 0168
*   TICADR3=ADDR(SIDEQ3);           /*                       @Y30LB10*/
         ST    @15,@TF00001                                        0169
         MVC   TICADR3(3,@15),@TF00001+1                           0169
*   TICFLCT3=TICFLCT;               /*                       @Y30LB10*/
         MVC   TICFLCT3(4,@15),TICFLCT                             0170
*                                                                  0171
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE ERROR COUNTER TO 0. SET THE I/O ERROR FLAG TO ZERO.   */
*   /* SET THE ECB TO ZERO. ISSUE EXCP TO SYSUT3 AND WAIT FOR        */
*   /* COMPLETION. STEP THE ERROR COUNTER BY 1. IF THE COMPLETION    */
*   /* CODE IS '7F'X CONTINUE. IF THE COMPLETION CODE IS NOT '7F'X   */
*   /* AND THE ERROR COUNTER IS NOT 5, THEN REISSUE THE CCW STRING.  */
*   /* IF THE ERROR COUNTER IS 5, THEN PRINT A MESSAGE (ICG406I I/O  */
*   /* ERROR ON SYSUT3) AND RETURN TO THE CALLER WITH 'RETCODE' = 16 */
*   /* AND 'UT3VWERR' FLAG SET ON.                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0171
*   R6=WORDZERO;                    /*                       @Y30LB10*/
         SLR   R6,R6                                               0171
*   UT3VWERR=OFF;                   /*                       @Y30LB10*/
         NI    UT3VWERR(@10),B'11011111'                           0172
*EXCPUT3:                                                          0173
*   UT3ECB=WORDZERO;                /*                       @Y30LB10*/
EXCPUT3  L     @10,BUILDPTR(,R4)                                   0173
         SLR   @00,@00                                             0173
         ST    @00,UT3ECB(,@10)                                    0173
*   DCBIFEC=OFFTWO;                 /*                       @Y30LB10*/
         L     @15,DCBPTR(,R4)                                     0174
         NI    DCBIFEC+40(@15),B'00111111'                         0174
*   R1=ADDR(UT3IOB);                /*                       @Y30LB10*/
         LA    R1,UT3IOB(,@10)                                     0175
*   GEN(EXCP (1));                  /*                       @Y30LB10*/
         EXCP (1)
*   R1=ADDR(UT3ECB);                /*                       @Y30LB10*/
         L     R1,BUILDPTR(,R4)                                    0177
         LA    R1,UT3ECB(,R1)                                      0177
*   GEN(WAIT 1,ECB=(1));            /*                       @Y30LB10*/
         WAIT 1,ECB=(1)
*   R6=R6+CHARONE;                  /*                       @Y30LB10*/
         MVC   @ZT00003+3(1),CHARONE                               0179
         AL    R6,@ZT00003                                         0179
*   IF UT3ECB(1)^=CODE7F            /*                       @Y30LB10*/
*     THEN                          /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0180
         CLC   UT3ECB(1,@10),CODE7F                                0180
         BE    @RF00180                                            0180
*     IF R6^=WORDFIVE               /*                       @Y30LB10*/
*       THEN                        /*                       @Y30LB10*/
         CH    R6,@CH00145                                         0181
         BNE   @RT00181                                            0181
*       GOTO EXCPUT3;               /*                       @Y30LB10*/
*     ELSE                          /*                       @Y30LB10*/
*       DO;                         /*                       @Y30LB10*/
*         LIVEIO=IOMSG;             /*                       @Y30LB10*/
         LA    @15,689                                             0184
         ALR   @15,R4                                              0184
         MVC   LIVEIO(30,@15),IOMSG                                0184
*         IMSGNAM=UT3DDN;           /*                       @Y30LB10*/
         MVC   IMSGNAM(8,@15),UT3DDN(@10)                          0185
*         R1=ADDR(UT3IOB);          /*                       @YM34316*/
         LA    R1,UT3IOB(,@10)                                     0186
*         CALL IOERR;               /*                       @Y30LB10*/
         BAL   @14,IOERR                                           0187
*         UT3VWERR=ON;              /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0188
         OI    UT3VWERR(@10),B'00100000'                           0188
*         GOTO EXIT;                /*                       @Y30LB10*/
         B     EXIT                                                0189
*       END;                        /*                       @Y30LB10*/
*                                                                  0191
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE 32 WRITE COMMANDS TO READ(COUNT-KEY-DATA), COMMAND    */
*   /* CHAINED AND THE SKIP FLAG ON.                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0191
*   DO I=1 TO 32;                   /*                       @Y30LB10*/
@RF00180 LA    I,1                                                 0191
@DL00191 DS    0H                                                  0192
*     WRITEOP2(I)=READOP;           /*                       @Y30LB10*/
         LR    @10,I                                               0192
         SLA   @10,3                                               0192
         LA    @03,984                                             0192
         AL    @03,BUILDPTR(,R4)                                   0192
         ST    @10,@TF00001                                        0192
         ALR   @10,@03                                             0192
         MVC   WRITEOP2-8(1,@10),READOP                            0192
*     WRTEFLG2(I)=SKIP;             /*                       @Y30LB10*/
         AL    @03,@TF00001                                        0193
         MVC   WRTEFLG2-8(2,@03),SKIP                              0193
*   END;                            /*                       @Y30LB10*/
         AH    I,@CH00035                                          0194
         CH    I,@CH00249                                          0194
         BNH   @DL00191                                            0194
*   WRTEFLG2(32)=NOCHNSK;           /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0195
         MVC   WRTEFLG2+1232(2,@10),NOCHNSK                        0195
*                                                                  0196
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE ERROR FLAG TO ZERO. SET THE ECB TO ZERO ISSUE A EXCP  */
*   /* AND WAIT TO SYSUT3. IF THE COMPLETION CODE IS '7F'X, CONTINUE.*/
*   /* IF THE COMPLETION CODE IS NOT '7F'X, PRINT A MESSAGE (ICG406I */
*   /* I/O ERROR ON SYSUT3) AND RETURN TO THE CALLER WITH 'RETCODE' =*/
*   /* 16 AND 'UT3VWERR' FLAG SET ON.                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0196
*   UT3VWERR=OFF;                   /*                       @Y30LB10*/
         NI    UT3VWERR(@10),B'11011111'                           0196
*   UT3ECB=WORDZERO;                /*                       @Y30LB10*/
         SLR   @00,@00                                             0197
         ST    @00,UT3ECB(,@10)                                    0197
*   R1=ADDR(UT3IOB);                /*                       @Y30LB10*/
         LA    R1,UT3IOB(,@10)                                     0198
*   GEN(EXCP (1));                  /*                       @Y30LB10*/
         EXCP (1)
*   R1=ADDR(UT3ECB);                /*                       @Y30LB10*/
         L     R1,BUILDPTR(,R4)                                    0200
         LA    R1,UT3ECB(,R1)                                      0200
*   GEN(WAIT 1,ECB=(1));            /*                       @Y30LB10*/
         WAIT 1,ECB=(1)
*   IF UT3ECB(1)^=CODE7F            /*                       @Y30LB10*/
*     THEN                          /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0202
         CLC   UT3ECB(1,@10),CODE7F                                0202
         BE    @RF00202                                            0202
*     DO;                           /*                       @Y30LB10*/
*       LIVEIO=IOMSG;               /*                       @Y30LB10*/
         LA    @15,689                                             0204
         ALR   @15,R4                                              0204
         MVC   LIVEIO(30,@15),IOMSG                                0204
*       IMSGNAM=UT3DDN;             /*                       @Y30LB10*/
         MVC   IMSGNAM(8,@15),UT3DDN(@10)                          0205
*       R1=ADDR(UT3IOB);            /*                       @YM34316*/
         LA    R1,UT3IOB(,@10)                                     0206
*       CALL IOERR;                 /*                       @Y30LB10*/
         BAL   @14,IOERR                                           0207
*       UT3VWERR=ON;                /*                       @Y30LB10*/
         L     @10,BUILDPTR(,R4)                                   0208
         OI    UT3VWERR(@10),B'00100000'                           0208
*       GOTO EXIT;                  /*                       @Y30LB10*/
         B     EXIT                                                0209
*     END;                          /*                       @Y30LB10*/
*EXIT:                                                             0211
*   DCBPTR=DCBPTSAV;                /*                       @Y30LB10*/
@RF00202 DS    0H                                                  0211
EXIT     ST    DCBPTSAV,DCBPTR(,R4)                                0211
*   RETURN;                         /*                       @Y30LB10*/
@EL00001 L     @13,4(,@13)                                         0212
@EF00001 L     @00,@SIZDATD                                        0212
         LR    @01,@11                                             0212
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0212
         BR    @14                                                 0212
*                                                                  0213
*/*********************************************************  @XD00153*/
*/*                                                          @XD00153*/
*/* PROCEDURE NAME - IOERR                                   @XD00153*/
*/*                                                          @XD00153*/
*/* FUNCTION - PRINT THE I/O ERROR MESSAGE VIA PROC 'PUTIT1' @XD00153*/
*/*            AND MODULE 'ICGDSMSG'.  THE TEXT OF THE MSG   @XD00153*/
*/*            IS:                                           @XD00153*/
*/*               'ICG406I I/O ERROR ON XXXXXXXX, TEXT'      @XD00153*/
*/*            THE 'XXXXXXXX' IS THE DDNAME.  THE TEXT IS    @XD00153*/
*/*            THE SYNAD TEXT.  RETURN CODE (RETCODE) IS SET @XD00153*/
*/*            TO 16.                                        @XD00153*/
*/*                                                          @XD00153*/
*/*********************************************************  @XD00153*/
*                                                                  0213
*IOERR:                                                            0213
*   PROCEDURE;                      /*                       @Y30LB10*/
IOERR    STM   @14,@12,@SA00002                                    0213
*   GEN(SYNADAF ACSMETH=EXCP);      /*                       @Y30LB10*/
         SYNADAF ACSMETH=EXCP
*   GEN(MVC   OUTBUF2+30(79,R4),49(1));/*                    @YM32166*/
         MVC   OUTBUF2+30(79,R4),49(1)
*   CALL PUTIT1;                    /*                       @Y30LB10*/
         BAL   @14,PUTIT1                                          0216
*   GEN(SYNADRLS);                  /*                       @Y30LB10*/
         SYNADRLS
*   RETCODE=ERRCODE;                /*                       @Y30LB10*/
         MVC   RETCODE(2,R4),@CH00148                              0218
*   END IOERR;                      /*                       @Y30LB10*/
@EL00002 DS    0H                                                  0219
@EF00002 DS    0H                                                  0219
@ER00002 LM    @14,@12,@SA00002                                    0219
         BR    @14                                                 0219
*                                                                  0220
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0220
*PUTIT1:                                                           0220
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT1   STM   @14,@12,@SA00003                                    0220
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'10000000'                                0221
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0222
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @10,1                                               0223
         AH    @10,TERMINAT(,R4)                                   0223
         STH   @10,TERMINAT(,R4)                                   0223
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0225
*   END PUTIT1;                     /*                       @Y30LB12*/
@EL00003 DS    0H                                                  0226
@EF00003 DS    0H                                                  0226
@ER00003 LM    @14,@12,@SA00003                                    0226
         BR    @14                                                 0226
*   DCL                                                            0227
*     1 PATCHBO6 STATIC LOCAL,      /*                       @Y30LB10*/
*      2 * CHAR(256),               /*                       @Y30LB10*/
*       3 *(256) CHAR(1) INIT((256)'00'X);/*                 @Y30LB10*/
*   DCL                                                            0228
*     PGMEND CHAR(1) STATIC LOCAL;  /*                       @Y30LB10*/
*   END ICGDSB06                    /*                       @Y30LB10*/
*                                                                  0229
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA5)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */
*                                                                  0229
*       ;                                                          0229
@DATA    DS    0H
@CH00035 DC    H'1'
@CH00145 DC    H'5'
@CH00148 DC    H'16'
@CH00249 DC    H'32'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@SA00003 DS    15F
@TF00001 DS    F
@TF00002 DS    F
@ZTEMPS  DS    0F
@ZT00002 DC    F'0'
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSB06 CSECT
         DS    0F
@CF00992 DC    F'22234'
@DATD    DSECT
         DS    0D
IOBPRPTR DS    A
STOPSCAN DS    BL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSB06 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
IOMSG    DS    CL30
         ORG   IOMSG
@NM00039 DC    CL22' ICG406I I/O ERROR ON '
@NM00040 DC    CL8'        '
         ORG   IOMSG+30
SIDFLCT  DC    X'40000005'
TICFLCT  DC    X'40000001'
SKIP     DC    X'7000'
CMDCHN   DC    X'6000'
NOCHN    DC    X'2000'
LEN272   DC    X'0110'
NOCHNSK  DC    X'3000'
LEN264   DC    X'000108'
READOP   DC    X'1E'
CHARZERO DC    X'00'
CHARONE  DC    X'01'
SIDOP    DC    X'31'
TICOP    DC    X'08'
WRTOP    DC    X'1D'
CODE7F   DC    X'7F'
PATCHBO6 DS    CL256
         ORG   PATCHBO6
@NM00042 DS    CL256
         ORG   @NM00042
@NM00043 DC    256X'00'
         ORG   PATCHBO6+256
PGMEND   DS    CL1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RECNUM   EQU   @03
DCBPTSAV EQU   @07
I        EQU   @02
IOBSTPTR EQU   @05
R4       EQU   @04
R6       EQU   @06
R1       EQU   @01
IOBPREFX EQU   0
IOBCFLG1 EQU   IOBPREFX
IOBSTDRD EQU   0
IOBFLAG1 EQU   IOBSTDRD
IOBCYCCK EQU   IOBFLAG1
IOBRSTRT EQU   IOBFLAG1
IOBFLAG2 EQU   IOBSTDRD+1
IOBPURGE EQU   IOBFLAG2
IOBRDHA0 EQU   IOBFLAG2
IOBSENS0 EQU   IOBSTDRD+2
IOBS0B7  EQU   IOBSENS0
IOBSENS1 EQU   IOBSTDRD+3
IOBECBPT EQU   IOBSTDRD+4
IOBFLAG3 EQU   IOBSTDRD+8
IOBFL3   EQU   IOBFLAG3
IOBCNC   EQU   IOBFL3
IOBICL   EQU   IOBFL3
IOBCSW   EQU   IOBSTDRD+9
IOBIOCSW EQU   IOBCSW
IOBSTBYT EQU   IOBIOCSW+3
IOBUSTAT EQU   IOBSTBYT
IOBCSTAT EQU   IOBSTBYT+1
IOBSTART EQU   IOBSTDRD+16
IOBDCBPT EQU   IOBSTDRD+20
IOBFLAG4 EQU   IOBDCBPT
IOBRESTR EQU   IOBSTDRD+24
IOBINCAM EQU   IOBSTDRD+28
IOBBTAMF EQU   IOBINCAM
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFEC  EQU   DCBIFLGS
IHADCS28 EQU   0
DCBOPTCD EQU   IHADCS28
DCBOPTZ  EQU   DCBOPTCD
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
PCHBF    EQU   READER+99
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
PRINTER  EQU   COMTAB+464
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
RETCODE  EQU   MESSAGES
TERMINAT EQU   MESSAGES+6
SPECLMSG EQU   MESSAGES+18
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
COMPTR2  EQU   GENIO+16
BUILDPTR EQU   GENIO+20
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
CPUASSOC EQU   COMTAB+3026
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00030 EQU   CREATE
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
BUILDTAB EQU   0
COMB06   EQU   BUILDTAB
B06BUFPT EQU   COMB06+4
B06ADDR  EQU   COMB06+9
B06CYL   EQU   B06ADDR
B06HEAD  EQU   B06ADDR+1
B06REC   EQU   B06ADDR+2
COMB05   EQU   BUILDTAB+12
B05ADDR  EQU   COMB05+9
BUILDGEN EQU   BUILDTAB+24
UT2VCHR  EQU   BUILDGEN+8
OUTADDR  EQU   UT2VCHR+1
UT1VCHR  EQU   BUILDGEN+12
INADDR   EQU   UT1VCHR+1
UT1STUFF EQU   BUILDTAB+40
UT1FLAG  EQU   UT1STUFF+96
UT2STUFF EQU   BUILDTAB+664
UT2DCB   EQU   UT2STUFF
UT2FLAG  EQU   UT2STUFF+96
UT2VWERR EQU   UT2FLAG
UT2ECB   EQU   UT2STUFF+276
UT2IOB   EQU   UT2STUFF+280
UT2CCWS  EQU   UT2STUFF+320
UT2DDN   EQU   UT2STUFF+616
UT3STUFF EQU   BUILDTAB+1288
UT3DCB   EQU   UT3STUFF
UT3FLAG  EQU   UT3STUFF+96
UT3VWERR EQU   UT3FLAG
UT3ECB   EQU   UT3STUFF+276
UT3IOB   EQU   UT3STUFF+280
UT3CCWS  EQU   UT3STUFF+320
UT3DDN   EQU   UT3STUFF+616
LTRTRANO EQU   BUILDTAB+22236
LOCALREC EQU   0
COUNTFLD EQU   LOCALREC
COUNTCC  EQU   COUNTFLD
COUNTHH  EQU   COUNTFLD+2
COUNTR   EQU   COUNTFLD+4
LKEYDATA EQU   COUNTFLD+5
PREFIX   EQU   LOCALREC+8
CCWS2    EQU   0
SIDEQ2   EQU   CCWS2
SIDOP2   EQU   SIDEQ2
SIDADR2  EQU   SIDEQ2+1
SIDFLCT2 EQU   SIDEQ2+4
TICBACK2 EQU   CCWS2+8
TICOP2   EQU   TICBACK2
TICADR2  EQU   TICBACK2+1
TICFLCT2 EQU   TICBACK2+4
WRITES2  EQU   CCWS2+16
WRITEOP2 EQU   WRITES2
WRITEDA2 EQU   WRITES2+1
WRTEFLG2 EQU   WRITES2+4
WRTELEN2 EQU   WRITES2+6
CCWS3    EQU   0
SIDEQ3   EQU   CCWS3
SIDOP3   EQU   SIDEQ3
SIDADR3  EQU   SIDEQ3+1
SIDFLCT3 EQU   SIDEQ3+4
TICBACK3 EQU   CCWS3+8
TICOP3   EQU   TICBACK3
TICADR3  EQU   TICBACK3+1
TICFLCT3 EQU   TICBACK3+4
WRITES3  EQU   CCWS3+16
WRITEOP3 EQU   WRITES3
WRITEDA3 EQU   WRITES3+1
WRTEFLG3 EQU   WRITES3+4
WRTELEN3 EQU   WRITES3+6
LIVEIO   EQU   0
IMSGNAM  EQU   LIVEIO+22
SCANBUF  EQU   0
SCANDATA EQU   0
IOBORG01 EQU   IOBPREFX+8
IOBNIOBA EQU   IOBORG01
IOBNFLG1 EQU   IOBNIOBA
IOBPRTOV EQU   IOBNFLG1
IOBORG02 EQU   IOBPREFX+8
IOBDQADA EQU   IOBORG02
IOBDEQIN EQU   IOBDQADA
IOBORG03 EQU   IOBPREFX+12
IOBORG04 EQU   IOBINCAM
IOBORG12 EQU   IOBINCAM
IOBFL4   EQU   IOBORG12
IOBEXTEN EQU   IOBSTDRD+32
IOBSEEK  EQU   IOBEXTEN
IOBM     EQU   IOBSEEK
IOBBB    EQU   IOBSEEK+1
IOBCC    EQU   IOBSEEK+3
IOBCC2   EQU   IOBCC+1
IOBHH    EQU   IOBSEEK+5
IOBHH2   EQU   IOBHH+1
IOBR     EQU   IOBSEEK+7
IOBORG05 EQU   IOBEXTEN
IOBORG06 EQU   IOBEXTEN
IOBNXTPT EQU   IOBORG06+4
IOBSTATA EQU   IOBNXTPT
IOBORG07 EQU   IOBEXTEN+8
W1IEXTEN EQU   IOBORG07
IOBORG08 EQU   IOBEXTEN+8
IOBINDCT EQU   IOBORG08+4
IOBUNSQR EQU   IOBORG08+5
IOBFCHAD EQU   IOBORG08+8
IOBORG09 EQU   IOBEXTEN+8
IOBDPLAD EQU   IOBORG09+4
IOBDTYPE EQU   IOBORG09+8
IOBDTYP2 EQU   IOBORG09+9
IOBDSTAT EQU   IOBORG09+10
IOBSTAT1 EQU   IOBDSTAT
IOBORG10 EQU   IOBEXTEN+8
IOBSEEK2 EQU   IOBORG10
IOBORG11 EQU   IOBEXTEN
IOBERCT  EQU   IOBORG11
IOBUCBXV EQU   IOBERCT
IOBNAME  EQU   IOBORG11+4
IOBORG13 EQU   IOBEXTEN
IOBSKADR EQU   IOBORG13
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOBSKSS  EQU   IOBSKADR+3
IOBSK0   EQU   IOBSKADR+2
IOBSKTT  EQU   IOBSKADR+1
IOBSKRV  EQU   IOBSKADR
IOBCSWSV EQU   IOBORG11+17
IOBSENSV EQU   IOBORG11+16
IOBRCD   EQU   IOBORG11+12
IOBMDREC EQU   IOBORG11+8
IOBNAMEA EQU   IOBNAME+1
IOBNAMSZ EQU   IOBNAME
IOBERCTA EQU   IOBERCT+1
IOBRTYPE EQU   IOBUCBXV
IOBRDCHP EQU   IOBORG10+20
IOBNEXTA EQU   IOBORG10+16
IOBREADA EQU   IOBORG10+12
IOBBUFC  EQU   IOBORG10+8
IOBSK2R  EQU   IOBSEEK2+7
IOBSK2HH EQU   IOBSEEK2+5
IOBSK2CC EQU   IOBSEEK2+3
IOBSK2BB EQU   IOBSEEK2+1
IOBSK2M  EQU   IOBSEEK2
IOBCHNPR EQU   IOBORG09+40
IOBDNCRF EQU   IOBORG09+32
IOBRSV35 EQU   IOBORG09+24
IOBDQPTR EQU   IOBORG09+20
IOBRSV34 EQU   IOBORG09+18
IOBDBYTN EQU   IOBORG09+16
IOBDCPND EQU   IOBORG09+12
IOBSTAT2 EQU   IOBDSTAT+1
IOBSIORT EQU   IOBSTAT1
IOBADDVU EQU   IOBSTAT1
IOBBUFF  EQU   IOBSTAT1
IOBENQUE EQU   IOBSTAT1
IOBPASS2 EQU   IOBSTAT1
IOBSYNCH EQU   IOBSTAT1
IOBNEWVL EQU   IOBSTAT1
IOBABNRM EQU   IOBSTAT1
IOBRELEX EQU   IOBDTYP2
IOBADDTY EQU   IOBDTYP2
IOBTYPE  EQU   IOBDTYP2
IOBRQUST EQU   IOBDTYP2
IOBSUFFX EQU   IOBDTYP2
IOBSBLKL EQU   IOBDTYP2
IOBSKEY  EQU   IOBDTYP2
IOBRELBL EQU   IOBDTYPE
IOBRDEXC EQU   IOBDTYPE
IOBDYNBF EQU   IOBDTYPE
IOBACTAD EQU   IOBDTYPE
IOBFDBCK EQU   IOBDTYPE
IOBEXTSC EQU   IOBDTYPE
IOBOVFLO EQU   IOBDTYPE
IOBVERFY EQU   IOBDTYPE
IOBDPLB  EQU   IOBDPLAD+1
IOBDAYLI EQU   IOBDPLAD
IOBDIOBS EQU   IOBORG09+2
IOBDBYTR EQU   IOBORG09
IOBBCHAD EQU   IOBORG08+12
IOBFCHNB EQU   IOBFCHAD+1
IOBCOUNT EQU   IOBFCHAD
IOBASYN  EQU   IOBORG08+7
IOBAPP   EQU   IOBORG08+6
IOBRSV32 EQU   IOBUNSQR
IOBRSV31 EQU   IOBUNSQR
IOBRSV30 EQU   IOBUNSQR
IOBKNRWR EQU   IOBUNSQR
IOBKNWR  EQU   IOBUNSQR
IOBNTAV2 EQU   IOBUNSQR
IOBNTAV1 EQU   IOBUNSQR
IOBCPBSY EQU   IOBUNSQR
IOBCHNNL EQU   IOBINDCT
IOBRSV29 EQU   IOBINDCT
IOBRSV28 EQU   IOBINDCT
IOBRSV27 EQU   IOBINDCT
IOBKEYAD EQU   IOBINDCT
IOBOVPTR EQU   IOBINDCT
IOBUNSCH EQU   IOBINDCT
IOBDEQCP EQU   IOBINDCT
IOBCCWAD EQU   IOBORG08
W1OEXTEN EQU   W1IEXTEN
IOBCCW   EQU   IOBORG06+8
IOBNXTPB EQU   IOBNXTPT+1
IOBRSV26 EQU   IOBSTATA
IOBRSV25 EQU   IOBSTATA
IOBRSV24 EQU   IOBSTATA
IOBRSV23 EQU   IOBSTATA
IOBRSV22 EQU   IOBSTATA
IOBRSV21 EQU   IOBSTATA
IOBRSV20 EQU   IOBSTATA
IOBAVLFL EQU   IOBSTATA
IOBRSV37 EQU   IOBORG06+1
IOBUCBXG EQU   IOBORG06
IOBCPA   EQU   IOBORG05+32
IOBERINF EQU   IOBORG05+16
IOBERCCW EQU   IOBORG05+8
IOBSNDPT EQU   IOBORG05+7
IOBRCVPT EQU   IOBORG05+6
IOBWORK  EQU   IOBORG05+1
IOBUCBX  EQU   IOBORG05
IOBHH1   EQU   IOBHH
IOBCC1   EQU   IOBCC
IOBBB2   EQU   IOBBB+1
IOBBB1   EQU   IOBBB
IOBRSV46 EQU   IOBFL4
IOBRSV47 EQU   IOBFL4
IOBENT   EQU   IOBFL4
IOBEQP   EQU   IOBFL4
IOBBUS   EQU   IOBFL4
IOBDCK   EQU   IOBFL4
IOBREJ   EQU   IOBFL4
IOBOVR   EQU   IOBFL4
IOBCRILC EQU   IOBORG04+1
IOBCRDCC EQU   IOBORG04
IOBGQECB EQU   IOBORG03
IOBSWAP  EQU   IOBORG02+4
IOBDQADB EQU   IOBDQADA+1
IOBRSV13 EQU   IOBDEQIN
IOBRSV12 EQU   IOBDEQIN
IOBRSV11 EQU   IOBDEQIN
IOBRSV10 EQU   IOBDEQIN
IOBRSV09 EQU   IOBDEQIN
IOBRSV08 EQU   IOBDEQIN
IOBRSV07 EQU   IOBDEQIN
IOBDEQ   EQU   IOBDEQIN
IOBNECB  EQU   IOBORG01+4
IOBNIOBB EQU   IOBNIOBA+1
IOBFIRST EQU   IOBNFLG1
IOBUPERR EQU   IOBNFLG1
IOBSPAN  EQU   IOBNFLG1
IOBBKSPC EQU   IOBNFLG1
IOBUPDAT EQU   IOBNFLG1
IOBREAD  EQU   IOBNFLG1
IOBWRITE EQU   IOBNFLG1
IOBSEGMT EQU   IOBPRTOV
@NM00041 EQU   LIVEIO
DATAPART EQU   LOCALREC+16
@NM00038 EQU   PREFIX+4
PREFIXR  EQU   PREFIX+3
PREFIXH  EQU   PREFIX+2
PREFIXC  EQU   PREFIX+1
@NM00037 EQU   PREFIX
TEMPEND  EQU   BUILDTAB+22396
LTRTRANI EQU   BUILDTAB+22316
UT2BUFER EQU   BUILDTAB+13532
UT1BUFER EQU   BUILDTAB+5084
NVERIFY  EQU   BUILDTAB+3500
CVERIFY  EQU   BUILDTAB+1916
@NM00036 EQU   UT3STUFF+624
UT3JFCB  EQU   UT3STUFF+100
@NM00035 EQU   UT3FLAG
UT3VOERR EQU   UT3FLAG
UT3VUPDT EQU   UT3FLAG
UT2JFCB  EQU   UT2STUFF+100
@NM00034 EQU   UT2FLAG
UT2VCERR EQU   UT2FLAG
UT2VOERR EQU   UT2FLAG
UT2VUPDT EQU   UT2FLAG
UT1DDN   EQU   UT1STUFF+616
UT1CCWS  EQU   UT1STUFF+320
UT1IOB   EQU   UT1STUFF+280
UT1ECB   EQU   UT1STUFF+276
UT1JFCB  EQU   UT1STUFF+100
@NM00033 EQU   UT1FLAG
UT1VWERR EQU   UT1FLAG
UT1VOERR EQU   UT1FLAG
UT1VUPDT EQU   UT1FLAG
UT1DCB   EQU   UT1STUFF
UT1VREC  EQU   INADDR+2
UT1VHEAD EQU   INADDR+1
UT1VCYL  EQU   INADDR
UT1TABID EQU   UT1VCHR
UT2VREC  EQU   OUTADDR+2
UT2VHEAD EQU   OUTADDR+1
UT2VCYL  EQU   OUTADDR
UT2TABID EQU   UT2VCHR
ADDRBUF2 EQU   BUILDGEN+4
ADDRBUF1 EQU   BUILDGEN
B05REC   EQU   B05ADDR+2
B05HEAD  EQU   B05ADDR+1
B05CYL   EQU   B05ADDR
B05TBLID EQU   COMB05+8
B05BUFPT EQU   COMB05+4
B05DCBPT EQU   COMB05
B06TBLID EQU   COMB06+8
B06DCBPT EQU   COMB06
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
CPUREFNO EQU   RSGUCB+6
RSGCPUID EQU   RSGUCB+1
@NM00032 EQU   RSGFLAGS
CISPEC   EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00031 EQU   @NM00030
PRNTONLY EQU   @NM00030
UPDCREAT EQU   @NM00030
NEWCREAT EQU   @NM00030
CMDCREAT EQU   @NM00030
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00029 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00028 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00027 EQU   CPUFLAG2
CPUSPEC  EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00026 EQU   CPUFLAG1
TOMPCPU  EQU   CPU+5
CPUID    EQU   CPU
CPUNUM   EQU   CPUASSOC
SPNRSGNO EQU   PHYSTYPE+1
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSICEB EQU   MERLICEB
PHYSMERL EQU   MERLICEB
PHYSDS2  EQU   DSPAIRS
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00025 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00024 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00023 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00022 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
TODS2    EQU   RSGTODS+1
TODS1    EQU   RSGTODS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00021 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
SAVE14   EQU   GENIO+12
EXLST    EQU   GENIO+8
@NM00020 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00019 EQU   MESSAGES+19
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00018 EQU   SPECLMSG
PRNTCARD EQU   SPECLMSG
@NM00017 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
WARNING  EQU   MESSAGES+4
MSGNO    EQU   MESSAGES+2
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00016 EQU   READER+206
SCANLEN  EQU   READER+204
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
INBUF    EQU   READER+100
SSELECT  EQU   PCHBF
@NM00015 EQU   READER+97
@NM00014 EQU   READFLAG
LASTPARM EQU   READFLAG
ENDSCAN  EQU   READFLAG
PARMBIT  EQU   READFLAG
KEYBIT   EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
@NM00013 EQU   IHADCS28+1
@NM00012 EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
@NM00011 EQU   DCBOPTCD
DCBDEBA  EQU   DCBDEBAD+1
@NM00010 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBIFPCT EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00009 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBIBPCT EQU   DCBIFLG
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00008 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00007 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00006 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00005 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
DCBDSGMQ EQU   DCBDSRG1
DCBDSGCQ EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00004 EQU   IHADCS01+5
@NM00003 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00002 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00001 EQU   IHADCB
IOBERRCT EQU   IOBSTDRD+30
IOBRSV19 EQU   IOBINCAM+1
IOBOLTST EQU   IOBBTAMF
IOBRFTMG EQU   IOBBTAMF
IOBRSV17 EQU   IOBBTAMF
IOBRSV16 EQU   IOBBTAMF
IOBRSV15 EQU   IOBBTAMF
IOBRSV14 EQU   IOBBTAMF
IOBINUSE EQU   IOBBTAMF
IOBPRMER EQU   IOBBTAMF
IOBRSTRB EQU   IOBRESTR+1
IOBREPOS EQU   IOBRESTR
IOBDCBPB EQU   IOBDCBPT+1
IOBRSV44 EQU   IOBFLAG4
IOBJES3I EQU   IOBFLAG4
IOBRSV42 EQU   IOBFLAG4
IOBRSV41 EQU   IOBFLAG4
IOBRSV40 EQU   IOBFLAG4
IOBPMERR EQU   IOBFLAG4
IOBCC3WE EQU   IOBFLAG4
IOBGDPOL EQU   IOBFLAG4
IOBSTRTB EQU   IOBSTART+1
IOBSIOCC EQU   IOBSTART
IOBCSB7  EQU   IOBCSTAT
IOBCSB6  EQU   IOBCSTAT
IOBCSB5  EQU   IOBCSTAT
IOBCSB4  EQU   IOBCSTAT
IOBCSB3  EQU   IOBCSTAT
IOBCSB2  EQU   IOBCSTAT
IOBCSB1  EQU   IOBCSTAT
IOBCSB0  EQU   IOBCSTAT
IOBUSB7  EQU   IOBUSTAT
IOBUSB6  EQU   IOBUSTAT
IOBUSB5  EQU   IOBUSTAT
IOBUSB4  EQU   IOBUSTAT
IOBUSB3  EQU   IOBUSTAT
IOBUSB2  EQU   IOBUSTAT
IOBUSB1  EQU   IOBUSTAT
IOBUSB0  EQU   IOBUSTAT
IOBCMDA  EQU   IOBIOCSW
IOBLOG   EQU   IOBFL3
IOBJAM   EQU   IOBICL
IOBMSG   EQU   IOBFL3
IOBSDR   EQU   IOBCNC
IOBACU   EQU   IOBFL3
IOBCDC   EQU   IOBFL3
IOBICC   EQU   IOBFL3
IOBCCC   EQU   IOBFL3
IOBECBPB EQU   IOBECBPT+1
IOBECBCC EQU   IOBECBPT
IOBS1B7  EQU   IOBSENS1
IOBS1B6  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B0  EQU   IOBSENS1
IOBSNSC9 EQU   IOBS0B7
IOBS0B6  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B0  EQU   IOBSENS0
IOBPNCH  EQU   IOBFLAG2
IOBSTATO EQU   IOBFLAG2
IOBSKUPD EQU   IOBFLAG2
IOBALTTR EQU   IOBFLAG2
IOBRRT2  EQU   IOBRDHA0
IOBRRT3  EQU   IOBPURGE
IOBSENSE EQU   IOBFLAG2
IOBHALT  EQU   IOBFLAG2
IOBSPSVC EQU   IOBRSTRT
IOBUNREL EQU   IOBFLAG1
IOBIOERR EQU   IOBFLAG1
IOBFCREX EQU   IOBCYCCK
IOBRPSTN EQU   IOBFLAG1
IOBERRTN EQU   IOBFLAG1
IOBCMDCH EQU   IOBFLAG1
IOBDATCH EQU   IOBFLAG1
IOBCNOPA EQU   IOBPREFX+12
IOBCICB  EQU   IOBPREFX+8
IOBCECB  EQU   IOBPREFX+4
IOBCONOP EQU   IOBPREFX+3
IOBCINOP EQU   IOBPREFX+2
IOBRSV05 EQU   IOBPREFX+1
IOBPCI   EQU   IOBCFLG1
IOBRSTCH EQU   IOBCFLG1
IOBABAPP EQU   IOBCFLG1
IOBPTST  EQU   IOBCFLG1
IOBRSV04 EQU   IOBCFLG1
IOBRSV03 EQU   IOBCFLG1
IOBRSV02 EQU   IOBCFLG1
IOBRSV01 EQU   IOBCFLG1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00070 EQU   EXIT
@RT00114 EQU   EXCPUT2
@RT00146 EQU   EXIT
@RT00181 EQU   EXCPUT3
@ENDDATA EQU   *
         END   ICGDSB06,(C'PLS1301',0603,76336)
