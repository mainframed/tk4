         TITLE 'ICGDSS02 MSC TABLE CREATE, SCAN CPUCONFG STATEMENT     *
                        '
ICGDSS02 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSS02  76.340'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0026
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            CALL S02INIT TO INITIALIZE.  CALL S02SCAN     @Y30LB12*/
*/*            TO EXTRACT KEYWORDS AND PARAMETERS FROM       @Y30LB12*/
*/*            CONTROL STATEMENT.  CALL S02ANAL TO CHECK     @Y30LB12*/
*/*            FOR MISSING REQUIRED PARAMETERS.  IF NO       @Y30LB12*/
*/*            ERRORS ENCOUNTERED IN SCAN OR ANALYZE, CALL   @Y30LB12*/
*/*            S02BUILD TO UPDATE CPUASSOC IN COMTAB.        @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0026
*   CALL S02INIT;                   /*                       @Y30LB12*/
         BAL   @14,S02INIT                                         0026
*   CALL S02SCAN;                   /*                       @Y30LB12*/
         BAL   @14,S02SCAN                                         0027
*   CALL S02ANAL;                   /*                       @Y30LB12*/
         BAL   @14,S02ANAL                                         0028
*   IF STOPSCAN^='1'B               /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    STOPSCAN,B'00001000'                                0029
         BO    @RF00029                                            0029
*     CALL S02BUILD;                /*                       @Y30LB12*/
         BAL   @14,S02BUILD                                        0030
*   ELSE                                                           0031
*     ;                             /*                       @Y30LB12*/
@RF00029 DS    0H                                                  0032
*   RETURN;                         /* TO ICGDSSCN           @Y30LB12*/
@EL00001 L     @13,4(,@13)                                         0032
@EF00001 L     @00,@SIZDATD                                        0032
         LR    @01,@11                                             0032
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0032
         BR    @14                                                 0032
*                                                                  0033
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S02INIT                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - INITIALIZE WORK AREAS.                        @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0033
*S02INIT:                                                          0033
*   PROCEDURE;                      /*                       @Y30LB12*/
S02INIT  STM   @14,@12,12(@13)                                     0033
*   CPUIDENT='     ';               /* INITIALIZE TO BLANK   @Y30LB12*/
         MVC   CPUIDENT(5),@CC00366                                0034
*   MPIDENT='     ';                /* INITIALIZE TO BLANK   @Y30LB12*/
         MVC   MPIDENT(5),@CC00366                                 0035
*   HAVES='00000000'B;              /* INITIALIZE FLAGS OFF  @Y30LB12*/
         MVI   HAVES,B'00000000'                                   0036
*   FLAG1='00000000'B;              /* INITIALIZE FLAGS OFF  @Y30LB12*/
         MVI   FLAG1,B'00000000'                                   0037
*   FLAG2='00000000'B;              /* INITIALIZE FLAGS OFF  @YD00142*/
         MVI   FLAG2,B'00000000'                                   0038
*   END S02INIT;                    /* RETURN TO MAINLINE    @Y30LB12*/
@EL00002 DS    0H                                                  0039
@EF00002 DS    0H                                                  0039
@ER00002 LM    @14,@12,12(@13)                                     0039
         BR    @14                                                 0039
*                                                                  0040
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S02SCAN                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - EXTRACT THE NEXT KEYWORD FROM THE 'CPUCONFG'  @Y30LB12*/
*/*            CONTROL STATEMENT, AND CALL THE PROPER SUB-   @Y30LB12*/
*/*            PROCEDURE TO HANDLE THE PARAMETER.  WHEN      @Y30LB12*/
*/*            THE SCAN IS COMPLETE (LASTPARM = '1'B),       @Y30LB12*/
*/*            RETURN TO MAINLINE.                           @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0040
*S02SCAN:                                                          0040
*   PROCEDURE;                      /*                       @Y30LB12*/
S02SCAN  STM   @14,@12,@SA00003                                    0040
*   DO WHILE(LASTPARM='0'B);        /* TILL NO MORE DATA     @Y30LB12*/
         B     @DE00041                                            0041
@DL00041 DS    0H                                                  0042
*     ERROR='0'B;                   /* ERROR IN CPUCONV      @Y30LB12*/
*     KNOWN='0'B;                   /* RECOGNIZED KEYWD      @Y30LB12*/
         NI    ERROR,B'11101011'                                   0043
*     CALL READS99;                 /* EXTRACT KEYWORD       @Y30LB12*/
         BAL   @14,READS99                                         0044
*     IF LASTPARM='1'B              /* IF NO DATA LEFT       @Y30LB12*/
*       THEN                        /* TO PROCESS, RET.      @Y30LB12*/
         TM    LASTPARM(R4),B'00001000'                            0045
         BO    @RT00045                                            0045
*       RETURN;                     /* TO S02 MAINLINE       @Y30LB12*/
*     ELSE                                                         0047
*       ;                           /* WAS SOMETHING         @Y30LB12*/
*                                                                  0047
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* WE EXPECT THE 'SOMETHING' THAT WE EXTRACTED         @Y30LB12*/
*     /* FROM THE INPUT BUFFER TO BE A KEYWORD (A FIELD      @Y30LB12*/
*     /* TERMINATED BY AN EQUAL SIGN). IF THE DATA IS        @Y30LB12*/
*     /* NOT A KEYWORD, WE ARE LOST. WRITE ERROR             @Y30LB12*/
*     /* MESSAGE 'ICG209I EXPECTED, BUT DID NOT FIND,        @Y30LB12*/
*     /* KEYWORD', AND DISCONTINUE SCAN.                     @Y30LB12*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0048
*     IF KEYBIT^='1'B               /* SET IN ICGDSS99       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         TM    KEYBIT(R4),B'01000000'                              0048
         BO    @RF00048                                            0048
*       DO;                         /*                       @Y30LB12*/
*         MSGNO=ICG209I;            /* ID FOR ICGDS209       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG209I                                 0050
*         CALL PUTIT2;              /* CALL MSG WRITER       @Y30LB12*/
         BAL   @14,PUTIT2                                          0051
*         RETURN;                   /* TO S02 MAINLINE       @Y30LB12*/
@EL00003 DS    0H                                                  0052
@EF00003 DS    0H                                                  0052
@ER00003 LM    @14,@12,@SA00003                                    0052
         BR    @14                                                 0052
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0054
*       ;                           /* FOUND A KEYWORD       @Y30LB12*/
*                                                                  0054
@RF00048 DS    0H                                                  0055
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* TEST IF KEYWORD SCANNED IS 'CPUID', 'MSCINT',       @YD00113*/
*     /* OR 'MPCPU'                                          @YD00113*/
*     /* IF SO, SET FLAG ('KNOWN') TO INDICATE               @YD00113*/
*     /* RECOGNIZED KEYWORD. CALL S02CPUID TO GET            @YD00113*/
*     /* PARAMETER. IF KEYWORD IS NOT ONE OF ABOVE,          @YD00113*/
*     /* CALL UNKNOWN TO WRITE ERROR MESSAGE.                @YD00113*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0055
*     IF SCANDATA(1:6)='CPUID='     /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0055
         CLC   SCANDATA(6,@10),@CC00374                            0055
         BNE   @RF00055                                            0055
*       DO;                         /*                       @Y30LB12*/
*         KNOWN='1'B;               /* RECOGNIZED KEYWD      @Y30LB12*/
         OI    KNOWN,B'00010000'                                   0057
*         CALL S02CPUID;            /* TO GET PARAMETER      @Y30LB12*/
         BAL   @14,S02CPUID                                        0058
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0060
*       ;                           /*                       @Y30LB12*/
*                                                                  0060
@RF00055 DS    0H                                                  0061
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* THE KEYWORD SCANNED WAS 'MSCINT'                    @Y30LB12*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0061
*     IF SCANDATA(1:7)='MSCINT='    /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0061
         CLC   SCANDATA(7,@10),@CC00376                            0061
         BNE   @RF00061                                            0061
*       DO;                         /*                       @Y30LB12*/
*         KNOWN='1'B;               /* RECOGNIZED KEYWD      @Y30LB12*/
         OI    KNOWN,B'00010000'                                   0063
*         CALL S02MSCIN;            /* TO GET PARAMETER      @Y30LB12*/
         BAL   @14,S02MSCIN                                        0064
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0066
*       ;                           /*                       @Y30LB12*/
*                                                                  0066
@RF00061 DS    0H                                                  0067
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @YD00142*/
*     /* THE KEYWORD SCANNED WAS 'ALTINT'                    @YD00142*/
*     /* ***********************************************     @YD00142*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0067
*     IF SCANDATA(1:7)='ALTINT='    /*                       @YD00142*/
*       THEN                        /*                       @YD00142*/
         L     @10,STARTCOL(,R4)                                   0067
         CLC   SCANDATA(7,@10),@CC00378                            0067
         BNE   @RF00067                                            0067
*       DO;                         /*                       @YD00142*/
*         KNOWN='1'B;               /* RECOGNIZED KEYWD      @YD00142*/
         OI    KNOWN,B'00010000'                                   0069
*         CALL S02ALTIN;            /* TO GET PARAMETER      @YD00142*/
         BAL   @14,S02ALTIN                                        0070
*       END;                        /*                       @YD00142*/
*     ELSE                                                         0072
*       ;                           /*                       @YD00142*/
*                                                                  0072
@RF00067 DS    0H                                                  0073
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* THE KEYWORD SCANNED WAS 'MPCPU'                     @Y30LB12*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0073
*     IF SCANDATA(1:6)='MPCPU='     /*                       @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0073
         CLC   SCANDATA(6,@10),@CC00380                            0073
         BNE   @RF00073                                            0073
*       DO;                         /*                       @Y30LB12*/
*         KNOWN='1'B;               /* RECOGNIZED KEYWD      @Y30LB12*/
         OI    KNOWN,B'00010000'                                   0075
*         CALL S02MPCPU;            /* TO GET PARAMETER      @Y30LB12*/
         BAL   @14,S02MPCPU                                        0076
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0078
*       ;                           /* KEYWORD NOT MPCPU     @Y30LB12*/
*                                                                  0078
@RF00073 DS    0H                                                  0079
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @ZD02028*/
*     /* THE KEYWORD SCANNED WAS 'OPSYS'                     @ZD02028*/
*     /* ***********************************************     @ZD02028*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0079
*     IF SCANDATA(1:6)='OPSYS='     /*                       @ZD02028*/
*       THEN                        /*                       @ZD02028*/
         L     @10,STARTCOL(,R4)                                   0079
         CLC   SCANDATA(6,@10),@CC00382                            0079
         BNE   @RF00079                                            0079
*       DO;                         /*                       @ZD02028*/
*         KNOWN='1'B;               /* RECOGNIZED KEYWD      @ZD02028*/
         OI    KNOWN,B'00010000'                                   0081
*         CALL S02OPSYS;            /* TO GET PARAMETER      @ZD02028*/
         BAL   @14,S02OPSYS                                        0082
*       END;                        /*                       @ZD02028*/
*     ELSE                                                         0084
*       ;                           /* KEYWORD NOT OPSYS     @ZD02028*/
*                                                                  0084
@RF00079 DS    0H                                                  0085
*     /***************************************************************/
*     /*                                                             */
*     /* ***********************************************     @Y30LB12*/
*     /* THE KEYWORD IS NOT 'CPUID', 'MPCPU', 'MSCINT',      @YD00142*/
*     /* OR 'ALTINT'                                         @YD00142*/
*     /* ***********************************************     @Y30LB12*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0085
*     IF KNOWN='0'B                 /* UNRECOGNIZED KEY      @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         TM    KNOWN,B'00010000'                                   0085
         BNZ   @RF00085                                            0085
*       CALL UNKNOWN;               /* MSG & POSTITION       @Y30LB12*/
         BAL   @14,UNKNOWN                                         0086
*     ELSE                                                         0087
*       ;                           /*                       @Y30LB12*/
@RF00085 DS    0H                                                  0088
*   END;                            /* END OF 'DO WHILE'     @Y30LB12*/
@DE00041 TM    LASTPARM(R4),B'00001000'                            0088
         BZ    @DL00041                                            0088
*   END S02SCAN;                    /* TO S02 MAINLINE       @Y30LB12*/
         B     @EL00003                                            0089
*                                                                  0090
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S02CPUID                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - WHEN THE KEYWORD IS 'CPUID, READ THE          @Y30LB12*/
*/*            PARAMETER, CHECK FOR DUPLICATE KEYWORD,       @Y30LB12*/
*/*            FORMAT AS PACKED, AND RETURN TO S02SCAN.      @Y30LB12*/
*/*            PARAMETER MUST BE 10 BYTES LONG.  ONLY ONE    @YD00113*/
*/*            CPUID KEYWORD AND PARAMETER ALLOWED PER       @YD00113*/
*/*            CONTROL STATEMENT.                            @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0090
*S02CPUID:                                                         0090
*   PROCEDURE;                      /*                       @Y30LB12*/
S02CPUID STM   @14,@12,@SA00004                                    0090
*   CALL READS99;                   /* EXTRACT PARAMETER     @Y30LB12*/
*                                                                  0091
         BAL   @14,READS99                                         0091
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* TEST KEYWORD FOR EARLIER USE. IF NOT USED             @YD00113*/
*   /* PREVIOUSLY, SET ITS USED FLAG. OTHERWISE, CALL        @YD00113*/
*   /* PUTIT1 TO WRITE DUPLICATE KEYWORD MESSAGE             @YD00113*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0092
*   IF HAVEID^='1'B                 /* IF KEYWORD WAS        @Y30LB12*/
*     THEN                          /* NOT USER EARLIER      @Y30LB12*/
         TM    HAVEID,B'10000000'                                  0092
         BO    @RF00092                                            0092
*     HAVEID='1'B;                  /* SET ITS USED FLAG     @Y30LB12*/
         OI    HAVEID,B'10000000'                                  0093
*   ELSE                            /* ELSE WRITE MSG        @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0094
         B     @RC00092                                            0094
@RF00092 DS    0H                                                  0095
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG219I DUPLICATE KEYWORD CPUID                   @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0095
*       OUTBUF2(1:27)=ICGDS219;     /*                       @Y30LB12*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0095
*       OUTBUF2(28:32)='CPUID';     /*                       @Y30LB12*/
         MVC   OUTBUF2+27(5,R4),@CC00390                           0096
*       CALL PUTIT1;                /* TO MSG WRITER         @Y30LB12*/
         BAL   @14,PUTIT1                                          0097
*       RETURN;                     /* TO S02SCAN            @Y30LB12*/
@EL00004 DS    0H                                                  0098
@EF00004 DS    0H                                                  0098
@ER00004 LM    @14,@12,@SA00004                                    0098
         BR    @14                                                 0098
*     END;                          /*                       @Y30LB12*/
*   IF PARMBIT^='1'B                /* SET IN ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00092 TM    PARMBIT(R4),B'00100000'                             0100
         BO    @RF00100                                            0100
*     DO;                           /*                       @Y30LB12*/
*                                                                  0101
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG211I EXPECTED, BUT DID NOT FIND,               @Y30LB12*/
*       /* PARAMETER                                         @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0102
*       MSGNO=ICG211I;              /* ID FOR ICGDS211       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG211I                                 0102
*       CALL PUTIT2;                /* TO MSG WRITER         @Y30LB12*/
         BAL   @14,PUTIT2                                          0103
*       RETURN;                     /* TO S04SCAN            @Y30LB12*/
         B     @EL00004                                            0104
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0106
*     ;                             /*                       @Y30LB12*/
@RF00100 DS    0H                                                  0107
*   PLUGIN='CPUID';                 /* FOR MESSAGE TEXT      @Y30LB12*/
         MVC   PLUGIN(5),@CC00390                                  0107
*   CALL CPUCONV;                   /* TO PACK PARAMETER     @Y30LB12*/
*                                                                  0108
         BAL   @14,CPUCONV                                         0108
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @YD00113*/
*   /* TEST FOR LENGTH ERROR IN PARAMETER. IF THERE          @YD00113*/
*   /* WAS NO ERROR, MOVE THE DATA TO FIELD IN TABLE         @YD00113*/
*   /* OTHERWISE, CALL PUTIT1 TO ISSUE ERROR MESSAGE         @YD00113*/
*   /* ******************************************            @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0109
*   IF ERROR='0'B                   /* SET IN CPUCONV        @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    ERROR,B'00000100'                                   0109
         BNZ   @RF00109                                            0109
*     CPUIDENT=PACKED(1:5);         /* IS OK, MOVE IT        @Y30LB12*/
         MVC   CPUIDENT(5),PACKED                                  0110
*   ELSE                            /* IF LENGTH WRONG,      @Y30LB12*/
*     DO;                           /* WRITE MESSAGE         @Y30LB12*/
*                                                                  0111
         B     @RC00109                                            0111
@RF00109 DS    0H                                                  0112
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG220I INVALID PARAMETER LENGTH,                 @Y30LB12*/
*       /* KEYWORD IS CPUID                                  @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0112
*       OUTBUF2(1:46)=ICGDS220;     /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0112
*       OUTBUF2(47:51)='CPUID';     /*                       @Y30LB12*/
         MVC   OUTBUF2+46(5,R4),@CC00390                           0113
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0114
*     END;                          /*                       @Y30LB12*/
*   END S02CPUID;                   /* RET. TO S02SCAN       @Y30LB12*/
         B     @EL00004                                            0116
*                                                                  0117
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S02MSCIN                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - WHEN THE KEYWORD IS 'MSCINT', READ THE        @Y30LB12*/
*/*            PARAMETER, CHECK FOR DUPLICATE KEYWORD AND    @Y30LB12*/
*/*            WRONG LENGTH PARAMETER, AND CHECK FOR VALUES  @Y30LB12*/
*/*            'A', 'B', 'C', OR 'D'.  IF NOT ONE OF THESE   @Y30LB12*/
*/*            VALUES, WRITE MESSAGE ICG223I.                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0117
*S02MSCIN:                                                         0117
*   PROCEDURE;                      /*                       @Y30LB12*/
S02MSCIN STM   @14,@12,@SA00005                                    0117
*   CALL READS99;                   /* EXTRACT PARAMETER     @Y30LB12*/
*                                                                  0118
         BAL   @14,READS99                                         0118
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* TEST KEYWORD FOR EARLIER USE. IF NOT USED             @YD00113*/
*   /* PREVIOUSLY, SET ITS USED FLAG. OTHERWISE, CALL        @YD00113*/
*   /* PUTIT1 TO WRITE DUPLICATE KEYWORD MESSAGE             @YD00113*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0119
*   IF HAVEMSC^='1'B                /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    HAVEMSC,B'00100000'                                 0119
         BO    @RF00119                                            0119
*     HAVEMSC='1'B;                 /*                       @Y30LB12*/
         OI    HAVEMSC,B'00100000'                                 0120
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0121
         B     @RC00119                                            0121
@RF00119 DS    0H                                                  0122
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG219I DUPLICATE KEYWORD MSCINT                  @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0122
*       OUTBUF2(1:27)=ICGDS219;     /*                       @Y30LB12*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0122
*       OUTBUF2(28:33)='MSCINT';    /*                       @Y30LB12*/
         MVC   OUTBUF2+27(6,R4),@CC00399                           0123
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0124
*       RETURN;                     /* RET. TO S02SCAN       @Y30LB12*/
@EL00005 DS    0H                                                  0125
@EF00005 DS    0H                                                  0125
@ER00005 LM    @14,@12,@SA00005                                    0125
         BR    @14                                                 0125
*     END;                          /*                       @Y30LB12*/
*                                                                  0126
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @YD00113*/
*   /* TEST IF DATA READ WAS A PARAMETER. IF YES,            @YD00113*/
*   /* TEST PARAMETER LENGTH, OTHERWISE ISSUE ERROR          @YD00113*/
*   /* MESSAGE. IF PARAMETER LENGTH IS CORRECT               @YD00113*/
*   /* (ONE BYTE) CONTINUE TO DETERMINE PARAMETER            @YD00113*/
*   /* VALUE, OTHERWISE ISSUE ERROR MESSAGE.                 @YD00113*/
*   /* ******************************************            @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0127
*   IF PARMBIT^='1'B                /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00119 TM    PARMBIT(R4),B'00100000'                             0127
         BO    @RF00127                                            0127
*     DO;                           /*                       @Y30LB12*/
*                                                                  0128
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG211I EXPECTED, BUT DID NOT FIND,               @Y30LB12*/
*       /* PARAMETER                                         @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0129
*       MSGNO=ICG211I;              /* ID FOR ICGDS211       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG211I                                 0129
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0130
*       RETURN;                     /* RET. TO S02SCAN       @Y30LB12*/
         B     @EL00005                                            0131
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0133
*     ;                             /*                       @Y30LB12*/
@RF00127 DS    0H                                                  0134
*   IF SCANLEN^=1                   /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLC   SCANLEN(2,R4),@CH00042                              0134
         BE    @RF00134                                            0134
*     DO;                           /*                       @Y30LB12*/
*                                                                  0135
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG220I INVALID PARAMETER LENGTH,                 @Y30LB12*/
*       /* KEYWORD IS MSCINT                                 @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0136
*       OUTBUF2(1:46)=ICGDS220;     /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0136
*       OUTBUF2(47:52)='MSCINT';    /*                       @Y30LB12*/
         MVC   OUTBUF2+46(6,R4),@CC00399                           0137
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0138
*       RETURN;                     /* RETURN TO S02SCAN     @Y30LB12*/
         B     @EL00005                                            0139
*     END;                          /*                       @Y30LB12*/
*                                                                  0140
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @YD00113*/
*   /* TEST PARAMETER FOR VALID INTERFACE (A, B, C,          @YD00113*/
*   /* OR D) AND SET 2 BIT CONFIGURATION TO REPRESENT        @YD00113*/
*   /* INTERFACE PARAMETER. IF NO VALID INTERFACE,           @YD00113*/
*   /* ISSUE ERROR MESSAGE VIA PUTIT1.                       @YD00113*/
*   /* ******************************************            @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0141
*   ELSE                                                           0141
*     ;                             /*                       @Y30LB12*/
@RF00134 DS    0H                                                  0142
*   IF SCANDATA(1)='A'              /* FOR 'A' INTERFACE     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0142
         CLI   SCANDATA(@10),C'A'                                  0142
         BNE   @RF00142                                            0142
*     DO;                           /*                       @Y30LB12*/
*       MSCINT='00'B;               /* SET BITS IN FLAG1     @Y30LB12*/
         NI    MSCINT,B'11111100'                                  0144
*       RETURN;                     /* RETURN TO S02SCAN     @Y30LB12*/
         B     @EL00005                                            0145
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0147
*     ;                             /*                       @Y30LB12*/
@RF00142 DS    0H                                                  0148
*   IF SCANDATA(1)='B'              /* FOR 'B' INTERFACE     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0148
         CLI   SCANDATA(@10),C'B'                                  0148
         BNE   @RF00148                                            0148
*     DO;                           /*                       @Y30LB12*/
*       MSCINT='01'B;               /* SET BITS IN FLAG1     @Y30LB12*/
         NI    MSCINT,B'11111101'                                  0150
         OI    MSCINT,B'00000001'                                  0150
*       RETURN;                     /* RETURN TO S02SCAN     @Y30LB12*/
         B     @EL00005                                            0151
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0153
*     ;                             /*                       @Y30LB12*/
@RF00148 DS    0H                                                  0154
*   IF SCANDATA(1)='C'              /* FOR 'C' INTERFACE     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0154
         CLI   SCANDATA(@10),C'C'                                  0154
         BNE   @RF00154                                            0154
*     DO;                           /*                       @Y30LB12*/
*       MSCINT='10'B;               /* SET BITS IN FLAG1     @Y30LB12*/
         NI    MSCINT,B'11111110'                                  0156
         OI    MSCINT,B'00000010'                                  0156
*       RETURN;                     /* RETURN TO S02SCAN     @Y30LB12*/
         B     @EL00005                                            0157
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0159
*     ;                             /*                       @Y30LB12*/
@RF00154 DS    0H                                                  0160
*   IF SCANDATA(1)='D'              /* FOR 'D' INTERFACE     @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0160
         CLI   SCANDATA(@10),C'D'                                  0160
         BNE   @RF00160                                            0160
*     DO;                           /*                       @Y30LB12*/
*       MSCINT='11'B;               /* SET BITS IN FLAG1     @Y30LB12*/
         OI    MSCINT,B'00000011'                                  0162
*       RETURN;                     /* RETURN TO S02SCAN     @Y30LB12*/
         B     @EL00005                                            0163
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0165
*     ;                             /*                       @Y30LB12*/
*                                                                  0165
@RF00160 DS    0H                                                  0166
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* ICG223I VALUE ERROR FOR MSCINT                        @Y30LB12*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0166
*   OUTBUF2(1:25)=ICGDS223;         /*                       @Y30LB12*/
         MVC   OUTBUF2(25,R4),ICGDS223                             0166
*   OUTBUF2(26:31)='MSCINT';        /*                       @Y30LB12*/
         MVC   OUTBUF2+25(6,R4),@CC00399                           0167
*   CALL PUTIT1;                    /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0168
*   END S02MSCIN;                   /* RET. TO S02SCAN       @Y30LB12*/
         B     @EL00005                                            0169
*                                                                  0170
*/********************************************************** @YD00142*/
*/*                                                          @YD00142*/
*/* PROCEDURE NAME - S02ALTIN                                @YD00142*/
*/*                                                          @YD00142*/
*/* FUNCTION - WHEN THE KEYWORD IS 'ALTINT', READ THE        @YD00142*/
*/*            PARAMETER, CHECK FOR DUPLICATE KEYWORD AND    @YD00142*/
*/*            WRONG LENGTH PARAMETER, AND CHECK FOR VALUES  @YD00142*/
*/*            'A', 'B', 'C', OR 'D'.  IF NOT ONE OF THESE   @YD00142*/
*/*            VALUES, WRITE MESSAGE ICG223I.                @YD00142*/
*/*                                                          @YD00142*/
*/********************************************************** @YD00142*/
*                                                                  0170
*S02ALTIN:                                                         0170
*   PROCEDURE;                      /*                       @YD00142*/
S02ALTIN STM   @14,@12,@SA00006                                    0170
*   CALL READS99;                   /* EXTRACT PARAMETER     @YD00142*/
*                                                                  0171
         BAL   @14,READS99                                         0171
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00142*/
*   /* TEST KEYWORD FOR EARLIER USE. IF NOT USED             @YD00142*/
*   /* PREVIOUSLY, SET BOTH 'CPU HAS ALTERNATE PATH'         @YD00142*/
*   /* ('HAVEALT') AND 'CPU USES COMMON MESSAGE              @YD00142*/
*   /* BUFFER' ('HAVEBUF'). OTHERWISE CALL                   @YD00142*/
*   /* PUTIT1 TO WRITE DUPLICATE KEYWORD MESSAGE             @YD00142*/
*   /* ***********************************************       @YD00142*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0172
*   IF HAVEALT^='1'B                /*                       @YD00142*/
*     THEN                          /*                       @YD00142*/
         TM    HAVEALT,B'00100000'                                 0172
         BO    @RF00172                                            0172
*     DO;                           /*                       @YD00142*/
*       HAVEALT='1'B;               /*                       @YD00142*/
         OI    HAVEALT,B'00100000'                                 0174
*       HAVEBUF='1'B;               /*                       @YD00142*/
         OI    HAVEBUF,B'00100000'                                 0175
*     END;                          /*                       @YD00142*/
*   ELSE                            /*                       @YD00142*/
*     DO;                           /*                       @YD00142*/
*                                                                  0177
         B     @RC00172                                            0177
@RF00172 DS    0H                                                  0178
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00142*/
*       /* ICG219I DUPLICATE KEYWORD ALTINT                  @YD00142*/
*       /* *****************************************         @YD00142*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0178
*       OUTBUF2(1:27)=ICGDS219;     /*                       @YD00142*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0178
*       OUTBUF2(28:33)='ALTINT';    /*                       @YD00142*/
         MVC   OUTBUF2+27(6,R4),@CC00413                           0179
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @YD00142*/
         BAL   @14,PUTIT1                                          0180
*       RETURN;                     /* RET. TO S02SCAN       @YD00142*/
@EL00006 DS    0H                                                  0181
@EF00006 DS    0H                                                  0181
@ER00006 LM    @14,@12,@SA00006                                    0181
         BR    @14                                                 0181
*     END;                          /*                       @YD00142*/
*                                                                  0182
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @YD00142*/
*   /* TEST IF DATA READ WAS A PARAMETER. IF YES,            @YD00142*/
*   /* TEST PARAMETER LENGTH, OTHERWISE ISSUE ERROR          @YD00142*/
*   /* MESSAGE. IF PARAMETER LENGTH IS CORRECT               @YD00142*/
*   /* (ONE BYTE) CONTINUE TO DETERMINE PARAMETER            @YD00142*/
*   /* VALUE, OTHERWISE ISSUE ERROR MESSAGE.                 @YD00142*/
*   /* ******************************************            @YD00142*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0183
*   IF PARMBIT^='1'B                /* SET BY ICGDSS99       @YD00142*/
*     THEN                          /*                       @YD00142*/
@RC00172 TM    PARMBIT(R4),B'00100000'                             0183
         BO    @RF00183                                            0183
*     DO;                           /*                       @YD00142*/
*                                                                  0184
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00142*/
*       /* ICG211I EXPECTED, BUT DID NOT FIND,               @YD00142*/
*       /* PARAMETER                                         @YD00142*/
*       /* *****************************************         @YD00142*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0185
*       MSGNO=ICG211I;              /* ID FOR ICGDS211       @YD00142*/
         MVC   MSGNO(2,R4),ICG211I                                 0185
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @YD00142*/
         BAL   @14,PUTIT2                                          0186
*       RETURN;                     /* RET. TO S02SCAN       @YD00142*/
         B     @EL00006                                            0187
*     END;                          /*                       @YD00142*/
*   ELSE                                                           0189
*     ;                             /*                       @YD00142*/
@RF00183 DS    0H                                                  0190
*   IF SCANLEN^=1                   /* SET BY ICGDSS99       @YD00142*/
*     THEN                          /*                       @YD00142*/
         CLC   SCANLEN(2,R4),@CH00042                              0190
         BE    @RF00190                                            0190
*     DO;                           /*                       @YD00142*/
*                                                                  0191
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00142*/
*       /* ICG220I INVALID PARAMETER LENGTH,                 @YD00142*/
*       /* KEYWORD IS ALTINT                                 @YD00142*/
*       /* *****************************************         @YD00142*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0192
*       OUTBUF2(1:46)=ICGDS220;     /*                       @YD00142*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0192
*       OUTBUF2(47:52)='ALTINT';    /*                       @YD00142*/
         MVC   OUTBUF2+46(6,R4),@CC00413                           0193
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @YD00142*/
         BAL   @14,PUTIT1                                          0194
*       RETURN;                     /* RETURN TO S02SCAN     @YD00142*/
         B     @EL00006                                            0195
*     END;                          /*                       @YD00142*/
*                                                                  0196
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @YD00142*/
*   /* TEST PARAMETER FOR VALID INTERFACE (A, B, C,          @YD00142*/
*   /* OR D) AND SET 2 BIT CONFIGURATION TO REPRESENT        @YD00142*/
*   /* INTERFACE PARAMETER. IF NO VALID INTERFACE,           @YD00142*/
*   /* ISSUE ERROR MESSAGE VIA PUTIT1.                       @YD00142*/
*   /* ******************************************            @YD00142*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0197
*   ELSE                                                           0197
*     ;                             /*                       @YD00142*/
@RF00190 DS    0H                                                  0198
*   IF SCANDATA(1)='A'              /* FOR 'A' INTERFACE     @YD00142*/
*     THEN                          /*                       @YD00142*/
         L     @10,STARTCOL(,R4)                                   0198
         CLI   SCANDATA(@10),C'A'                                  0198
         BNE   @RF00198                                            0198
*     DO;                           /*                       @YD00142*/
*       ALTINT='00'B;               /* SET BITS IN FLAG1     @YD00142*/
         NI    ALTINT,B'11111100'                                  0200
*       RETURN;                     /* RETURN TO S02SCAN     @YD00142*/
         B     @EL00006                                            0201
*     END;                          /*                       @YD00142*/
*   ELSE                                                           0203
*     ;                             /*                       @YD00142*/
@RF00198 DS    0H                                                  0204
*   IF SCANDATA(1)='B'              /* FOR 'B' INTERFACE     @YD00142*/
*     THEN                          /*                       @YD00142*/
         L     @10,STARTCOL(,R4)                                   0204
         CLI   SCANDATA(@10),C'B'                                  0204
         BNE   @RF00204                                            0204
*     DO;                           /*                       @YD00142*/
*       ALTINT='01'B;               /* SET BITS IN FLAG1     @YD00142*/
         NI    ALTINT,B'11111101'                                  0206
         OI    ALTINT,B'00000001'                                  0206
*       RETURN;                     /* RETURN TO S02SCAN     @YD00142*/
         B     @EL00006                                            0207
*     END;                          /*                       @YD00142*/
*   ELSE                                                           0209
*     ;                             /*                       @YD00142*/
@RF00204 DS    0H                                                  0210
*   IF SCANDATA(1)='C'              /* FOR 'C' INTERFACE     @YD00142*/
*     THEN                          /*                       @YD00142*/
         L     @10,STARTCOL(,R4)                                   0210
         CLI   SCANDATA(@10),C'C'                                  0210
         BNE   @RF00210                                            0210
*     DO;                           /*                       @YD00142*/
*       ALTINT='10'B;               /* SET BITS IN FLAG1     @YD00142*/
         NI    ALTINT,B'11111110'                                  0212
         OI    ALTINT,B'00000010'                                  0212
*       RETURN;                     /* RETURN TO S02SCAN     @YD00142*/
         B     @EL00006                                            0213
*     END;                          /*                       @YD00142*/
*   ELSE                                                           0215
*     ;                             /*                       @YD00142*/
@RF00210 DS    0H                                                  0216
*   IF SCANDATA(1)='D'              /* FOR 'D' INTERFACE     @YD00142*/
*     THEN                          /*                       @YD00142*/
         L     @10,STARTCOL(,R4)                                   0216
         CLI   SCANDATA(@10),C'D'                                  0216
         BNE   @RF00216                                            0216
*     DO;                           /*                       @YD00142*/
*       ALTINT='11'B;               /* SET BITS IN FLAG1     @YD00142*/
         OI    ALTINT,B'00000011'                                  0218
*       RETURN;                     /* RETURN TO S02SCAN     @YD00142*/
         B     @EL00006                                            0219
*     END;                          /*                       @YD00142*/
*   ELSE                                                           0221
*     ;                             /*                       @YD00142*/
*                                                                  0221
@RF00216 DS    0H                                                  0222
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00142*/
*   /* ICG223I VALUE ERROR FOR ALTINT                        @YD00142*/
*   /* ***********************************************       @YD00142*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0222
*   OUTBUF2(1:25)=ICGDS223;         /*                       @YD00142*/
         MVC   OUTBUF2(25,R4),ICGDS223                             0222
*   OUTBUF2(26:31)='ALTINT';        /*                       @YD00142*/
         MVC   OUTBUF2+25(6,R4),@CC00413                           0223
*   CALL PUTIT1;                    /* TO MESSAGE WRITER     @YD00142*/
         BAL   @14,PUTIT1                                          0224
*   END S02ALTIN;                   /* RET. TO S02SCAN       @YD00142*/
         B     @EL00006                                            0225
*                                                                  0226
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S02MPCPU                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - WHEN THE KEYWORD IS 'MPCPU', READ THE         @Y30LB12*/
*/*            PARAMETER, CHECK FOR DUPLICATE KEYWORD,       @Y30LB12*/
*/*            FORMAT AS PACKED, AND RETURN TO S02SCAN.      @Y30LB12*/
*/*            THE PARAMETER MUST BE 10 BYTES IN LENGTH      @YD00113*/
*/*            ONLY ONE 'MPCPU' KEYWORD AND PARAMETER ARE    @YD00113*/
*/*            ALLOWED PER CPUCONFG CONTROL STATEMENT        @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0226
*S02MPCPU:                                                         0226
*   PROCEDURE;                      /*                       @Y30LB12*/
S02MPCPU STM   @14,@12,@SA00007                                    0226
*   CALL READS99;                   /* EXTRACT PARAMETER     @Y30LB12*/
*                                                                  0227
         BAL   @14,READS99                                         0227
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @Y30LB12*/
*   /* TEST KEYWORD FOR EARLIER USE. IF NOT USED             @YD00113*/
*   /* PREVIOUSLY, SET ITS USED FLAG. OTHERWISE, CALL        @YD00113*/
*   /* PUTIT1 TO WRITE DUPLICATE KEYWORD MESSAGE             @YD00113*/
*   /* ***********************************************       @Y30LB12*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0228
*   IF HAVEMP^='1'B                 /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    HAVEMP,B'01000000'                                  0228
         BO    @RF00228                                            0228
*     HAVEMP='1'B;                  /*                       @Y30LB12*/
         OI    HAVEMP,B'01000000'                                  0229
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0230
         B     @RC00228                                            0230
@RF00228 DS    0H                                                  0231
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG219I DUPLICATE KEYWORD MPCPU                   @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0231
*       OUTBUF2(1:27)=ICGDS219;     /*                       @Y30LB12*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0231
*       OUTBUF2(28:32)='MPCPU';     /*                       @Y30LB12*/
         MVC   OUTBUF2+27(5,R4),@CC00417                           0232
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0233
*       RETURN;                     /* RET. TO S02SCAN       @Y30LB12*/
@EL00007 DS    0H                                                  0234
@EF00007 DS    0H                                                  0234
@ER00007 LM    @14,@12,@SA00007                                    0234
         BR    @14                                                 0234
*     END;                          /*                       @Y30LB12*/
*                                                                  0235
*   /*****************************************************************/
*   /*                                                               */
*   /* *******************************************           @YD00113*/
*   /* TEST IF DATA READ WAS A PARAMETER. IF YES,            @YD00113*/
*   /* CALL CPUCONV TO CONVERT THE CHARACTER DATA TO         @YD00113*/
*   /* PACKED DECIMAL.                                       @YD00113*/
*   /* *******************************************           @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0236
*   IF PARMBIT^='1'B                /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RC00228 TM    PARMBIT(R4),B'00100000'                             0236
         BO    @RF00236                                            0236
*     DO;                           /*                       @Y30LB12*/
*                                                                  0237
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG211I EXPECTED, BUT DID NOT FIND,               @Y30LB12*/
*       /* PARAMETER                                         @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0238
*       MSGNO=ICG211I;              /* ID FOR ICGDS211       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG211I                                 0238
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0239
*       RETURN;                     /* RET. TO S04SCAN       @Y30LB12*/
         B     @EL00007                                            0240
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0242
*     ;                             /*                       @Y30LB12*/
@RF00236 DS    0H                                                  0243
*   PLUGIN='MPCPU';                 /* FOR MESSAGE TEXT      @Y30LB12*/
         MVC   PLUGIN(5),@CC00417                                  0243
*   CALL CPUCONV;                   /* TO PACK PARAMETER     @Y30LB12*/
*                                                                  0244
         BAL   @14,CPUCONV                                         0244
*   /*****************************************************************/
*   /*                                                               */
*   /* *******************************************           @YD00113*/
*   /* TEST FOR LENGTH ERROR IN PARAMETER. IF NO             @YD00113*/
*   /* ERROR WAS DETECTED, MOVE DATA TO FIELD IN             @YD00113*/
*   /* TABLE. OTHERWISE, ISSUE ERROR MESSAGE VIA             @YD00113*/
*   /* PUTIT1.                                               @YD00113*/
*   /* *******************************************           @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0245
*   IF ERROR='0'B                   /* SET BY CPUCONV        @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    ERROR,B'00000100'                                   0245
         BNZ   @RF00245                                            0245
*     MPIDENT=PACKED(1:5);          /* IS OK, MOVE IT        @Y30LB12*/
         MVC   MPIDENT(5),PACKED                                   0246
*   ELSE                            /* IF LENGTH WRONG,      @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
*                                                                  0247
         B     @RC00245                                            0247
@RF00245 DS    0H                                                  0248
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG220I INVALID PARAMETER LENGTH,                 @Y30LB12*/
*       /* KEYWORD IS MPCPU                                  @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0248
*       OUTBUF2(1:46)=ICGDS220;     /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0248
*       OUTBUF2(47:51)='MPCPU';     /*                       @Y30LB12*/
         MVC   OUTBUF2+46(5,R4),@CC00417                           0249
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0250
*     END;                          /*                       @Y30LB12*/
*   END S02MPCPU;                   /* RET. TO S02SCAN       @Y30LB12*/
         B     @EL00007                                            0252
*                                                                  0253
*/********************************************************** @ZD02028*/
*/*                                                          @ZD02028*/
*/* PROCEDURE NAME - S02OPSYS                                @ZD02028*/
*/*                                                          @ZD02028*/
*/* FUNCTION - WHEN THE KEYWORD IS 'OPSYS', READ THE         @ZD02028*/
*/*            PARAMETER, CHECK FOR DUPLICATE KEYWORD AND    @ZD02028*/
*/*            WRONG LENGTH PARAMETER, AND CHECK FOR VALUES  @ZD02028*/
*/*            'VS1','VS2' OR 'JES3'.  IF NOT ONE OF THESE   @G18MB19*/
*/*            VALUES, WRITE MESSAGE ICG223I.                @ZD02028*/
*/*                                                          @ZD02028*/
*/********************************************************** @ZD02028*/
*                                                                  0253
*S02OPSYS:                                                         0253
*   PROCEDURE;                      /*                       @ZD02028*/
S02OPSYS STM   @14,@12,@SA00008                                    0253
*   CALL READS99;                   /* EXTRACT PARAMETER     @ZD02028*/
*                                                                  0254
         BAL   @14,READS99                                         0254
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @ZD02028*/
*   /* TEST KEYWORD FOR EARLIER USE. IF NOT USED             @ZD02028*/
*   /* PREVIOUSLY, SET ITS USED FLAG. OTHERWISE, CALL        @ZD02028*/
*   /* PUTIT1 TO WRITE DUPLICATE KEYWORD MESSAGE             @ZD02028*/
*   /* ***********************************************       @ZD02028*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0255
*   IF HAVOPSYS^='1'B               /*                       @ZD02028*/
*     THEN                          /*                       @ZD02028*/
         TM    HAVOPSYS,B'00000001'                                0255
         BO    @RF00255                                            0255
*     HAVOPSYS='1'B;                /*                       @ZD02028*/
         OI    HAVOPSYS,B'00000001'                                0256
*   ELSE                            /*                       @ZD02028*/
*     DO;                           /*                       @ZD02028*/
*                                                                  0257
         B     @RC00255                                            0257
@RF00255 DS    0H                                                  0258
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @ZD02028*/
*       /* ICG219I DUPLICATE KEYWORD OPSYS                   @ZD02028*/
*       /* *****************************************         @ZD02028*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0258
*       OUTBUF2(1:27)=ICGDS219;     /*                       @ZD02028*/
         MVC   OUTBUF2(27,R4),ICGDS219                             0258
*       OUTBUF2(28:32)='OPSYS';     /*                       @ZD02028*/
         MVC   OUTBUF2+27(5,R4),@CC00421                           0259
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @ZD02028*/
         BAL   @14,PUTIT1                                          0260
*       RETURN;                     /* RET. TO S02SCAN       @ZD02028*/
@EL00008 DS    0H                                                  0261
@EF00008 DS    0H                                                  0261
@ER00008 LM    @14,@12,@SA00008                                    0261
         BR    @14                                                 0261
*     END;                          /*                       @ZD02028*/
*                                                                  0262
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @ZD02028*/
*   /* TEST IF DATA READ WAS A PARAMETER. IF YES,            @ZD02028*/
*   /* TEST PARAMETER LENGTH, OTHERWISE ISSUE ERROR          @ZD02028*/
*   /* MESSAGE. IF PARAMETER LENGTH IS CORRECT               @ZD02028*/
*   /* (3 BYTES), CONTINUE TO DETERMINE PARAMETER            @ZD02028*/
*   /* VALUE, OTHERWISE ISSUE ERROR MESSAGE.                 @ZD02028*/
*   /* ******************************************            @ZD02028*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0263
*   IF PARMBIT^='1'B                /* SET BY ICGDSS99       @ZD02028*/
*     THEN                          /*                       @ZD02028*/
@RC00255 TM    PARMBIT(R4),B'00100000'                             0263
         BO    @RF00263                                            0263
*     DO;                           /*                       @ZD02028*/
*                                                                  0264
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @ZD02028*/
*       /* ICG211I EXPECTED, BUT DID NOT FIND,               @ZD02028*/
*       /* PARAMETER                                         @ZD02028*/
*       /* *****************************************         @ZD02028*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0265
*       MSGNO=ICG211I;              /* ID FOR ICGDS211       @ZD02028*/
         MVC   MSGNO(2,R4),ICG211I                                 0265
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @ZD02028*/
         BAL   @14,PUTIT2                                          0266
*       RETURN;                     /* RET. TO S02SCAN       @ZD02028*/
         B     @EL00008                                            0267
*     END;                          /*                       @ZD02028*/
*   ELSE                                                           0269
*     ;                             /*                       @ZD02028*/
@RF00263 DS    0H                                                  0270
*   IF SCANLEN^=3&SCANLEN^=4        /* SET BY ICGDSS99       @G18MB19*/
*     THEN                          /*                       @ZD02028*/
         LH    @10,SCANLEN(,R4)                                    0270
         CH    @10,@CH00048                                        0270
         BE    @RF00270                                            0270
         CH    @10,@CH00068                                        0270
         BE    @RF00270                                            0270
*     DO;                           /*                       @ZD02028*/
*                                                                  0271
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @ZD02028*/
*       /* ICG220I INVALID PARAMETER LENGTH,                 @ZD02028*/
*       /* KEYWORD IS OPSYS                                  @ZD02028*/
*       /* *****************************************         @ZD02028*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0272
*       OUTBUF2(1:46)=ICGDS220;     /*                       @ZD02028*/
         MVC   OUTBUF2(46,R4),ICGDS220                             0272
*       OUTBUF2(47:51)='OPSYS';     /*                       @ZD02028*/
         MVC   OUTBUF2+46(5,R4),@CC00421                           0273
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @ZD02028*/
         BAL   @14,PUTIT1                                          0274
*       RETURN;                     /* RETURN TO S02SCAN     @ZD02028*/
         B     @EL00008                                            0275
*     END;                          /*                       @ZD02028*/
*                                                                  0276
*   /*****************************************************************/
*   /*                                                               */
*   /* ******************************************            @ZD02028*/
*   /* TEST PARAMETER FOR VALID OPERATING SYSTEM             @ZD02028*/
*   /* (VS1,VS2 OR JES3) AND SET THE APPROPRAITE BIT         @G18MB19*/
*   /* IN FLAG1. IF NOT A VALID OPERATING SYSTEM,            @ZD02028*/
*   /* ISSUE ERROR MESSAGE VIA PUTIT1.                       @ZD02028*/
*   /* ******************************************            @ZD02028*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0277
*   ELSE                                                           0277
*     ;                             /*                       @ZD02028*/
@RF00270 DS    0H                                                  0278
*   IF SCANDATA(1:3)='VS1'&SCANLEN=3/* PRIMARY OS/VS1        @ZD02028*/
*     THEN                          /*                       @ZD02028*/
         L     @10,STARTCOL(,R4)                                   0278
         CLC   SCANDATA(3,@10),@CC00422                            0278
         BNE   @RF00278                                            0278
         CLC   SCANLEN(2,R4),@CH00048                              0278
         BNE   @RF00278                                            0278
*     DO;                           /*                       @ZD02028*/
*       VS1SYS='1'B;                /* SET BIT IN FLAG1      @ZD02028*/
         OI    VS1SYS,B'00010000'                                  0280
*       RETURN;                     /* RETURN TO S02SCAN     @ZD02028*/
         B     @EL00008                                            0281
*     END;                          /*                       @ZD02028*/
*   ELSE                                                           0283
*     ;                             /*                       @ZD02028*/
@RF00278 DS    0H                                                  0284
*   IF SCANDATA(1:3)='VS2'&SCANLEN=3/* PRIMARY OS/VS2        @ZD02028*/
*     THEN                          /*                       @ZD02028*/
         L     @10,STARTCOL(,R4)                                   0284
         CLC   SCANDATA(3,@10),@CC00423                            0284
         BNE   @RF00284                                            0284
         CLC   SCANLEN(2,R4),@CH00048                              0284
         BNE   @RF00284                                            0284
*     DO;                           /*                       @ZD02028*/
*       VS2SYS='1'B;                /* SET BIT IN FLAG1      @ZD02028*/
         OI    VS2SYS,B'00001000'                                  0286
*       RETURN;                     /* RETURN TO S02SCAN     @ZD02028*/
         B     @EL00008                                            0287
*     END;                          /*                       @ZD02028*/
*   ELSE                                                           0289
*     ;                             /*                       @ZD02028*/
@RF00284 DS    0H                                                  0290
*   IF SCANDATA(1:4)='JES3' THEN    /* JES3 SPECIFIED        @G18MB19*/
         L     @10,STARTCOL(,R4)                                   0290
         CLC   SCANDATA(4,@10),@CC00424                            0290
         BNE   @RF00290                                            0290
*     DO;                           /*                       @G18MB19*/
*       VS2SYS='1'B;                /* SET BIT IN FLAG1      @G18MB19*/
*       JES3='1'B;                  /* SET BIT IN FLAG1      @G18MB19*/
         OI    VS2SYS,B'00001100'                                  0293
*       RETURN;                     /* RETURN TO S02SCAN     @G18MB19*/
         B     @EL00008                                            0294
*     END;                                                         0295
*   ELSE                            /*                       @G18MB19*/
*     DO;                           /*                       @G18MB19*/
*                                                                  0296
@RF00290 DS    0H                                                  0297
*       /*************************************************************/
*       /*                                                           */
*       /* ***********************************************   @ZD02028*/
*       /* ICG223I VALUE ERROR FOR OPSYS                     @ZD02028*/
*       /* ***********************************************   @ZD02028*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0297
*       OUTBUF2(1:25)=ICGDS223;     /*                       @ZD02028*/
         MVC   OUTBUF2(25,R4),ICGDS223                             0297
*       OUTBUF2(26:30)='OPSYS';     /*                       @ZD02028*/
         MVC   OUTBUF2+25(5,R4),@CC00421                           0298
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @ZD02028*/
         BAL   @14,PUTIT1                                          0299
*     END;                          /*                       @G18MB19*/
*   END S02OPSYS;                   /* RET. TO S02SCAN       @ZD02028*/
         B     @EL00008                                            0301
*                                                                  0302
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - UNKNOWN                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - IF THE KEYWORD IS NOT 'CPUID', 'MSFINT'       @Y30LB12*/
*/*            OR 'MPCPU', WRITE ERROR MESSAGE 'ICG210I      @Y30LB12*/
*/*            UNDEFINED KEYWORD FOUND', DO DUMMY            @Y30LB12*/
*/*            READ OF PARAMETER TO POSITION TO NEXT         @Y30LB12*/
*/*            KEYWORD, AND RETURN TO S02SCAN                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0302
*UNKNOWN:                                                          0302
*   PROCEDURE;                      /*                       @Y30LB12*/
UNKNOWN  STM   @14,@12,@SA00009                                    0302
*   MSGNO=ICG210I;                  /* ID FOR ICGDS210       @Y30LB12*/
         MVC   MSGNO(2,R4),ICG210I                                 0303
*   CALL PUTIT2;                    /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0304
*   CALL READS99;                   /* DO DUMMY READ         @Y30LB12*/
         BAL   @14,READS99                                         0305
*   END UNKNOWN;                    /* RET. TO S02SCAN       @Y30LB12*/
@EL00009 DS    0H                                                  0306
@EF00009 DS    0H                                                  0306
@ER00009 LM    @14,@12,@SA00009                                    0306
         BR    @14                                                 0306
*                                                                  0307
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S02ANAL                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CHECK FOR MISSING REQUIRED KEYWORD 'CPUID'    @Y30LB12*/
*/*            AND MISSING REQUIRED KEYWORD MSCINT           @Y30LB12*/
*/*            IF EITHER OR BOTH ARE MISSING, CALL PUTIT1    @YD00113*/
*/*            TO ISSUE INDICATED ERROR MESSAGE.             @YD00113*/
*/*            ALSO CHECK FOR BOTH 'MPCPU' AND 'ALTINT'      @YD00142*/
*/*            SPECIFIED AND ISSUE ERROR MESSAGE ICG213I     @YD00142*/
*/*            IF 'OPSYS' KEYWORD WAS NOT SUPPLIED,          @ZD02028*/
*/*            DEFAULT TO VS2.                               @ZD02028*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0307
*S02ANAL:                                                          0307
*   PROCEDURE;                      /*                       @Y30LB12*/
S02ANAL  STM   @14,@12,@SA00010                                    0307
*   IF HAVEID^='1'B                 /* IF FLAG NOT ON,       @Y30LB12*/
*     THEN                          /* NO KEYWORD CPUID      @Y30LB12*/
         TM    HAVEID,B'10000000'                                  0308
         BO    @RF00308                                            0308
*     DO;                           /* SPECIFIED             @Y30LB12*/
*                                                                  0309
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG221I MISSING REQUIRED KEYWORD CPUID            @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0310
*       OUTBUF2(1:34)=ICGDS221;     /*                       @Y30LB12*/
         MVC   OUTBUF2(34,R4),ICGDS221                             0310
*       OUTBUF2(35:39)='CPUID';     /*                       @Y30LB12*/
         MVC   OUTBUF2+34(5,R4),@CC00390                           0311
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0312
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0314
*     ;                             /* KEYWORD PRESENT       @Y30LB12*/
@RF00308 DS    0H                                                  0315
*   IF HAVEMSC^='1'B                /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    HAVEMSC,B'00100000'                                 0315
         BO    @RF00315                                            0315
*     DO;                           /*                       @Y30LB12*/
*                                                                  0316
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICGDS221 MISSING REQUIRED KEYWORD                 @Y30LB12*/
*       /* MSCINT                                            @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0317
*       OUTBUF2(1:34)=ICGDS221;     /*                       @Y30LB12*/
         MVC   OUTBUF2(34,R4),ICGDS221                             0317
*       OUTBUF2(35:40)='MSCINT';    /*                       @Y30LB12*/
         MVC   OUTBUF2+34(6,R4),@CC00399                           0318
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0319
*     END;                          /*                       @Y30LB12*/
*   ELSE                                                           0321
*     ;                             /*                       @Y30LB12*/
@RF00315 DS    0H                                                  0322
*   IF HAVEMP='1'B                  /*                       @YD00142*/
*       &HAVEALT='1'B               /*                       @YD00142*/
*     THEN                          /*                       @YD00142*/
         TM    HAVEMP,B'01100000'                                  0322
         BNO   @RF00322                                            0322
*     DO;                           /*                       @YD00142*/
*                                                                  0323
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00142*/
*       /* ICG213I CPUCONFG STATEMENT EXCLUSIVE              @YD00142*/
*       /* KEYWORDS SPECIFIED                                @YD00142*/
*       /* *****************************************         @YD00142*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0324
*       MSGNO=ICG213I;              /*                       @YD00142*/
         MVC   MSGNO(2,R4),ICG213I                                 0324
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @YD00142*/
         BAL   @14,PUTIT2                                          0325
*     END;                          /*                       @YD00142*/
*                                                                  0326
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @ZD02028*/
*   /* IF NO VALUE WAS SUPPLIED FOR PRIMARY                  @ZD02028*/
*   /* OPERATING SYSTEM, DEFAULT TO VS2                      @ZD02028*/
*   /* ***********************************************       @ZD02028*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0327
*   IF HAVOPSYS='0'B                /*                       @ZD02028*/
*     THEN                          /*                       @ZD02028*/
@RF00322 TM    HAVOPSYS,B'00000001'                                0327
         BNZ   @RF00327                                            0327
*     VS2SYS='1'B;                  /*                       @ZD02028*/
         OI    VS2SYS,B'00001000'                                  0328
*   ELSE                                                           0329
*     ;                             /*                       @ZD02028*/
*                                                                  0329
@RF00327 DS    0H                                                  0330
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @ZD02028*/
*   /* IF OPERATING SYSTEM SPECIFIED AS VS1 AND A MP         @ZD02028*/
*   /* CPU, FORCE THE OPERATING SYSTEM TO VS2.               @ZD02028*/
*   /* ***********************************************       @ZD02028*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0330
*   IF HAVEMP='1'B                  /*                       @ZD02028*/
*       &VS1SYS='1'B                /*                       @ZD02028*/
*     THEN                          /*                       @ZD02028*/
         TM    HAVEMP,B'01010000'                                  0330
         BNO   @RF00330                                            0330
*     DO;                           /*                       @ZD02028*/
*       VS1SYS='0'B;                /*                       @ZD02028*/
*       VS2SYS='1'B;                /*                       @ZD02028*/
         OI    VS2SYS,B'00001000'                                  0333
         NI    VS1SYS,B'11101111'                                  0333
*     END;                          /*                       @ZD02028*/
*   ELSE                                                           0335
*     ;                             /*                       @ZD02028*/
@RF00330 DS    0H                                                  0336
*   END S02ANAL;                    /* RET. TO MAINLINE      @Y30LB12*/
@EL00010 DS    0H                                                  0336
@EF00010 DS    0H                                                  0336
@ER00010 LM    @14,@12,@SA00010                                    0336
         BR    @14                                                 0336
*                                                                  0337
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - S02BUILD                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - DETERMINE WHETHER THE NUMBER OF ALLOWABLE     @Y30LB12*/
*/*            CPUS HAS BEEN EXCEEDED.  IF YES, WRITE ERROR  @Y30LB12*/
*/*            MESSAGE ICG224I AND RETURN TO MAINLINE.  IF   @Y30LB12*/
*/*            NO, CALL FINDCPU TO LOCATE PROPER ENTRY SLOT  @Y30LB12*/
*/*            FOR THIS CPU.                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0337
*S02BUILD:                                                         0337
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0337
S02BUILD STM   @14,@12,@SA00011                                    0337
*   /*****************************************************************/
*   /*                                                               */
*   /* *******************************************           @YD00113*/
*   /* TEST IF ALLOWABLE NUMBER OF CPUS HAS BEEN             @YD00113*/
*   /* EXCEEDED. IF YES, ISSUE ERROR MESSAGE.                @YD00113*/
*   /* *******************************************           @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0338
*   CPUNUM=CPUNUM+1;                /*                       @Y30LB12*/
         LA    @10,1                                               0338
         AH    @10,CPUNUM(,R4)                                     0338
         STH   @10,CPUNUM(,R4)                                     0338
*   IF CPUNUM>=(MAXCPU+2)           /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         LA    @05,2                                               0339
         AH    @05,MAXCPU                                          0339
         CR    @10,@05                                             0339
         BL    @RF00339                                            0339
*     DO;                           /*                       @Y30LB12*/
*                                                                  0340
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG224I MAXIMUM NUMBER OF SUPPORTED               @Y30LB12*/
*       /* CPUS EXCEEDED.                                    @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0341
*       MSGNO=ICG224I;              /* IDENT FOR ICG224I     @Y30LB12*/
         MVC   MSGNO(2,R4),ICG224I                                 0341
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0342
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /*                       @Y30LB12*/
*     CALL FINDCPU;                 /* FIND ENTRY SLOT       @Y30LB12*/
         B     @RC00339                                            0344
@RF00339 BAL   @14,FINDCPU                                         0344
*   END S02BUILD;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00011 DS    0H                                                  0345
@EF00011 DS    0H                                                  0345
@ER00011 LM    @14,@12,@SA00011                                    0345
         BR    @14                                                 0345
*                                                                  0346
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - FINDCPU                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL PREVREF TO FIND OUT WHETHER CPUID IS     @Y30LB12*/
*/*            ALREADY IN TABLE.  IF NOT FOUND IN TABLE BY   @Y30LB12*/
*/*            PREVREF, CALL NOTREF TO ASSIGN CPUID TO THE   @Y30LB12*/
*/*            NEXT AVAILABLE ENTRY IN THE TABLE.  CALL      @Y30LB12*/
*/*            HAVEHIT TO HANDLE OPTIONAL PARAMETERS, IF     @Y30LB12*/
*/*            PRESENT.                                      @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0346
*FINDCPU:                                                          0346
*   PROCEDURE;                      /*                       @Y30LB12*/
FINDCPU  STM   @14,@12,@SA00012                                    0346
*   CALL PREVREF;                   /* ALREADY IN TABLE      @Y30LB12*/
         BAL   @14,PREVREF                                         0347
*   IF STOPSCAN^='1'B               /* IF NO ERROR MSG &     @Y30LB12*/
*     THEN                          /* NOT ALREADY IN        @Y30LB12*/
         TM    STOPSCAN,B'00001000'                                0348
         BO    @RF00348                                            0348
*     IF HAVESLOT^='1'B             /* TABLE,                @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         TM    HAVESLOT,B'01000000'                                0349
         BO    @RF00349                                            0349
*       CALL NOTREF;                /* USE NEXT ENTRY        @Y30LB12*/
         BAL   @14,NOTREF                                          0350
*     ELSE                                                         0351
*       ;                           /*                       @Y30LB12*/
@RF00349 DS    0H                                                  0352
*   IF STOPSCAN^='1'B               /* IF NO ERROR MSG       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
@RF00348 TM    STOPSCAN,B'00001000'                                0352
         BO    @RF00352                                            0352
*     CALL HAVEHIT;                 /* HANDLE OPTIONALS      @Y30LB12*/
         BAL   @14,HAVEHIT                                         0353
*   ELSE                                                           0354
*     ;                             /*                       @Y30LB12*/
@RF00352 DS    0H                                                  0355
*   END FINDCPU;                    /* RET. TO S02BUILD      @Y30LB12*/
@EL00012 DS    0H                                                  0355
@EF00012 DS    0H                                                  0355
@ER00012 LM    @14,@12,@SA00012                                    0355
         BR    @14                                                 0355
*                                                                  0356
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PREVREF                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CHECK THE CPUID PASSED IN THIS CONTROL        @Y30LB12*/
*/*            STATEMENT TO SEE IF IT ALREADY APPEARS IN THE @Y30LB12*/
*/*            CPUASSOC TABLE.  IF THE BIT 'CPUSPEC' IS OFF, @Y30LB12*/
*/*            THE ENTRY IS IN THE TABLE BECAUSE IT          @Y30LB12*/
*/*            PREVIOUSLY WAS SPECIFIED AS THE RESPONSE TO   @Y30LB12*/
*/*            TO 'MPCPU='.  IF 'CPUSPEC' IS                 @Y30LB12*/
*/*            ON, THE CPU WAS PREVIOUSLY SPECIFIED AS       @Y30LB12*/
*/*            'CPUID='.  IF 'CPUSPEC' IS ON, WRITE ERROR    @Y30LB12*/
*/*            MESSAGE 'ICG225I CPUID PREVIOUSLY SPECIFIED'  @Y30LB12*/
*/*            AND TERMINATE FURTHER PROCESSING OF THIS      @Y30LB12*/
*/*            STATEMENT.                                    @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0356
*PREVREF:                                                          0356
*   PROCEDURE;                      /*                       @Y30LB12*/
PREVREF  STM   @14,@12,@SA00013                                    0356
*   DO I=1 TO CPUNUM;               /* NUMB NOW IN TABLE     @Y30LB12*/
         LA    I,1                                                 0357
         B     @DE00357                                            0357
@DL00357 DS    0H                                                  0358
*     IF CPUIDENT=CPUID(I)          /* IF MATCH              @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @10,I                                               0358
         SLA   @10,3                                               0358
         ST    @10,@TF00001                                        0358
         ALR   @10,R4                                              0358
         CLC   CPUIDENT(5),CPUID-8(@10)                            0358
         BNE   @RF00358                                            0358
*       IF CPUSPEC(I)^='1'B         /* NOT SPEC AS CPUID     @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         LR    @10,R4                                              0359
         AL    @10,@TF00001                                        0359
         TM    CPUSPEC-8(@10),B'10000000'                          0359
         BO    @RF00359                                            0359
*         DO;                       /*                       @Y30LB12*/
*           INDEX=I;                /* SAVE ENTRY PTR        @Y30LB12*/
*                                                                  0361
         STH   I,INDEX                                             0361
*           /*********************************************************/
*           /*                                                       */
*           /* ***********************************           @YD00142*/
*           /* FLAG1 TO CPUFLAG1 MOVES HAVEMP TO             @YD00142*/
*           /* CPUTIGHT, HAVEALT TO CPUALTFL, AND            @YD00142*/
*           /* MSCINT TO CPUMSCIN                            @YD00142*/
*           /* ***********************************           @YD00142*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0362
*           CPUFLAG1(I)=FLAG1;      /* MSCINT-MP             @Y30LB12*/
*                                                                  0362
         LR    @10,R4                                              0362
         AL    @10,@TF00001                                        0362
         MVC   CPUFLAG1-8(1,@10),FLAG1                             0362
*           /*********************************************************/
*           /*                                                       */
*           /* ***********************************           @YD00142*/
*           /* FLAG1 TO CPUFLAG1 MOVES HAVEID TO             @YD00142*/
*           /* CPUSPEC, HAVEBUF TO ALTMSGBF, AND             @YD00142*/
*           /* ALTINT TO ALTMSCIN                            @YD00142*/
*           /* ***********************************           @YD00142*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0363
*           CPUFLAG2(I)=FLAG2;      /* CPUSPEC, ETC.         @YD00142*/
         LR    @10,R4                                              0363
         AL    @10,@TF00001                                        0363
         MVC   CPUFLAG2-8(1,@10),FLAG2                             0363
*           CPUNUM=CPUNUM-1;        /* PTR NEXT ENTRY        @Y30LB12*/
         LH    @10,CPUNUM(,R4)                                     0364
         BCTR  @10,0                                               0364
         STH   @10,CPUNUM(,R4)                                     0364
*           HAVESLOT='1'B;          /* 'FOUND IT' FLAG       @Y30LB12*/
         OI    HAVESLOT,B'01000000'                                0365
*         END;                      /*                       @Y30LB12*/
*       ELSE                        /*                       @Y30LB12*/
*         DO;                       /*                       @Y30LB12*/
*                                                                  0367
         B     @RC00359                                            0367
@RF00359 DS    0H                                                  0368
*           /*********************************************************/
*           /*                                                       */
*           /* ***********************************           @Y30LB12*/
*           /* ICG225I CPUID XXXXXXXXXX                      @Y30LB12*/
*           /* PREVIOUSLY SPECIFIED                          @Y30LB12*/
*           /* ***********************************           @Y30LB12*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0368
*           OUTBUF2(1:46)=ICGDS225; /*                       @Y30LB12*/
         MVC   OUTBUF2(46,R4),ICGDS225                             0368
*           PACKED(1:5)=CPUIDENT;   /*                       @Y30LB12*/
         MVC   PACKED(5),CPUIDENT                                  0369
*           PACKED(6)='0F'X;        /*                       @Y30LB12*/
         MVI   PACKED+5,X'0F'                                      0370
*           GEN(UNPK  UNPACKED(11),PACKED(6));/*             @Y30LB12*/
         UNPK  UNPACKED(11),PACKED(6)
*           OUTBUF2(16:25)=UNPACKED(1:10);/*                 @Y30LB12*/
         MVC   OUTBUF2+15(10,R4),UNPACKED                          0372
*           CALL PUTIT1;            /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0373
*         END;                      /*                       @Y30LB12*/
*     ELSE                                                         0375
*       ;                           /*                       @Y30LB12*/
@RF00358 DS    0H                                                  0376
*   END;                            /* DID ALL ENTRIES       @Y30LB12*/
@RC00358 AH    I,@CH00042                                          0376
@DE00357 CH    I,CPUNUM(,R4)                                       0376
         BNH   @DL00357                                            0376
*   END PREVREF;                    /* RET. TO FINDCPU       @Y30LB12*/
@EL00013 DS    0H                                                  0377
@EF00013 DS    0H                                                  0377
@ER00013 LM    @14,@12,@SA00013                                    0377
         BR    @14                                                 0377
*                                                                  0378
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - NOTREF                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - IF THE 'CPUID' DOES NOT ALREADY APPEAR IN THE @Y30LB12*/
*/*            CPUASSOC TABLE, IT SHOULD BE PUT IN AS THE    @Y30LB12*/
*/*            NEXT ENTRY.  THE NEXT AVAILABLE ENTRY IS THE  @Y30LB12*/
*/*            'CPUNUM'TH' ENTRY.  IF CPUNUM IS GREATER THAN @Y30LB12*/
*/*            THE MAXIMUM SIZE ALLOWED, WRITE ERROR MESSAGE @Y30LB12*/
*/*            'ICG224I MAXIMUM NUMBER OF SUPPORTED CPUS     @Y30LB12*/
*/*            EXCEEDED', AND TERMINATE PROCESSING OF THIS   @Y30LB12*/
*/*            CONTROL STATEMENT.                            @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0378
*NOTREF:                                                           0378
*   PROCEDURE;                      /*                       @Y30LB12*/
NOTREF   STM   @14,@12,@SA00014                                    0378
*   IF CPUNUM>=MAXCPU+1             /* GREATER THAN MAX      @Y30LB12*/
*     THEN                          /* IF YES, WRITE MSG     @Y30LB12*/
         LA    @10,1                                               0379
         AH    @10,MAXCPU                                          0379
         CH    @10,CPUNUM(,R4)                                     0379
         BH    @RF00379                                            0379
*     DO;                           /*                       @Y30LB12*/
*                                                                  0380
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG224I MAXIMUM NUMBER OF SUPPORTED               @Y30LB12*/
*       /* CPUS EXCEEDED.                                    @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0381
*       MSGNO=ICG224I;              /* IDENT FOR ICG224I     @Y30LB12*/
         MVC   MSGNO(2,R4),ICG224I                                 0381
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0382
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
         B     @RC00379                                            0384
@RF00379 DS    0H                                                  0385
*       CPUID(CPUNUM)=CPUIDENT;     /* CPUID TO ENTRY        @Y30LB12*/
*                                                                  0385
         LH    @10,CPUNUM(,R4)                                     0385
         LR    @05,@10                                             0385
         SLA   @05,3                                               0385
         ST    @05,@TF00001                                        0385
         ALR   @05,R4                                              0385
         MVC   CPUID-8(5,@05),CPUIDENT                             0385
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00142*/
*       /* FLAG1 TO CPUFLAG1 MOVES HAVEMP TO                 @YD00142*/
*       /* CPUTIGHT, HAVEALT TO CPUALTFL, AND                @YD00142*/
*       /* MSCINT TO CPUMSCIN.                               @YD00142*/
*       /* *****************************************         @YD00142*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0386
*       CPUFLAG1(CPUNUM)=FLAG1;     /* MSCINT/MSCINT-MP      @Y30LB12*/
*                                                                  0386
         LR    @05,R4                                              0386
         AL    @05,@TF00001                                        0386
         MVC   CPUFLAG1-8(1,@05),FLAG1                             0386
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00142*/
*       /* FLAG2 TO CPUFLAG2 MOVES HAVEID TO                 @YD00142*/
*       /* CPUSPEC, HAVEBUF TO ALTMSGBF, AND                 @YD00142*/
*       /* ALTINT TO ALTMSCIN                                @YD00142*/
*       /* *****************************************         @YD00142*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0387
*       CPUFLAG2(CPUNUM)=FLAG2;     /* CPUSPEC, ETC.         @YD00142*/
         LR    @05,R4                                              0387
         AL    @05,@TF00001                                        0387
         MVC   CPUFLAG2-8(1,@05),FLAG2                             0387
*       INDEX=CPUNUM;               /* PTR TO ENTRY          @Y30LB12*/
         STH   @10,INDEX                                           0388
*     END;                          /*                       @Y30LB12*/
*   END NOTREF;                     /* RET. TO FINDCPU       @Y30LB12*/
@EL00014 DS    0H                                                  0390
@EF00014 DS    0H                                                  0390
@ER00014 LM    @14,@12,@SA00014                                    0390
         BR    @14                                                 0390
*                                                                  0391
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - HAVEHIT                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - DETERMINE IF THIS CPU IS ONE-HALF OF A MULTI- @YD00113*/
*/*            PROCESSOR CPU.  IF IT IS, CALL DOMPCPU PROC   @YD00113*/
*/*            TO FURTHER TEST CPU AND SET POINTER TO OTHER  @YD00113*/
*/*            MULTI-PROCESSOR CPU                           @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0391
*HAVEHIT:                                                          0391
*   PROCEDURE;                      /*                       @Y30LB12*/
HAVEHIT  STM   @14,@12,@SA00015                                    0391
*   IF MPIDENT^='     '             /* FOR 1/2 OF MP         @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLC   MPIDENT(5),@CC00366                                 0392
         BE    @RF00392                                            0392
*     DO;                           /*                       @Y30LB12*/
*       CALL DOMPCPU;               /* SET PTR TO OTHER      @Y30LB12*/
         BAL   @14,DOMPCPU                                         0394
*     END;                          /* MPCPU                 @Y30LB12*/
*   ELSE                                                           0396
*     ;                             /*                       @Y30LB12*/
@RF00392 DS    0H                                                  0397
*   END HAVEHIT;                    /* RET. TO FINDCPU       @Y30LB12*/
@EL00015 DS    0H                                                  0397
@EF00015 DS    0H                                                  0397
@ER00015 LM    @14,@12,@SA00015                                    0397
         BR    @14                                                 0397
*                                                                  0398
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - DOMPCPU                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - INDEX THROUGH THE ENTRIES IN THE CPUASSOC     @Y30LB12*/
*/*            TABLE TO SEE IF THE CPUID OF THE TOMPCPU      @Y30LB12*/
*/*            ALREADY APPEARS IN THE TABLE BECAUSE IT WAS   @Y30LB12*/
*/*            PREVIOUSLY REFERENCED.  IF THE ENTRY IS NOT   @Y30LB12*/
*/*            ALREADY IN THE TABLE, PICK UP THE NEXT        @Y30LB12*/
*/*            AVAILABLE ENTRY AND ASSIGN IT THE CPUID OF    @Y30LB12*/
*/*            THE TOMPCPU.  IF THE MAXIMUM NUMBER OF        @Y30LB12*/
*/*            OF SUPPORTED CPUS HAS BEEN EXCEEDED, WRITE    @Y30LB12*/
*/*            MESSAGE ICGDS224.                             @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0398
*DOMPCPU:                                                          0398
*   PROCEDURE;                      /*                       @Y30LB12*/
DOMPCPU  STM   @14,@12,@SA00016                                    0398
*   DO I=1 TO CPUNUM;               /* CURRENT NO. CPUS      @Y30LB12*/
*                                                                  0399
         LA    I,1                                                 0399
         B     @DE00399                                            0399
@DL00399 DS    0H                                                  0400
*     /***************************************************************/
*     /*                                                             */
*     /* *******************************************         @YD00113*/
*     /* TEST CPUID TO DETERMINE IF IT IS ALREADY            @YD00113*/
*     /* ENTERED IN THE TABLE. IF YES, SET TOMPCPU           @YD00113*/
*     /* FIELD IN CPUASSOC TABLE TO POINT TO THE LAST        @YD00113*/
*     /* CPU INDEX NUMBER                                    @YD00113*/
*     /* *******************************************         @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0400
*     IF CPUID(I)=MPIDENT           /* IF MATCH              @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         LR    @10,I                                               0400
         SLA   @10,3                                               0400
         ALR   @10,R4                                              0400
         CLC   CPUID-8(5,@10),MPIDENT                              0400
         BNE   @RF00400                                            0400
*       DO;                         /*                       @Y30LB12*/
*         TOMPCPU(INDEX)=I-1;       /* PTR TO OTHER CPU      @Y30LB12*/
         LH    @10,INDEX                                           0402
         SLA   @10,3                                               0402
         LR    @05,I                                               0402
         BCTR  @05,0                                               0402
         STC   @05,TOMPCPU-8(@10,R4)                               0402
*         RETURN;                   /* HAVE PTR, RETURN      @Y30LB12*/
@EL00016 DS    0H                                                  0403
@EF00016 DS    0H                                                  0403
@ER00016 LM    @14,@12,@SA00016                                    0403
         BR    @14                                                 0403
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0405
*       ;                           /*                       @Y30LB12*/
@RF00400 DS    0H                                                  0406
*   END;                            /* TO CURRENT CPUNUM     @Y30LB12*/
*                                                                  0406
         AH    I,@CH00042                                          0406
@DE00399 CH    I,CPUNUM(,R4)                                       0406
         BNH   @DL00399                                            0406
*   /*****************************************************************/
*   /*                                                               */
*   /* *******************************************           @YD00113*/
*   /* DETERMINE IF THE CURRENT NUMBER OF CPU'S              @YD00113*/
*   /* IS GREATER THAN THE MAXIMUM NUMBER OF CPU'S           @YD00113*/
*   /* SUPPORTED. IF NOT, STORE THE CPUID FIELD AND          @YD00113*/
*   /* SET 'TOMPCPU' FIELD TO POINT TO OTHER CPU             @YD00113*/
*   /* *******************************************           @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0407
*   IF CPUNUM>=MAXCPU               /* IS MAX EXCEEDED       @Y30LB12*/
*     THEN                          /* IF YES, WRITE MSG     @Y30LB12*/
         LH    @10,CPUNUM(,R4)                                     0407
         CH    @10,MAXCPU                                          0407
         BL    @RF00407                                            0407
*     DO;                           /*                       @Y30LB12*/
*                                                                  0408
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @Y30LB12*/
*       /* ICG224I MAXIMUM NUMBER OF SUPPORTED               @Y30LB12*/
*       /* CPUS EXCEEDED.                                    @Y30LB12*/
*       /* *****************************************         @Y30LB12*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0409
*       MSGNO=ICG224I;              /* IDENT FOR ICG224I     @Y30LB12*/
         MVC   MSGNO(2,R4),ICG224I                                 0409
*       CALL PUTIT2;                /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT2                                          0410
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /*                       @Y30LB12*/
*     DO;                           /*                       @Y30LB12*/
         B     @RC00407                                            0412
@RF00407 DS    0H                                                  0413
*       CPUNUM=CPUNUM+1;            /* PTR, NEXT ENTRY       @Y30LB12*/
         LA    @10,1                                               0413
         AH    @10,CPUNUM(,R4)                                     0413
         STH   @10,CPUNUM(,R4)                                     0413
*       CPUID(CPUNUM)=MPIDENT;      /* SET CPUID             @Y30LB12*/
         LR    @05,@10                                             0414
         SLA   @05,3                                               0414
         ALR   @05,R4                                              0414
         MVC   CPUID-8(5,@05),MPIDENT                              0414
*       TOMPCPU(INDEX)=CPUNUM-1;    /* PTR OTHER CPU         @Y30LB12*/
         LH    @05,INDEX                                           0415
         SLA   @05,3                                               0415
         BCTR  @10,0                                               0415
         STC   @10,TOMPCPU-8(@05,R4)                               0415
*     END;                          /*                       @Y30LB12*/
*   END DOMPCPU;                    /* RET. TO HAVEHIT       @Y30LB12*/
         B     @EL00016                                            0417
*                                                                  0418
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CPUCONV                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CONVERT MANUFACTURER'S IDENTIFICATION FROM    @Y30LB12*/
*/*            CHARACTER REPRESENTATION TO PACKED.  THEN     @YD00113*/
*/*            CALL CPUCHECK TO DETERMINE THAT ALL DATA IS   @YD00113*/
*/*            NUMERIC.  IF SCANNED DATA EXCEEDS LENGTH      @YD00113*/
*/*            LIMIT (10 BYTES), SET ERROR INDICATOR ON      @YD00113*/
*/*            AND RETURN TO CALLING PROCEDURE               @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0418
*CPUCONV:                                                          0418
*   PROCEDURE;                      /*                       @Y30LB12*/
CPUCONV  STM   @14,@12,@SA00017                                    0418
*   IF SCANLEN=10                   /* SET BY ICGDSS99       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         CLC   SCANLEN(2,R4),@CH00311                              0419
         BNE   @RF00419                                            0419
*     DO;                           /*                       @Y30LB12*/
*       UNPACKED(1:10)=SCANDATA(1:10);/*                     @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0421
         MVC   UNPACKED(10),SCANDATA(@10)                          0421
*       UNPACKED(11)='F0'X;         /*                       @Y30LB12*/
         MVI   UNPACKED+10,X'F0'                                   0422
*       GEN(PACK  PACKED(6),UNPACKED(11));/*                 @Y30LB12*/
         PACK  PACKED(6),UNPACKED(11)
*       CALL CPUCHECK;                                             0424
         BAL   @14,CPUCHECK                                        0424
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /* IF LENGTH WRONG,      @Y30LB12*/
*     ERROR='1'B;                   /* SET ERROR FLAG        @Y30LB12*/
         B     @RC00419                                            0426
@RF00419 OI    ERROR,B'00000100'                                   0426
*   END CPUCONV;                    /* RETURN TO CALLER      @Y30LB12*/
@EL00017 DS    0H                                                  0427
@EF00017 DS    0H                                                  0427
@ER00017 LM    @14,@12,@SA00017                                    0427
         BR    @14                                                 0427
*                                                                  0428
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CPUCHECK                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CHECK EACH CHARACTER OF CPUID FOR A NUMERIC   @Y30LB12*/
*/*            DIGIT IN THE RANGE 0-9.  IF FIELD IS ALL      @YD00113*/
*/*            NUMERIC, RETURN TO CPUCONV WITH FLAG 'HAVENUM'@YD00113*/
*/*            SET ON.  IF ANY NON-NUMERIC DATA IS FOUND,    @YD00113*/
*/*            ISSUE ERROR MESSAGE VIA PUTIT1 AND RETURN TO  @YD00113*/
*/*            CPUCONV                                       @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0428
*CPUCHECK:                                                         0428
*   PROCEDURE;                      /*                       @Y30LB12*/
CPUCHECK STM   @14,@12,@SA00018                                    0428
*   DO I=1 TO 10;                   /* INDEX TO SCANDATA     @Y30LB12*/
         LA    I,1                                                 0429
@DL00429 DS    0H                                                  0430
*     HAVENUM='0'B;                 /* FOUND NUMBER FLAG     @Y30LB12*/
         NI    HAVENUM,B'11111101'                                 0430
*     DO J=1 TO 10;                 /* INDEX TO NUMBERS      @Y30LB12*/
         LA    J,1                                                 0431
@DL00431 DS    0H                                                  0432
*       IF SCANDATA(I)=PATTERN(J)   /* IF MATCH              @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         L     @10,STARTCOL(,R4)                                   0432
         LR    @05,J                                               0432
         SLA   @05,2                                               0432
         AL    @10,@CF00493                                        0432
         SLR   @15,@15                                             0432
         IC    @15,SCANDATA(I,@10)                                 0432
         C     @15,PATTERN-4(@05)                                  0432
         BNE   @RF00432                                            0432
*         HAVENUM='1'B;             /* SET FOUND MATCH       @Y30LB12*/
         OI    HAVENUM,B'00000010'                                 0433
*       ELSE                                                       0434
*         ;                         /*                       @Y30LB12*/
@RF00432 DS    0H                                                  0435
*     END;                          /* ALL VALID NUMBERS     @Y30LB12*/
         AH    J,@CH00042                                          0435
         CH    J,@CH00311                                          0435
         BNH   @DL00431                                            0435
*     IF HAVENUM^='1'B              /* NO MATCH FOUND        @Y30LB12*/
*       THEN                        /*                       @Y30LB12*/
         TM    HAVENUM,B'00000010'                                 0436
         BO    @RF00436                                            0436
*       DO;                         /*                       @Y30LB12*/
*                                                                  0437
*         /***********************************************************/
*         /*                                                         */
*         /* *****************************************       @Y30LB12*/
*         /* ICG223I VALUE ERROR FOR XXXXXXXX                @Y30LB12*/
*         /* *****************************************       @Y30LB12*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0438
*         OUTBUF2(1:25)=ICGDS223;   /*                       @Y30LB12*/
         MVC   OUTBUF2(25,R4),ICGDS223                             0438
*         OUTBUF2(26:30)=PLUGIN;    /*                       @Y30LB12*/
         MVC   OUTBUF2+25(5,R4),PLUGIN                             0439
*         CALL PUTIT1;              /* TO MESSAGE WRITER     @Y30LB12*/
         BAL   @14,PUTIT1                                          0440
*         RETURN;                   /* STOP CHECKING         @Y30LB12*/
@EL00018 DS    0H                                                  0441
@EF00018 DS    0H                                                  0441
@ER00018 LM    @14,@12,@SA00018                                    0441
         BR    @14                                                 0441
*       END;                        /*                       @Y30LB12*/
*     ELSE                                                         0443
*       ;                           /*                       @Y30LB12*/
@RF00436 DS    0H                                                  0444
*   END;                            /* CHECKED ALL CHARS     @Y30LB12*/
         AH    I,@CH00042                                          0444
         CH    I,@CH00311                                          0444
         BNH   @DL00429                                            0444
*   END CPUCHECK;                   /* RETURN TO CPUCONV     @Y30LB12*/
         B     @EL00018                                            0445
*                                                                  0446
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - READS99                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL SCAN READ KEYWORD/PARAMETER SUBROUTINE   @Y30LB12*/
*/*            ICGDSS99.  PICK UP STARTING COLUMN FOR THIS   @Y30LB12*/
*/*            SCAN AND STARTING COLUMN FOR NEXT ENTRY INTO  @Y30LB12*/
*/*            ICGDSS99.  IF TERMINATING ERROR OCCURS IN     @Y30LB12*/
*/*            ICGDSS99, SET 'LASTPARM' TO TERMINATE IN THIS @Y30LB12*/
*/*            MODULE ON NEXT READ OF KEYWORD                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0446
*READS99:                                                          0446
*   PROCEDURE;                      /*                       @Y30LB12*/
READS99  STM   @14,@12,@SA00019                                    0446
*   GEN(LINK EP=ICGDSS99);          /* TO SCAN KEYWORD/PARAMETER     */
*                                                                  0447
         LINK EP=ICGDSS99
*   /*****************************************************************/
*   /*                                                               */
*   /* ************************************************@Y30LB12 IF   */
*   /* 'ENDSCAN' BIT IS ON, WE ENCOUNTERED SOME              @Y30LB12*/
*   /* DISASTEROUS CONDITION THAT TERMINATED THE SCAN        @Y30LB12*/
*   /* OF THIS CONTROL STATEMENT. THERE ERRORS ARE           @Y30LB12*/
*   /* ASSOCIATED WITH SCANNING INTO COLUMN 73 AND           @Y30LB12*/
*   /* WITH FINDING A FORMAT ERROR IN THE                    @Y30LB12*/
*   /* CONTINUATION STATEMENT. SHOULD SUCH A                 @Y30LB12*/
*   /* CONDITION OCCUR, WE TERMINATE SCAN OF THE             @Y30LB12*/
*   /* CONTROL STATEMENT UPON READ OF THE NEXT               @Y30LB12*/
*   /* KEYWORD.                                              @Y30LB12*/
*   /* ************************************************@Y30LB12      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0448
*   IF ENDSCAN='1'B                 /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         TM    ENDSCAN(R4),B'00010000'                             0448
         BNO   @RF00448                                            0448
*     LASTPARM='1'B;                /*                       @Y30LB12*/
         OI    LASTPARM(R4),B'00001000'                            0449
*   ELSE                                                           0450
*     ;                             /*                       @Y30LB12*/
@RF00448 DS    0H                                                  0451
*   END READS99;                    /*                       @Y30LB12*/
@EL00019 DS    0H                                                  0451
@EF00019 DS    0H                                                  0451
@ER00019 LM    @14,@12,@SA00019                                    0451
         BR    @14                                                 0451
*                                                                  0452
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0452
*PUTIT1:                                                           0452
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT1   STM   @14,@12,@SA00020                                    0452
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'00001000'                                0453
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0454
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @10,1                                               0455
         AH    @10,TERMINAT(,R4)                                   0455
         STH   @10,TERMINAT(,R4)                                   0455
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0457
*   END PUTIT1;                     /*                       @Y30LB12*/
@EL00020 DS    0H                                                  0458
@EF00020 DS    0H                                                  0458
@ER00020 LM    @14,@12,@SA00020                                    0458
         BR    @14                                                 0458
*                                                                  0459
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT2                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH MESSAGE     @Y30LB12*/
*/*            TEXT IS IN ICGDSMSG.  'MSGNO' INDICATES THE   @Y30LB12*/
*/*            OFFSET OF THE MESSAGE TEXT.                   @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0459
*PUTIT2:                                                           0459
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT2   STM   @14,@12,@SA00021                                    0459
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'00001000'                                0460
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @10,1                                               0461
         AH    @10,TERMINAT(,R4)                                   0461
         STH   @10,TERMINAT(,R4)                                   0461
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   END PUTIT2;                     /*                       @Y30LB12*/
@EL00021 DS    0H                                                  0463
@EF00021 DS    0H                                                  0463
@ER00021 LM    @14,@12,@SA00021                                    0463
         BR    @14                                                 0463
*                                                                  0464
*/********************************************************** @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*                   P A T C H   A R E A                    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @Y30LB12*/
*                                                                  0464
*   GENERATE;                                                      0464
*                                                         /*@Y30LB12*/
PATCHS02 DC    32C'PATCHS02'                              /*@Y30LB12*/
*   END ICGDSS02                    /*                       @Y30LB12*/
*                                                                  0465
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA1)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA3)                                       */
*                                                                  0465
*       ;                                                          0465
         B     @EL00001                                            0465
@DATA    DS    0H
@CH00042 DC    H'1'
@CH00048 DC    H'3'
@CH00068 DC    H'4'
@CH00311 DC    H'10'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00003 DS    15F
@SA00010 DS    15F
@SA00011 DS    15F
@SA00019 DS    15F
@SA00021 DS    15F
@SA00004 DS    15F
@SA00005 DS    15F
@SA00006 DS    15F
@SA00007 DS    15F
@SA00008 DS    15F
@SA00009 DS    15F
@SA00020 DS    15F
@SA00017 DS    15F
@SA00012 DS    15F
@SA00013 DS    15F
@SA00014 DS    15F
@SA00015 DS    15F
@SA00016 DS    15F
@SA00018 DS    15F
@TF00001 DS    F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSS02 CSECT
         DS    0F
@CF00493 DC    F'-1'
@DATD    DSECT
         DS    0D
INDEX    DS    H
CPUWORKA DS    CL15
         ORG   CPUWORKA
CPUIDENT DS    CL5
MPIDENT  DS    CL5
NUMBER   DS    FL2
HAVES    DS    CL1
         ORG   HAVES
@NM00020 DS    BL1
HAVESLOT EQU   HAVES+0
HAVEMSC  EQU   HAVES+0
KNOWN    EQU   HAVES+0
STOPSCAN EQU   HAVES+0
ERROR    EQU   HAVES+0
HAVENUM  EQU   HAVES+0
HAVOPSYS EQU   HAVES+0
         ORG   CPUWORKA+13
FLAG1    DS    CL1
         ORG   FLAG1
@NM00021 DS    BL1
HAVEMP   EQU   FLAG1+0
HAVEALT  EQU   FLAG1+0
OPSYS    EQU   FLAG1+0
         ORG   OPSYS
VS1SYS   EQU   OPSYS+0
VS2SYS   EQU   OPSYS+0
JES3     EQU   OPSYS+0
         ORG   FLAG1+0
MSCINT   EQU   FLAG1+0
         ORG   CPUWORKA+14
FLAG2    DS    CL1
         ORG   FLAG2
HAVEID   DS    BL1
@NM00022 EQU   FLAG2+0
HAVEBUF  EQU   FLAG2+0
@NM00023 EQU   FLAG2+0
ALTINT   EQU   FLAG2+0
         ORG   CPUWORKA+15
UNPACKED DS    CL11
PACKED   DS    CL6
PLUGIN   DS    CL5
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSS02 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
MAXCPU   DC    XL2'0004'
ICG209I  DC    H'209'
ICG210I  DC    H'210'
ICG211I  DC    H'211'
ICG213I  DC    H'213'
ICG224I  DC    H'224'
@CC00376 DC    C'MSCINT='
@CC00378 DC    C'ALTINT='
@CC00374 DC    C'CPUID='
@CC00380 DC    C'MPCPU='
@CC00382 DC    C'OPSYS='
@CC00399 EQU   @CC00376
@CC00413 EQU   @CC00378
@CC00366 DC    C'     '
@CC00390 EQU   @CC00374
@CC00417 EQU   @CC00380
@CC00421 EQU   @CC00382
@CC00424 DC    C'JES3'
@CC00422 DC    C'VS1'
@CC00423 DC    C'VS2'
ICGDS219 DC    CL27' ICG219I DUPLICATE KEYWORD '
ICGDS220 DC    CL46' ICG220I INVALID PARAMETER LENGTH, KEYWORD IS '
ICGDS221 DC    CL34' ICG221I MISSING REQUIRED KEYWORD '
ICGDS223 DC    CL25' ICS223I VALUE ERROR FOR '
ICGDS225 DC    CL46' ICG225I CPUID XXXXXXXXXX PREVIOUSLY SPECIFIED'
         DS    CL3
PATTERN  DC    XL3'0'
         DC    C'0'
         DC    XL3'0'
         DC    C'1'
         DC    XL3'0'
         DC    C'2'
         DC    XL3'0'
         DC    C'3'
         DC    XL3'0'
         DC    C'4'
         DC    XL3'0'
         DC    C'5'
         DC    XL3'0'
         DC    C'6'
         DC    XL3'0'
         DC    C'7'
         DC    XL3'0'
         DC    C'8'
         DC    XL3'0'
         DC    C'9'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
J        EQU   @03
I        EQU   @02
R4       EQU   @04
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
KEYBIT   EQU   READFLAG
PARMBIT  EQU   READFLAG
ENDSCAN  EQU   READFLAG
LASTPARM EQU   READFLAG
PCHBF    EQU   READER+99
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
SCANLEN  EQU   READER+204
PRINTER  EQU   COMTAB+464
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
MSGNO    EQU   MESSAGES+2
TERMINAT EQU   MESSAGES+6
SPECLMSG EQU   MESSAGES+18
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
COMPTR2  EQU   GENIO+16
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
CPUASSOC EQU   COMTAB+3026
CPUNUM   EQU   CPUASSOC
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUID    EQU   CPU
TOMPCPU  EQU   CPU+5
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
CPUSPEC  EQU   CPUFLAG2
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
SCANDATA EQU   0
SCANBUF  EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
CPUREFNO EQU   RSGUCB+6
RSGCPUID EQU   RSGUCB+1
@NM00019 EQU   RSGFLAGS
CISPEC   EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00018 EQU   @NM00017
PRNTONLY EQU   @NM00017
UPDCREAT EQU   @NM00017
NEWCREAT EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00013 EQU   CPUFLAG1
SPNRSGNO EQU   PHYSTYPE+1
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSICEB EQU   MERLICEB
PHYSMERL EQU   MERLICEB
PHYSDS2  EQU   DSPAIRS
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
TODS2    EQU   RSGTODS+1
TODS1    EQU   RSGTODS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
BUILDPTR EQU   GENIO+20
SAVE14   EQU   GENIO+12
EXLST    EQU   GENIO+8
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00006 EQU   MESSAGES+19
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00005 EQU   SPECLMSG
PRNTCARD EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
WARNING  EQU   MESSAGES+4
RETCODE  EQU   MESSAGES
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00003 EQU   READER+206
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
INBUF    EQU   READER+100
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00045 EQU   @EL00003
@RC00109 EQU   @EL00004
@RC00245 EQU   @EL00007
@RC00339 EQU   @EL00011
@RC00359 EQU   @RC00358
@RC00379 EQU   @EL00014
@RC00407 EQU   @EL00016
@RC00419 EQU   @EL00017
@ENDDATA EQU   *
         END   ICGDSS02,(C'PLS2348',0603,76340)
