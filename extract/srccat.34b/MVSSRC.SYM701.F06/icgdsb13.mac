         TITLE 'ICGDSB13 MSC TABLE CREATE, TRANSIENT VOLUME LIST       *
                        '
ICGDSB13 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSB13  76.337'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0017
*/********************************************************** @YD00113*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - ICGDSB13 (MAINLINE)                     @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - OBTAIN THE VIRTUAL CYLINDER, HEAD AND RECORD  @YD00113*/
*/*            ADDRESSES TO BE WRITTEN FROM THE              @YD00113*/
*/*            COMMON BUILD COMMUNICATIONS AREA (BUILDTAB).  @YD00113*/
*/*            DETERMINE WHETHER A CURRENT TRANSIENT VOLUME  @YD00113*/
*/*            LIST SHOULD EXIST AND CALL THE PROPER BUILD   @YD00113*/
*/*            ROUTINE.  RETURN TO CALLER (ICGDSBLD)         @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @YD00113*/
*                                                                  0017
*   STOPSCAN='0'B;                  /* INITIALIZE FLAG       @YD00113*/
*                                                                  0017
         NI    STOPSCAN,B'01111111'                                0017
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* STARTING VIRTUAL ADDRESS FOR OUTPUT                   @YD00113*/
*   /* TRANSIENT VOLUME LIST AND THE ADDRESSES               @YD00113*/
*   /* OF THE OUTPUT BUFFER AND THE SYSUT2 DCB               @YD00113*/
*   /* ARE ESTABLISHED BY ICGDSBLD                           @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0018
*   OUTCYL(1)=UT2VCYL;              /* STARTING CYLINDER     @YD00113*/
         L     @10,BUILDPTR(,R4)                                   0018
         LH    @05,@CH00452                                        0018
         ALR   @05,@10                                             0018
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0018
*   OUTHEAD(1)=UT2VHEAD;            /* STARTING HEAD         @YD00113*/
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0019
*   ORECORD(1)=UT2VREC;             /* STARTING RECORD       @YD00113*/
         MVC   ORECORD(1,@05),UT2VREC(@10)                         0020
*   B06DCBPT=ADDR(UT2DCB);          /*                       @Y30LB14*/
         LA    @05,UT2DCB(,@10)                                    0021
         ST    @05,B06DCBPT(,@10)                                  0021
*   B06BUFPT=ADDR(UT2BUFER);        /* WRITE BUFFER ADDR     @YD00113*/
*                                                                  0022
         LR    @05,@10                                             0022
         AL    @05,@CF00452                                        0022
         ST    @05,B06BUFPT(,@10)                                  0022
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* IF A COMPLETELY NEW LIBRARY IS TO BE BUILT            @Y30LB14*/
*   /* FROM SCRATCH, THEN 'EMPTYLIB' IS CALLED.              @Y30LB14*/
*   /* IF A LIBRARY IS BEING UPDATED THEN THE CON-           @Y30LB14*/
*   /* TENTS OF THE OLD LIBRARY IS COPIED INTO THE           @Y30LB14*/
*   /* NEW LIBRARY.                                          @Y30LB14*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0023
*   IF NEWCREAT='1'B                /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
         TM    NEWCREAT(R4),B'01000000'                            0023
         BNO   @RF00023                                            0023
*     CALL EMPTYLIB;                /* BUILD NEW & EMPTY     @YD00113*/
         BAL   @14,EMPTYLIB                                        0024
*   IF UPDCREAT='1'B                /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
@RF00023 TM    UPDCREAT(R4),B'00100000'                            0025
         BNO   @RF00025                                            0025
*     CALL COPYLIB;                 /* COPY CURRENT LIB      @YD00113*/
*                                                                  0026
         BAL   @14,COPYLIB                                         0026
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* RETURN TO THE BUILD MODULE - ICGDSBLD                 @Y30LB14*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0027
*   RETURN;                         /* RETURN TO BUILD       @Y30LB14*/
@EL00001 L     @13,4(,@13)                                         0027
@EF00001 L     @00,@SIZDATD                                        0027
         LR    @01,@11                                             0027
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0027
         BR    @14                                                 0027
*                                                                  0028
*/********************************************************** @YD00113*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - COPYLIB                                 @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - THIS ROUTINE COPIES THE CURRENT TRANSIENT     @YD00113*/
*/*            VOLUME LIST TO THE AREA FOR THE NEW TRANSIENT @YD00113*/
*/*            VOLUME LIST.  THE BLOCK PREFIX (CHR OF THE    @YD00113*/
*/*            BLOCK BEING WRITTEN) AND THE CHR OF THE NEXT  @YD00113*/
*/*            ARE RECREATED - ALL OTHER DATA IN THE CONTROL @YD00113*/
*/*            DATA AND TRANSIENT VOLUME ENTRY SECTIONS IS   @YD00113*/
*/*            COPIED FROM THE CURRENT LIST.                 @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @YD00113*/
*                                                                  0028
*COPYLIB:                                                          0028
*   PROCEDURE;                      /*                       @Y30LB14*/
*                                                                  0028
COPYLIB  STM   @14,@12,@SA00002                                    0028
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* OBTAIN THE ADDRESSES OF THE INPUT BUFFER AND          @YD00113*/
*   /* INPUT DCB FROM THE COMMON BUILD COMMUNICATIONS        @YD00113*/
*   /* AREA (BUILDTAB).                                      @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0029
*   B05DCBPT=ADDR(UT1DCB);          /*                       @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0029
         LA    @05,UT1DCB(,@10)                                    0029
         ST    @05,B05DCBPT(,@10)                                  0029
*   B05BUFPT=ADDR(UT1BUFER);        /* ADDRESS OF READ       @Y30LB14*/
*                                                                  0030
         LR    @05,@10                                             0030
         AL    @05,@CF00453                                        0030
         ST    @05,B05BUFPT(,@10)                                  0030
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* SET UP TO COPY 30 TRACKS                              @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0031
*   DO I=1 TO MAX;                  /*                       @Y30LB14*/
*                                                                  0031
         LA    I,1                                                 0031
@DL00031 DS    0H                                                  0032
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @YD00113*/
*     /* READ IN A COMPLETE TRACK FROM THE OLD               @Y30LB14*/
*     /* LIBRARY AND CHECK IF IT IS A TRANSIENT              @Y30LB14*/
*     /* VOLUME LIST TRACK.                                  @Y30LB14*/
*     /* *********************************************       @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0032
*     B05ADDR=INADDR;               /* SET READ ADDRESS      @YD00113*/
         L     @10,BUILDPTR(,R4)                                   0032
         MVC   B05ADDR(3,@10),INADDR(@10)                          0032
*     GEN(LINK EP=ICGDSB05);        /* READ IN A TRACK       @YD00113*/
         LINK EP=ICGDSB05
*     CALL IDCHECK;                 /* CHECK TRACK ID        @YD00113*/
         BAL   @14,IDCHECK                                         0034
*     IF STOPSCAN='1'B              /*                       @Y30LB14*/
*       THEN                        /*                       @Y30LB14*/
         TM    STOPSCAN,B'10000000'                                0035
         BO    @RT00035                                            0035
*       RETURN;                     /* RET. TO MAINLINE      @YD00113*/
*                                                                  0036
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @YD00113*/
*     /* USE POINTER IN CONTROL OF FIRST BLOCK READ          @Y30LB14*/
*     /* FOR ADDRESS OF NEXT TRACK                           @Y30LB14*/
*     /* *********************************************       @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0037
*     UT1VCYL=ICYL(1);              /* ADDR OF NEXT CYL      @YD00113*/
         L     @10,BUILDPTR(,R4)                                   0037
         LH    @05,@CH00453                                        0037
         ALR   @05,@10                                             0037
         MVC   UT1VCYL(1,@10),ICYL(@05)                            0037
*     UT1VHEAD=IHEAD(1);            /* ADDR OF NEXT TRACK    @YD00113*/
         MVC   UT1VHEAD(1,@10),IHEAD(@05)                          0038
*     UT1VREC=1;                    /*                       @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0039
         MVI   UT1VREC(@10),X'01'                                  0039
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @YD00113*/
*     /* COPY INFORMATION FROM INPUT BUFFER TO OUTPUT        @Y30LB14*/
*     /* BUFFER. (SOME OF THIS DATA WILL BE MODIFIED)        @YD00113*/
*     /* *********************************************       @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0040
*     DO J=1 TO MAXREC;             /* COPY 32 BLOCKS        @YD00113*/
         LA    J,1                                                 0040
@DL00040 DS    0H                                                  0041
*       OBLKPRFX(J)=INBLKPFX(J);    /* MOVE INPUT TRK        @Y30LB14*/
         LR    @10,J                                               0041
         MH    @10,@CH00454                                        0041
         L     @05,BUILDPTR(,R4)                                   0041
         LH    @15,@CH00452                                        0041
         ALR   @15,@05                                             0041
         ST    @10,@TF00001                                        0041
         ALR   @10,@15                                             0041
         AL    @10,@CF00461                                        0041
         LR    @14,J                                               0041
         MH    @14,@CH00455                                        0041
         AH    @05,@CH00453                                        0041
         ST    @14,@TF00002                                        0041
         ALR   @14,@05                                             0041
         AL    @14,@CF00461                                        0041
         MVC   OBLKPRFX-8(8,@10),INBLKPFX(@14)                     0041
*       OCONTROL(J)=INCONTRL(J);    /*                       @Y30LB14*/
         LR    @10,@15                                             0042
         AL    @10,@TF00001                                        0042
         AL    @10,@CF00462                                        0042
         LR    @01,@05                                             0042
         AL    @01,@TF00002                                        0042
         AL    @01,@CF00462                                        0042
         MVC   OCONTROL-16(8,@10),INCONTRL-8(@01)                  0042
*       OCARTBLK(J)=ICRTBLK(J);     /*                       @Y30LB14*/
         LR    @10,@15                                             0043
         AL    @10,@TF00001                                        0043
         AL    @10,@CF00463                                        0043
         LR    @01,@05                                             0043
         AL    @01,@TF00002                                        0043
         AL    @01,@CF00463                                        0043
         MVC   OCARTBLK-24(240,@10),ICRTBLK-16(@01)                0043
*       OFILLER(J)=IFILLER(J);      /*                       @Y30LB14*/
         AL    @15,@TF00001                                        0044
         AL    @15,@CF00464                                        0044
         AL    @05,@TF00002                                        0044
         AL    @05,@CF00464                                        0044
         MVC   OFILLER-264(8,@15),IFILLER-256(@05)                 0044
*     END;                          /*                       @Y30LB14*/
*                                                                  0045
         AH    J,@CH00042                                          0045
         CH    J,@CH00309                                          0045
         BNH   @DL00040                                            0045
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @YD00113*/
*     /* IN THE OUTPUT BUFFER MODIFY THE POINTER TO          @YD00113*/
*     /* NEXT TRACK IN THE TABLE IN THE FIRST RECORD.        @YD00113*/
*     /* CALCULATE THE POINTER TO THE NEXT TRACK FROM        @YD00113*/
*     /* THE ADDRESS OF THE CURRENT OUTPUT TRACK.            @YD00113*/
*     /* *********************************************       @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0046
*     ORECORD(1)=1;                 /* SET FOR RECORD 1      @YD00113*/
         L     @10,BUILDPTR(,R4)                                   0046
         LH    @05,@CH00452                                        0046
         ALR   @05,@10                                             0046
         MVI   ORECORD(@05),X'01'                                  0046
*     OHEAD(1)=UT2VHEAD+1;          /*                       @Y30LB14*/
         LA    @02,1                                               0047
         SLR   @15,@15                                             0047
         IC    @15,UT2VHEAD(,@10)                                  0047
         ALR   @15,@02                                             0047
         STC   @15,OHEAD(,@05)                                     0047
*     IF OHEAD(1)>18                /*                       @Y30LB14*/
*       THEN                        /*                       @Y30LB14*/
         CLI   OHEAD(@05),18                                       0048
         BNH   @RF00048                                            0048
*       DO;                         /*                       @Y30LB14*/
*         OHEAD(1)=0;               /*                       @Y30LB14*/
         MVI   OHEAD(@05),X'00'                                    0050
*         OCYL(1)=UT2VCYL+1;        /*                       @Y30LB14*/
         MVC   @ZT00003+3(1),UT2VCYL(@10)                          0051
         AL    @02,@ZT00003                                        0051
         STC   @02,OCYL(,@05)                                      0051
*       END;                        /*                       @Y30LB14*/
*     ELSE                          /*                       @Y30LB14*/
*       OCYL(1)=UT2VCYL;            /*                       @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0053
         B     @RC00048                                            0053
@RF00048 L     @10,BUILDPTR(,R4)                                   0053
         LR    @05,@10                                             0053
         AL    @05,@CF00452                                        0053
         MVC   OCYL(1,@05),UT2VCYL(@10)                            0053
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @YD00113*/
*     /* IF IT IS THE LAST TRACK IN THE LIBRARY, THEN        @Y30LB14*/
*     /* PUT OUT ZEROS IN THE POINTER TO THE NEXT            @Y30LB14*/
*     /* TRACK.                                              @Y30LB14*/
*     /* *********************************************       @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0054
*     IF I=MAX                      /* PUT OUT LAST TRACK    @Y30LB14*/
*       THEN                        /* IN THE TABLE          @Y30LB14*/
@RC00048 CH    I,@CH00111                                          0054
         BNE   @RF00054                                            0054
*       DO;                         /*                       @Y30LB14*/
*         OHEAD(1)=0;               /*                       @Y30LB14*/
         LH    @10,@CH00452                                        0056
         AL    @10,BUILDPTR(,R4)                                   0056
         MVI   OHEAD(@10),X'00'                                    0056
*         OCYL(1)=0;                /*                       @Y30LB14*/
         MVI   OCYL(@10),X'00'                                     0057
*         ORECORD(1)=0;             /*                       @Y30LB14*/
         MVI   ORECORD(@10),X'00'                                  0058
*       END;                        /*                       @Y30LB14*/
*                                                                  0059
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @YD00113*/
*     /* PUT THE CONTROL INFORMATION IN ALL 32 BLOCKS        @Y30LB14*/
*     /* OF THE TRACK                                        @Y30LB14*/
*     /* *********************************************       @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0060
*     DO J=2 TO MAXREC;             /* COPY FROM BLOCK 1     @YD00113*/
@RF00054 LA    J,2                                                 0060
@DL00060 DS    0H                                                  0061
*       OHEAD(J)=OHEAD(1);          /* UPDATE NEXT HEAD      @YD00113*/
         LR    @10,J                                               0061
         MH    @10,@CH00454                                        0061
         LH    @05,@CH00452                                        0061
         AL    @05,BUILDPTR(,R4)                                   0061
         SLR   @15,@15                                             0061
         IC    @15,OHEAD(,@05)                                     0061
         LA    @14,0(@10,@05)                                      0061
         AL    @14,@CF00465                                        0061
         STC   @15,OHEAD-22(,@14)                                  0061
*       OCYL(J)=OCYL(1);            /* UPDATE NEXT CYL       @YD00113*/
         SLR   @15,@15                                             0062
         IC    @15,OCYL(,@05)                                      0062
         LA    @14,0(@10,@05)                                      0062
         AL    @14,@CF00466                                        0062
         STC   @15,OCYL-21(,@14)                                   0062
*       ORECORD(J)=ORECORD(1);      /*                       @Y30LB14*/
         SLR   @15,@15                                             0063
         IC    @15,ORECORD(,@05)                                   0063
         AL    @05,@CF00467                                        0063
         STC   @15,ORECORD-23(@10,@05)                             0063
*     END;                          /*                       @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0064
         AH    J,@CH00042                                          0064
         CH    J,@CH00309                                          0064
         BNH   @DL00060                                            0064
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @YD00113*/
*     /* PUT IN THE TRACK AND CYLINDER ADDRESS IN THE        @Y30LB14*/
*     /* PREFIX OF THE BLOCK IN ALL 32 BLOCKS OF THE         @Y30LB14*/
*     /* TRACK.                                              @Y30LB14*/
*     /* *********************************************       @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0065
*     DO J=1 TO MAXREC;             /* FOR 32 BLOCKS         @YD00113*/
         LA    J,1                                                 0065
@DL00065 DS    0H                                                  0066
*       OUTREC(J)=J;                /* RECORDS 1-32          @YD00113*/
         LR    @10,J                                               0066
         MH    @10,@CH00454                                        0066
         L     @05,BUILDPTR(,R4)                                   0066
         LH    @15,@CH00452                                        0066
         ALR   @15,@05                                             0066
         LA    @01,0(@10,@15)                                      0066
         AL    @01,@CF00468                                        0066
         STC   J,OUTREC-11(,@01)                                   0066
*       OUTHEAD(J)=UT2VHEAD;        /* CURRENT TRACK         @YD00113*/
         SLR   @14,@14                                             0067
         IC    @14,UT2VHEAD(,@05)                                  0067
         LA    @01,0(@10,@15)                                      0067
         AL    @01,@CF00469                                        0067
         STC   @14,OUTHEAD-10(,@01)                                0067
*       OUTCYL(J)=UT2VCYL;          /* CURRENT CYLINDER      @YD00113*/
         SLR   @14,@14                                             0068
         IC    @14,UT2VCYL(,@05)                                   0068
         AL    @15,@CF00470                                        0068
         STC   @14,OUTCYL-9(@10,@15)                               0068
*     END;                          /*                       @Y30LB14*/
*                                                                  0069
         AH    J,@CH00042                                          0069
         CH    J,@CH00309                                          0069
         BNH   @DL00065                                            0069
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @YD00113*/
*     /* WRITE OUT THE TRACK AND UPDATE THE TRACK AND        @Y30LB14*/
*     /* CYLINDER TO THE NEXT AVAILABLE.                     @Y30LB14*/
*     /* *********************************************       @YD00113*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0070
*     CALL WRITE;                   /* WRITE OUT THE TRACK   @Y30LB14*/
         BAL   @14,WRITE                                           0070
*   END;                            /* WROTE 30 TRACKS       @YD00113*/
         AH    I,@CH00042                                          0071
         CH    I,@CH00111                                          0071
         BNH   @DL00031                                            0071
*   END COPYLIB;                    /* RET. TO MAINLINE      @YD00113*/
@EL00002 DS    0H                                                  0072
@EF00002 DS    0H                                                  0072
@ER00002 LM    @14,@12,@SA00002                                    0072
         BR    @14                                                 0072
*                                                                  0073
*/********************************************************** @YD00113*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - EMPTYLIB                                @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - THIS ROUTINE BUILDS A NEW TRANSIENT VOLUME    @YD00113*/
*/*            LIST.  ALL AREAS ARE INITIALIZED TO BINARY    @YD00113*/
*/*            ZEROS EXCEPT THE PREFIX AND CONTROL DATA      @YD00113*/
*/*            AREAS.                                        @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @YD00113*/
*                                                                  0073
*EMPTYLIB:                                                         0073
*   PROCEDURE;                      /*                       @Y30LB14*/
*                                                                  0073
EMPTYLIB STM   @14,@12,@SA00003                                    0073
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* FOR ALL TRACKS BUT THE LAST TRACK, CALL THE           @YD00113*/
*   /* FOLLOWING PROCEDURES.                                 @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0074
*   DO I=1 TO MAX-1;                /*                       @Y30LB14*/
         LA    I,1                                                 0074
@DL00074 DS    0H                                                  0075
*     CALL WRANYTRK;                /* WRITE BASIC INFO IN A TRACK 0075
*                                                            @Y30LB14*/
         BAL   @14,WRANYTRK                                        0075
*     CALL WRITETRK;                /* PUT PREFIX INFO IN THE TRACK
*                                                            @Y30LB14*/
         BAL   @14,WRITETRK                                        0076
*   END;                            /*                       @Y30LB14*/
*                                                                  0077
         AH    I,@CH00042                                          0077
         CH    I,@CH00314                                          0077
         BNH   @DL00074                                            0077
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* CALL THE FOLLOWING PROCEDURES TO BUILD THE            @YD00113*/
*   /* LAST TRANSIENT VOLUME TABLE TRACK                     @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0078
*   CALL WRANYTRK;                  /* WRITE BASIC INFO IN A TRACK 0078
*                                                            @Y30LB14*/
         BAL   @14,WRANYTRK                                        0078
*   CALL WRLASTTK;                  /* MODIFY TRACK INTO LAST TRACK
*                                                            @Y30LB14*/
         BAL   @14,WRLASTTK                                        0079
*   CALL WRITETRK;                  /* PUT PREFIX INFO IN THE TRACK
*                                                            @Y30LB14*/
         BAL   @14,WRITETRK                                        0080
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/
@EL00003 DS    0H                                                  0081
@EF00003 DS    0H                                                  0081
@ER00003 LM    @14,@12,@SA00003                                    0081
         BR    @14                                                 0081
*   END EMPTYLIB;                   /*                       @Y30LB14*/
*                                                                  0083
*/********************************************************** @YD00113*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - IDCHECK                                 @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - VERIFY THAT THE INPUT TRACK JUST READ         @YD00113*/
*/*            CONTAINS THE TABLE ID ('50'X) OF THE          @YD00113*/
*/*            TRANSIENT VOLUME LIST.                        @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @YD00113*/
*                                                                  0083
*IDCHECK:                                                          0083
*   PROCEDURE;                      /*                       @Y30LB14*/
IDCHECK  STM   @14,@12,@SA00004                                    0083
*   IF INTABLID(1)^='01010000'B     /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0084
         AL    @10,@CF00453                                        0084
         CLI   INTABLID(@10),B'01010000'                           0084
         BE    @RF00084                                            0084
*     DO;                           /*                       @Y30LB14*/
*       OUTBUF2(1:62)=ICGDS410;     /*                       @YD00113*/
         MVC   OUTBUF2(62,R4),ICGDS410                             0086
*       RETCODE=RETCODEC;           /* RETURN CODE OF 12     @YD00113*/
         MVC   RETCODE(2,R4),@CH00128                              0087
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @YD00113*/
         BAL   @14,PUTIT1                                          0088
*     END;                          /*                       @Y30LB14*/
*   END IDCHECK;                    /* RETURN TO COPYLIB     @YD00113*/
@EL00004 DS    0H                                                  0090
@EF00004 DS    0H                                                  0090
@ER00004 LM    @14,@12,@SA00004                                    0090
         BR    @14                                                 0090
*                                                                  0091
*/********************************************************** @YD00113*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - WRLASTTK                                @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - THIS ROUTINE MODIFIES THE NORMAL CONTROL BIT  @YD00113*/
*/*            SETTINGS TO INDICATE LAST TRACK OF TABLE      @YD00113*/
*/*            AND TO INDICATE LAST BLOCK OF LAST TRACK.     @YD00113*/
*/*            THIS ROUTINE ALSO SETS THE POINTER TO THE     @YD00113*/
*/*            NEXT TRACK (CHR) TO ZEROS.                    @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @YD00113*/
*                                                                  0091
*WRLASTTK:                                                         0091
*   PROCEDURE;                      /*                       @Y30LB14*/
*                                                                  0091
WRLASTTK STM   @14,@12,12(@13)                                     0091
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* PUT CONTROL BIT INFORMATION IN ALL 32 BLOCKS          @Y30LB14*/
*   /* OF THE LAST TRACK                                     @Y30LB14*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0092
*   DO I=1 TO MAXREC;               /* UPDATE 32 BLOCKS      @YD00113*/
         LA    I,1                                                 0092
@DL00092 DS    0H                                                  0093
*     OLTIT(I)='1'B;                /* LAST TRACK BIT        @YD00113*/
         LR    @10,I                                               0093
         MH    @10,@CH00454                                        0093
         LH    @05,@CH00452                                        0093
         AL    @05,BUILDPTR(,R4)                                   0093
         ST    @10,@TF00001                                        0093
         ALR   @10,@05                                             0093
         AL    @10,@CF00462                                        0093
         OI    OLTIT-16(@10),B'00010000'                           0093
*     OCYL(I)=0;                    /* NO NEXT CYLINDER      @YD00113*/
         SLR   @10,@10                                             0094
         L     @02,@TF00001                                        0094
         AL    @02,@CF00466                                        0094
         STC   @10,OCYL-21(@02,@05)                                0094
*     OHEAD(I)=0;                   /* NO NEXT TRACK         @YD00113*/
         L     @02,@TF00001                                        0095
         AL    @02,@CF00465                                        0095
         STC   @10,OHEAD-22(@02,@05)                               0095
*     ORECORD(I)=0;                 /* NO NEXT RECORD        @YD00113*/
         L     @02,@TF00001                                        0096
         AL    @05,@CF00467                                        0096
         STC   @10,ORECORD-23(@02,@05)                             0096
*   END;                            /*                       @Y30LB14*/
*                                                                  0097
         AH    I,@CH00042                                          0097
         CH    I,@CH00309                                          0097
         BNH   @DL00092                                            0097
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* SET LAST TABLE BLOCK IN VERY LAST RECORD              @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0098
*   OLTB(MAXREC)='1'B;              /*                       @YD00113*/
         L     @10,BUILDPTR(,R4)                                   0098
         AL    @10,@CF00472                                        0098
         OI    OLTB(@10),B'10000000'                               0098
*   END WRLASTTK;                   /* RET. TO EMPTYLIB      @YD00113
*                                                            @Y30LB14*/
@EL00005 DS    0H                                                  0099
@EF00005 DS    0H                                                  0099
@ER00005 LM    @14,@12,12(@13)                                     0099
         BR    @14                                                 0099
*                                                                  0100
*/********************************************************** @YD00113*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - WRANYTRK                                @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - THIS ROUTINE WRITE THE BASIC INFORMATION      @YD00113*/
*/*            NEEDED TO INITIALLY BUILD A TRACK IN THE      @YD00113*/
*/*            TRANSIENT VOLUME LIST.  IF THE TRACK BEING    @YD00113*/
*/*            IS THE LAST TRACK IN THE LIST, THE DATA WILL  @YD00113*/
*/*            BE MODIFIED IN THE PROCEDURE 'WRLASTTK'.      @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @YD00113*/
*                                                                  0100
*WRANYTRK:                                                         0100
*   PROCEDURE;                      /*                       @Y30LB14*/
*                                                                  0100
WRANYTRK STM   @14,@12,12(@13)                                     0100
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* BUILD THE CONTROL DATA PORTION IN THE FIRST           @YD00113*/
*   /* BLOCK OF THE TRACK TO BE WRITTEN.                     @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0101
*   OLTB(1)='0'B;                   /* NOT VERY LAST BLK     @YD00113*/
*   OLAB(1)='0'B;                   /* NOT LAST ACTIVE       @YD00113*/
*   OEOTB(1)='0'B;                  /* NOT LAST BLK/TRK      @YD00113*/
*   OLTIT(1)='0'B;                  /* NOT LAST TRACK        @YD00113*/
         LH    @10,@CH00452                                        0104
         AL    @10,BUILDPTR(,R4)                                   0104
         NI    OLTB(@10),B'00001111'                               0104
*   OCOMPLEN(1)='1100'B;            /* COMPARE LENGTH=12     @YD00113*/
         NI    OCOMPLEN(@10),B'11111100'                           0105
         OI    OCOMPLEN(@10),B'00001100'                           0105
*   OENTRYLN(1)=24;                 /* ENTRY LENGTH = 24     @YD00113*/
         MVI   OENTRYLN(@10),X'18'                                 0106
*   OMAXEPB(1)=10;                  /* ENTRIES/TRACK=10      @YD00113*/
         MVI   OMAXEPB(@10),X'0A'                                  0107
*   OUSECNT(1)=0;                   /* NO ENTRIES IN USE     @YD00113*/
         MVI   OUSECNT(@10),X'00'                                  0108
*   OVOLUME(1)=0;                   /* RESERVED, ZEROS       @YD00113*/
*                                                                  0109
         MVI   OVOLUME(@10),X'00'                                  0109
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* CALCULATE THE VIRTUAL CHR OF THE NEXT TRACK           @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0110
*   IF OUTHEAD(1)+1>18              /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
         LA    @05,1                                               0110
         SLR   @15,@15                                             0110
         IC    @15,OUTHEAD(,@10)                                   0110
         ALR   @15,@05                                             0110
         CH    @15,@CH00420                                        0110
         BNH   @RF00110                                            0110
*     DO;                           /*                       @Y30LB14*/
*       OHEAD(1)=0;                 /*                       @Y30LB14*/
         MVI   OHEAD(@10),X'00'                                    0112
*       OCYL(1)=OUTCYL(1)+1;        /*                       @Y30LB14*/
         MVC   @ZT00003+3(1),OUTCYL(@10)                           0113
         AL    @05,@ZT00003                                        0113
         STC   @05,OCYL(,@10)                                      0113
*     END;                          /*                       @Y30LB14*/
*   ELSE                            /*                       @Y30LB14*/
*     DO;                           /*                       @Y30LB14*/
         B     @RC00110                                            0115
@RF00110 DS    0H                                                  0116
*       OHEAD(1)=OUTHEAD(1)+1;      /*                       @Y30LB14*/
         LH    @10,@CH00452                                        0116
         AL    @10,BUILDPTR(,R4)                                   0116
         LA    @05,1                                               0116
         MVC   @ZT00003+3(1),OUTHEAD(@10)                          0116
         AL    @05,@ZT00003                                        0116
         STC   @05,OHEAD(,@10)                                     0116
*       OCYL(1)=OUTCYL(1);          /*                       @Y30LB14*/
         MVC   OCYL(1,@10),OUTCYL(@10)                             0117
*     END;                          /*                       @Y30LB14*/
*   ORECORD(1)=1;                   /*                       @Y30LB14*/
*                                                                  0119
@RC00110 LH    @10,@CH00452                                        0119
         AL    @10,BUILDPTR(,R4)                                   0119
         MVI   ORECORD(@10),X'01'                                  0119
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* SET AREA FOR TEN TRANSIENT VOLUME ENTRIES AND         @YD00113*/
*   /* RESERVED AREA TO BINARY ZEROS                         @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0120
*   OCARTBLK(1)=''B;                /* 10 TRANSVOL ENTRIES   @YD00113*/
         XC    OCARTBLK(240,@10),OCARTBLK(@10)                     0120
*   OFILLER(1)=''B;                 /* SET FILLER TO ZERO    @Y30LB14*/
*                                                                  0121
         XC    OFILLER(8,@10),OFILLER(@10)                         0121
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* COPY INFORMATION FROM FIRST BLOCK TO THE              @YD00113*/
*   /* REMAINING 31 BLOCKS ON THIS TRACK.                    @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0122
*   DO J=2 TO MAXREC;               /* PUT IN ALL 32 BLOCKS  @YM01061*/
         LA    J,2                                                 0122
@DL00122 DS    0H                                                  0123
*     OCONTROL(J)=OCONTROL(1);      /*                       @Y30LB14*/
         LR    @10,J                                               0123
         MH    @10,@CH00454                                        0123
         LH    @05,@CH00452                                        0123
         AL    @05,BUILDPTR(,R4)                                   0123
         ST    @10,@TF00001                                        0123
         ALR   @10,@05                                             0123
         AL    @10,@CF00462                                        0123
         MVC   @TS00001(8),OCONTROL(@05)                           0123
         MVC   OCONTROL-16(8,@10),@TS00001                         0123
*     OCARTBLK(J)=OCARTBLK(1);      /*                       @Y30LB14*/
         LR    @10,@05                                             0124
         AL    @10,@TF00001                                        0124
         AL    @10,@CF00463                                        0124
         MVC   @TS00001(240),OCARTBLK(@05)                         0124
         MVC   OCARTBLK-24(240,@10),@TS00001                       0124
*     OFILLER(J)=OFILLER(1);        /*                       @Y30LB14*/
         LR    @10,@05                                             0125
         AL    @10,@TF00001                                        0125
         AL    @10,@CF00464                                        0125
         MVC   @TS00001(8),OFILLER(@05)                            0125
         MVC   OFILLER-264(8,@10),@TS00001                         0125
*   END;                            /*                       @Y30LB14*/
*                                                                  0126
         AH    J,@CH00042                                          0126
         CH    J,@CH00309                                          0126
         BNH   @DL00122                                            0126
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* SET END OF TRACK BLOCK                                @Y30LB14*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0127
*   OEOTB(MAXREC)='1'B;             /*                       @YM01061*/
         L     @10,BUILDPTR(,R4)                                   0127
         AL    @10,@CF00472                                        0127
         OI    OEOTB(@10),B'00100000'                              0127
*   END WRANYTRK;                   /* RET. TO EMPTYLIB      @YD00113*/
@EL00006 DS    0H                                                  0128
@EF00006 DS    0H                                                  0128
@ER00006 LM    @14,@12,12(@13)                                     0128
         BR    @14                                                 0128
*                                                                  0129
*/********************************************************** @YD00113*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - WRITETRK                                @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - BUILD THE VIRTUAL CHR OF EACH RECORD IN THE   @YD00113*/
*/*            PREFIX AREA AND CALL THE PROCEDURE 'WRITE'    @YD00113*/
*/*            TO WRITE THE 32 RECORDS ON THE TRACK          @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @YD00113*/
*                                                                  0129
*WRITETRK:                                                         0129
*   PROCEDURE;                      /*                       @Y30LB14*/
WRITETRK STM   @14,@12,@SA00007                                    0129
*   DO J=1 TO MAXREC;               /*                       @YD00113*/
         LA    J,1                                                 0130
@DL00130 DS    0H                                                  0131
*     OUTREC(J)=J;                  /* SET THE PREFIX RECORD NUM   0131
*                                                            @Y30LB14*/
         LR    @10,J                                               0131
         MH    @10,@CH00454                                        0131
         LH    @05,@CH00452                                        0131
         AL    @05,BUILDPTR(,R4)                                   0131
         LA    @03,0(@10,@05)                                      0131
         AL    @03,@CF00468                                        0131
         STC   J,OUTREC-11(,@03)                                   0131
*     OUTHEAD(J)=OUTHEAD(1);        /* SET THE HEAD NUMBER   @Y30LB14*/
         SLR   @03,@03                                             0132
         IC    @03,OUTHEAD(,@05)                                   0132
         LA    @01,0(@10,@05)                                      0132
         AL    @01,@CF00469                                        0132
         STC   @03,OUTHEAD-10(,@01)                                0132
*     OUTCYL(J)=OUTCYL(1);          /* SET THE CYL NUMBER    @Y30LB14*/
         SLR   @03,@03                                             0133
         IC    @03,OUTCYL(,@05)                                    0133
         LA    @01,0(@10,@05)                                      0133
         AL    @01,@CF00470                                        0133
         STC   @03,OUTCYL-9(,@01)                                  0133
*     OUTFLR(J)=''B;                /* SET FILLER TO ZERO    @Y30LB14*/
         ST    @10,@TF00001                                        0134
         ALR   @10,@05                                             0134
         AL    @10,@CF00477                                        0134
         XC    OUTFLR-12(4,@10),OUTFLR-12(@10)                     0134
*     OUTABLID(J)='01010000'B;      /* SET TABLE ID          @Y30LB14*/
         AL    @05,@TF00001                                        0135
         AL    @05,@CF00461                                        0135
         MVI   OUTABLID-8(@05),B'01010000'                         0135
*   END;                            /*                       @Y30LB14*/
         AH    J,@CH00042                                          0136
         CH    J,@CH00309                                          0136
         BNH   @DL00130                                            0136
*   CALL WRITE;                     /* WRITE OUT THE TRACK   @Y30LB14*/
         BAL   @14,WRITE                                           0137
*   END WRITETRK;                   /* RETURN TO CALLER      @YD00113*/
@EL00007 DS    0H                                                  0138
@EF00007 DS    0H                                                  0138
@ER00007 LM    @14,@12,@SA00007                                    0138
         BR    @14                                                 0138
*                                                                  0139
*/********************************************************** @YD00113*/
*/*                                                          @YD00113*/
*/* PROCEDURE NAME - WRITE                                   @YD00113*/
*/*                                                          @YD00113*/
*/* FUNCTION - WRITE THE CURRENT TRACK AND UPDATE THE        @YD00113*/
*/*            CYLINDER AND HEAD INFORMATION TO POINT AT     @YD00113*/
*/*            NEXT TRACK.                                   @YD00113*/
*/*                                                          @YD00113*/
*/********************************************************** @YD00113*/
*                                                                  0139
*WRITE:                                                            0139
*   PROCEDURE;                      /*                       @Y30LB14*/
WRITE    STM   @14,@12,@SA00008                                    0139
*   B06ADDR=OUTADDR;                /* SET OUTPUT ADDRESS BOR B06  0140
*                                                            @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0140
         MVC   B06ADDR(3,@10),OUTADDR(@10)                         0140
*   GEN(LINK EP=ICGDSB06);          /* WRITE OUT TRACK       @Y30LB14*/
         LINK EP=ICGDSB06
*   UT2VHEAD=UT2VHEAD+1;            /* INCR TO NEXT TRACK    @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0142
         LA    @05,1                                               0142
         SLR   @15,@15                                             0142
         IC    @15,UT2VHEAD(,@10)                                  0142
         ALR   @15,@05                                             0142
         STC   @15,UT2VHEAD(,@10)                                  0142
*   IF UT2VHEAD>18                  /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
         CLI   UT2VHEAD(@10),18                                    0143
         BNH   @RF00143                                            0143
*     DO;                           /*                       @Y30LB14*/
*       UT2VHEAD=0;                 /* SET TRACK TO ZERO     @Y30LB14*/
         MVI   UT2VHEAD(@10),X'00'                                 0145
*       UT2VCYL=UT2VCYL+1;          /* INCR TO NEXT CYL      @Y30LB14*/
         MVC   @ZT00003+3(1),UT2VCYL(@10)                          0146
         AL    @05,@ZT00003                                        0146
         STC   @05,UT2VCYL(,@10)                                   0146
*     END;                          /*                       @Y30LB14*/
*   OUTCYL(1)=UT2VCYL;              /* SET FOR NEXT AVAIL CYL      0148
*                                                            @Y30LB14*/
@RF00143 L     @10,BUILDPTR(,R4)                                   0148
         LH    @05,@CH00452                                        0148
         ALR   @05,@10                                             0148
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0148
*   OUTHEAD(1)=UT2VHEAD;            /* SET FOR NEXT AVAIL HEAD     0149
*                                                            @Y30LB14*/
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0149
*   END WRITE;                      /* RETURN TO CALLER      @YD00113*/
@EL00008 DS    0H                                                  0150
@EF00008 DS    0H                                                  0150
@ER00008 LM    @14,@12,@SA00008                                    0150
         BR    @14                                                 0150
*                                                                  0151
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0151
*PUTIT1:                                                           0151
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT1   STM   @14,@12,@SA00009                                    0151
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'10000000'                                0152
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0153
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @10,1                                               0154
         AH    @10,TERMINAT(,R4)                                   0154
         STH   @10,TERMINAT(,R4)                                   0154
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0156
*   END PUTIT1;                     /*                       @Y30LB12*/
@EL00009 DS    0H                                                  0157
@EF00009 DS    0H                                                  0157
@ER00009 LM    @14,@12,@SA00009                                    0157
         BR    @14                                                 0157
*                                                                  0158
*/********************************************************** @YD00113*/
*/*                P A T C H   A R E A                       @YD00113*/
*/********************************************************** @YD00113*/
*                                                                  0158
*   GENERATE;                                                      0158
*                                                         /*@YD00113*/
PATCHB13 DC    32C'PATCHB13'                              /*@YD00113*/
*   END ICGDSB13                    /*                       @Y30LB14*/
*                                                                  0159
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA5)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */
*                                                                  0159
*       ;                                                          0159
         B     @EL00001                                            0159
@DATA    DS    0H
@CH00042 DC    H'1'
@CH00128 DC    H'12'
@CH00420 DC    H'18'
@CH00314 DC    H'29'
@CH00111 DC    H'30'
@CH00309 DC    H'32'
@CH00455 DC    H'264'
@CH00454 DC    H'272'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00003 DS    15F
@SA00002 DS    15F
@SA00004 DS    15F
@SA00008 DS    15F
@SA00007 DS    15F
@SA00009 DS    15F
@TF00001 DS    F
@TF00002 DS    F
@ZTEMPS  DS    0F
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSB13 CSECT
         DS    0F
@CF00453 DC    F'5084'
@CH00453 EQU   @CF00453+2
@CF00452 DC    F'13532'
@CH00452 EQU   @CF00452+2
@CF00472 DC    F'21964'
@CF00461 DC    F'-264'
@CF00470 DC    F'-263'
@CF00469 DC    F'-262'
@CF00468 DC    F'-261'
@CF00477 DC    F'-260'
@CF00462 DC    F'-256'
@CF00466 DC    F'-251'
@CF00465 DC    F'-250'
@CF00467 DC    F'-249'
@CF00463 DC    F'-248'
@CF00464 DC    F'-8'
@DATD    DSECT
         DS    0D
@TS00001 DS    CL240
STOPSCAN DS    BL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSB13 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ICGDS410 DC    CL62' ICG410I NON-MATCH ON INPUT TABLE ID FOR TRANSIENT C
               VOLUME LIST'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
J        EQU   @02
I        EQU   @03
R4       EQU   @04
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
PCHBF    EQU   READER+99
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
PRINTER  EQU   COMTAB+464
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
RETCODE  EQU   MESSAGES
TERMINAT EQU   MESSAGES+6
SPECLMSG EQU   MESSAGES+18
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
COMPTR2  EQU   GENIO+16
BUILDPTR EQU   GENIO+20
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
CPUASSOC EQU   COMTAB+3026
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
NEWCREAT EQU   @NM00017
UPDCREAT EQU   @NM00017
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
BUILDTAB EQU   0
COMB06   EQU   BUILDTAB
B06DCBPT EQU   COMB06
B06BUFPT EQU   COMB06+4
B06ADDR  EQU   COMB06+9
COMB05   EQU   BUILDTAB+12
B05DCBPT EQU   COMB05
B05BUFPT EQU   COMB05+4
B05ADDR  EQU   COMB05+9
BUILDGEN EQU   BUILDTAB+24
UT2VCHR  EQU   BUILDGEN+8
OUTADDR  EQU   UT2VCHR+1
UT2VCYL  EQU   OUTADDR
UT2VHEAD EQU   OUTADDR+1
UT2VREC  EQU   OUTADDR+2
UT1VCHR  EQU   BUILDGEN+12
INADDR   EQU   UT1VCHR+1
UT1VCYL  EQU   INADDR
UT1VHEAD EQU   INADDR+1
UT1VREC  EQU   INADDR+2
UT1STUFF EQU   BUILDTAB+40
UT1DCB   EQU   UT1STUFF
UT1FLAG  EQU   UT1STUFF+96
UT2STUFF EQU   BUILDTAB+664
UT2DCB   EQU   UT2STUFF
UT2FLAG  EQU   UT2STUFF+96
UT3STUFF EQU   BUILDTAB+1288
UT3FLAG  EQU   UT3STUFF+96
UT1BUFER EQU   BUILDTAB+5084
UT2BUFER EQU   BUILDTAB+13532
INBUFFER EQU   0
INBLOCK  EQU   INBUFFER
INBLKPFX EQU   INBLOCK
INTABLID EQU   INBLKPFX
INCONTRL EQU   INBLOCK+8
ICYL     EQU   INCONTRL+5
IHEAD    EQU   INCONTRL+6
ICRTBLK  EQU   INBLOCK+16
IFILLER  EQU   INBLOCK+256
OUTBUFFR EQU   0
OUTBLOCK EQU   OUTBUFFR
OBLKPRFX EQU   OUTBLOCK+8
OUTABLID EQU   OBLKPRFX
OUTCYL   EQU   OBLKPRFX+1
OUTHEAD  EQU   OBLKPRFX+2
OUTREC   EQU   OBLKPRFX+3
OUTFLR   EQU   OBLKPRFX+4
OCONTROL EQU   OUTBLOCK+16
OLTB     EQU   OCONTROL
OLAB     EQU   OCONTROL
OEOTB    EQU   OCONTROL
OLTIT    EQU   OCONTROL
OCOMPLEN EQU   OCONTROL
OENTRYLN EQU   OCONTROL+1
OMAXEPB  EQU   OCONTROL+2
OUSECNT  EQU   OCONTROL+3
OVOLUME  EQU   OCONTROL+4
OCYL     EQU   OCONTROL+5
OHEAD    EQU   OCONTROL+6
ORECORD  EQU   OCONTROL+7
OCARTBLK EQU   OUTBLOCK+24
OFILLER  EQU   OUTBLOCK+264
SCANBUF  EQU   0
SCANDATA EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00026 EQU   OUTBLOCK
IRECORD  EQU   INCONTRL+7
@NM00025 EQU   INCONTRL
@NM00024 EQU   INBLKPFX+1
TEMPEND  EQU   BUILDTAB+22396
LTRTRANI EQU   BUILDTAB+22316
LTRTRANO EQU   BUILDTAB+22236
NVERIFY  EQU   BUILDTAB+3500
CVERIFY  EQU   BUILDTAB+1916
@NM00023 EQU   UT3STUFF+624
UT3DDN   EQU   UT3STUFF+616
UT3CCWS  EQU   UT3STUFF+320
UT3IOB   EQU   UT3STUFF+280
UT3ECB   EQU   UT3STUFF+276
UT3JFCB  EQU   UT3STUFF+100
@NM00022 EQU   UT3FLAG
UT3VWERR EQU   UT3FLAG
UT3VOERR EQU   UT3FLAG
UT3VUPDT EQU   UT3FLAG
UT3DCB   EQU   UT3STUFF
UT2DDN   EQU   UT2STUFF+616
UT2CCWS  EQU   UT2STUFF+320
UT2IOB   EQU   UT2STUFF+280
UT2ECB   EQU   UT2STUFF+276
UT2JFCB  EQU   UT2STUFF+100
@NM00021 EQU   UT2FLAG
UT2VCERR EQU   UT2FLAG
UT2VWERR EQU   UT2FLAG
UT2VOERR EQU   UT2FLAG
UT2VUPDT EQU   UT2FLAG
UT1DDN   EQU   UT1STUFF+616
UT1CCWS  EQU   UT1STUFF+320
UT1IOB   EQU   UT1STUFF+280
UT1ECB   EQU   UT1STUFF+276
UT1JFCB  EQU   UT1STUFF+100
@NM00020 EQU   UT1FLAG
UT1VWERR EQU   UT1FLAG
UT1VOERR EQU   UT1FLAG
UT1VUPDT EQU   UT1FLAG
UT1TABID EQU   UT1VCHR
UT2TABID EQU   UT2VCHR
ADDRBUF2 EQU   BUILDGEN+4
ADDRBUF1 EQU   BUILDGEN
B05REC   EQU   B05ADDR+2
B05HEAD  EQU   B05ADDR+1
B05CYL   EQU   B05ADDR
B05TBLID EQU   COMB05+8
B06REC   EQU   B06ADDR+2
B06HEAD  EQU   B06ADDR+1
B06CYL   EQU   B06ADDR
B06TBLID EQU   COMB06+8
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
CPUREFNO EQU   RSGUCB+6
RSGCPUID EQU   RSGUCB+1
@NM00019 EQU   RSGFLAGS
CISPEC   EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00018 EQU   @NM00017
PRNTONLY EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
CPUSPEC  EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00013 EQU   CPUFLAG1
TOMPCPU  EQU   CPU+5
CPUID    EQU   CPU
CPUNUM   EQU   CPUASSOC
SPNRSGNO EQU   PHYSTYPE+1
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSICEB EQU   MERLICEB
PHYSMERL EQU   MERLICEB
PHYSDS2  EQU   DSPAIRS
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
TODS2    EQU   RSGTODS+1
TODS1    EQU   RSGTODS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
SAVE14   EQU   GENIO+12
EXLST    EQU   GENIO+8
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00006 EQU   MESSAGES+19
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00005 EQU   SPECLMSG
PRNTCARD EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
WARNING  EQU   MESSAGES+4
MSGNO    EQU   MESSAGES+2
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00003 EQU   READER+206
SCANLEN  EQU   READER+204
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
INBUF    EQU   READER+100
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
LASTPARM EQU   READFLAG
ENDSCAN  EQU   READFLAG
PARMBIT  EQU   READFLAG
KEYBIT   EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00025 EQU   @EL00001
@RT00035 EQU   @EL00002
@RF00084 EQU   @EL00004
@ENDDATA EQU   *
         END   ICGDSB13,(C'PLS1636',0603,76337)
