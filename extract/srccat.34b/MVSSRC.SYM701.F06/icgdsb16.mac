         TITLE 'ICGDSB16 MSC TABLE CREATE, TRACE TABLE                 *
                        '
ICGDSB16 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSB16  76.337'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0012
*/********************************************************** @XD00153*/
*/*                                                          @XD00153*/
*/*      ICGDSB16 (MAINLINE)                                 @XD00153*/
*/*                                                          @XD00153*/
*/*      ESTABLISH DATA ADDRESS (CCHHR) FOR DASD, ADDRESS OF @XD00153*/
*/*      OUTPUT DCB, AND ADDRESS OF THE OUTPUT BUFFER.       @XD00153*/
*/*      INITIALIZE BLOCKS TO ZERO.  ROUTE CONTROL TO        @XD00153*/
*/*      'WRITETRK' ROUTINE TO PUT HEAD & CYLINDER NUMBERS   @XD00153*/
*/*      IN BLOCKS.  UPON RETURN, EXIT TO ICGDSBLD.          @XD00153*/
*/*                                                          @XD00153*/
*/********************************************************** @XD00153*/
*                                                                  0012
*   OUTCYL(1)=UT2VCYL;              /* STARTING CYLINDER NUMBER    0012
*                                                            @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0012
         LH    @05,@CH00388                                        0012
         ALR   @05,@10                                             0012
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0012
*   OUTHEAD(1)=UT2VHEAD;            /* STARTING HEAD NUMBER  @Y30LB14*/
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0013
*   B06DCBPT=ADDR(UT2DCB);          /*                       @Y30LB14*/
         LA    @05,UT2DCB(,@10)                                    0014
         ST    @05,B06DCBPT(,@10)                                  0014
*   B06BUFPT=ADDR(UT2BUFER);        /* ADDRESS OF WRITE      @Y30LB14
*                                      BUFFER                @Y30LB14*/
         LR    @05,@10                                             0015
         AL    @05,@CF00388                                        0015
         ST    @05,B06BUFPT(,@10)                                  0015
*   MAX=152;                        /* SET FOR 152 TRACKS    @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0016
         LA    MAX,152                                             0016
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /* INITIALIZE THE TRACK IMAGE . ZERO OUT THE DATA        @Y30LB14*/
*   /* AREA AND ALSO THE FILLER AND TABLE ID IN THE          @Y30LB14*/
*   /* PREFIX. SET THE RECORD NUMBER 1 - 32 IN THE           @Y30LB14*/
*   /* PREFIX.                                               @Y30LB14*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0017
*   DO J=1 TO 32;                   /*                       @Y30LB14*/
         LA    J,1                                                 0017
@DL00017 DS    0H                                                  0018
*     OUTREC(J)=J;                  /* SET THE PREFIX RECORD NUM   0018
*                                                            @Y30LB14*/
         LR    @10,J                                               0018
         MH    @10,@CH00389                                        0018
         LH    @05,@CH00388                                        0018
         AL    @05,BUILDPTR(,R4)                                   0018
         LA    @01,0(@10,@05)                                      0018
         AL    @01,@CF00391                                        0018
         STC   J,OUTREC-11(,@01)                                   0018
*     OUTFLR(J)=''B;                /* SET FILLER TO ZERO    @Y30LB14*/
         ST    @10,@TF00001                                        0019
         ALR   @10,@05                                             0019
         AL    @10,@CF00392                                        0019
         XC    OUTFLR-12(4,@10),OUTFLR-12(@10)                     0019
*     OUTABLID(J)=''B;              /* SET TABLE ID TO 0     @Y30LB14*/
         LR    @10,@05                                             0020
         AL    @10,@TF00001                                        0020
         AL    @10,@CF00393                                        0020
         MVI   OUTABLID-8(@10),X'00'                               0020
*     OBLOCK(J)=''B;                /* ZERO 256 BYTES        @Y30LB14*/
         AL    @05,@TF00001                                        0021
         AL    @05,@CF00394                                        0021
         XC    OBLOCK-16(256,@05),OBLOCK-16(@05)                   0021
*   END;                            /*                       @Y30LB14*/
*                                                                  0022
         AH    J,@CH00042                                          0022
         CH    J,@CH00309                                          0022
         BNH   @DL00017                                            0022
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /* IF A TABLE IS EITHER NEW OR UPDATE, A NEW             @Y30LB14*/
*   /* EMPTY TABLE IS CREATED IN EITHER CASE.                @Y30LB14*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0023
*   IF NEWCREAT='1'B×UPDCREAT='1'B  /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
         TM    NEWCREAT(R4),B'01100000'                            0023
         BZ    @RF00023                                            0023
*     DO I=1 TO MAX;                /* BUILD COMPLETELY NEW TABLE  0024
*                                                            @Y30LB14*/
         LA    I,1                                                 0024
         B     @DE00024                                            0024
@DL00024 DS    0H                                                  0025
*       CALL WRITETRK;              /* PUT PREFIX INFO IN THE TRK  0025
*                                                            @Y30LB14*/
         BAL   @14,WRITETRK                                        0025
*     END;                          /*                       @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0026
         AH    I,@CH00042                                          0026
@DE00024 CR    I,MAX                                               0026
         BNH   @DL00024                                            0026
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /* RETURN TO THE BUILD MODULE - ICGDSBLD                 @Y30LB14*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0027
*   RETURN;                         /* RETURN TO BUILD       @Y30LB14*/
@EL00001 L     @13,4(,@13)                                         0027
@EF00001 L     @00,@SIZDATD                                        0027
         LR    @01,@11                                             0027
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0027
         BR    @14                                                 0027
*                                                                  0028
*/********************************************************** @XD00153*/
*/*                                                          @XD00153*/
*/* PROCEDURE NAME - WRITETRK                                @XD00153*/
*/*                                                          @XD00153*/
*/* FUNCTION - ENTER DATA ADDRESS FOR DASD (CCHHR), FOR 1    @XD00153*/
*/*            TRACK (CONTAINS 32 BLOCKS) AND CALL 'WRITE'   @XD00153*/
*/*            TO WRITE THE TRACK.                           @XD00153*/
*/*                                                          @XD00153*/
*/********************************************************** @XD00153*/
*                                                                  0028
*WRITETRK:                                                         0028
*   PROCEDURE;                      /*                       @Y30LB14*/
WRITETRK STM   @14,@12,@SA00002                                    0028
*   DO J=2 TO 32;                   /*                       @Y30LB14*/
         LA    J,2                                                 0029
@DL00029 DS    0H                                                  0030
*     OUTHEAD(J)=OUTHEAD(1);        /* SET THE HEAD NUMBER   @Y30LB14*/
         LR    @10,J                                               0030
         MH    @10,@CH00389                                        0030
         LH    @05,@CH00388                                        0030
         AL    @05,BUILDPTR(,R4)                                   0030
         SLR   @03,@03                                             0030
         IC    @03,OUTHEAD(,@05)                                   0030
         LA    @01,0(@10,@05)                                      0030
         AL    @01,@CF00395                                        0030
         STC   @03,OUTHEAD-10(,@01)                                0030
*     OUTCYL(J)=OUTCYL(1);          /* SET THE CYL NUMBER    @Y30LB14*/
         SLR   @03,@03                                             0031
         IC    @03,OUTCYL(,@05)                                    0031
         AL    @05,@CF00396                                        0031
         STC   @03,OUTCYL-9(@10,@05)                               0031
*   END;                            /*                       @Y30LB14*/
         AH    J,@CH00042                                          0032
         CH    J,@CH00309                                          0032
         BNH   @DL00029                                            0032
*   CALL WRITE;                     /* WRITE OUT THE TRACK   @Y30LB14
*                                                            @Y30LB14*/
         BAL   @14,WRITE                                           0033
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14
*                                                            @Y30LB14*/
@EL00002 DS    0H                                                  0034
@EF00002 DS    0H                                                  0034
@ER00002 LM    @14,@12,@SA00002                                    0034
         BR    @14                                                 0034
*   END WRITETRK;                   /*                       @Y30LB14*/
*                                                                  0036
*/********************************************************** @XD00153*/
*/*                                                          @XD00153*/
*/* PROCEDURE NAME - WRITE                                   @XD00153*/
*/*                                                          @XD00153*/
*/* FUNCTION - THIS ROUTINE LINKS TO ICGDSB06 TO WRITE OUT   @XD00153*/
*/*            THE TRACK OF DATA (32 BLOCKS) JUST SET UP.    @XD00153*/
*/*            ON RETURN, UPDATES THE DATA ADDRESS (CCHHR)   @XD00153*/
*/*            FOR DASD AND RETURNS TO CALLING ROUTINE.      @XD00153*/
*/*                                                          @XD00153*/
*/********************************************************** @XD00153*/
*                                                                  0036
*WRITE:                                                            0036
*   PROCEDURE;                      /*                       @Y30LB14*/
WRITE    STM   @14,@12,@SA00003                                    0036
*   B06ADDR=OUTADDR;                /* OUTPUT ADDR FOR B06   @XD00153*/
         L     @10,BUILDPTR(,R4)                                   0037
         MVC   B06ADDR(3,@10),OUTADDR(@10)                         0037
*   GEN(LINK EP=ICGDSB06);          /* WRITE OUT TRACK       @Y30LB14*/
         LINK EP=ICGDSB06
*   UT2VHEAD=UT2VHEAD+1;            /* INCR TO NEXT TRACK    @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0039
         LA    @05,1                                               0039
         SLR   @15,@15                                             0039
         IC    @15,UT2VHEAD(,@10)                                  0039
         ALR   @15,@05                                             0039
         STC   @15,UT2VHEAD(,@10)                                  0039
*   IF UT2VHEAD>18                  /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
         CLI   UT2VHEAD(@10),18                                    0040
         BNH   @RF00040                                            0040
*     DO;                           /*                       @Y30LB14*/
*       UT2VHEAD=0;                 /* SET TRACK TO ZERO     @Y30LB14*/
         MVI   UT2VHEAD(@10),X'00'                                 0042
*       UT2VCYL=UT2VCYL+1;          /* INCR TO NEXT CYL      @Y30LB14*/
         MVC   @ZT00003+3(1),UT2VCYL(@10)                          0043
         AL    @05,@ZT00003                                        0043
         STC   @05,UT2VCYL(,@10)                                   0043
*     END;                          /*                       @Y30LB14*/
*   OUTCYL(1)=UT2VCYL;              /* SET FOR NEXT AVAIL CYL      0045
*                                                            @Y30LB14*/
@RF00040 L     @10,BUILDPTR(,R4)                                   0045
         LH    @05,@CH00388                                        0045
         ALR   @05,@10                                             0045
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0045
*   OUTHEAD(1)=UT2VHEAD;            /* SET FOR NEXT AVAIL HEAD     0046
*                                                            @Y30LB14*/
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0046
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/
@EL00003 DS    0H                                                  0047
@EF00003 DS    0H                                                  0047
@ER00003 LM    @14,@12,@SA00003                                    0047
         BR    @14                                                 0047
*   END WRITE;                      /*                       @Y30LB14*/
*                                                                  0049
*/*********************************************************  @XD00153*/
*/*                 P A T C H   A R E A                      @XD00153*/
*/*********************************************************  @XD00153*/
*                                                                  0049
*   GENERATE;                                                      0049
*                                                         /*@XD00153*/
PATCHB16 DC    32C'PATCHB16'                              /*@XD00153*/
*   END ICGDSB16                    /*                       @Y30LB14*/
*                                                                  0050
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA5)                                       */
*                                                                  0050
*       ;                                                          0050
         B     @EL00001                                            0050
@DATA    DS    0H
@CH00042 DC    H'1'
@CH00309 DC    H'32'
@CH00389 DC    H'272'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@SA00003 DS    15F
@TF00001 DS    F
@ZTEMPS  DS    0F
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSB16 CSECT
         DS    0F
@CF00388 DC    F'13532'
@CH00388 EQU   @CF00388+2
@CF00393 DC    F'-264'
@CF00396 DC    F'-263'
@CF00395 DC    F'-262'
@CF00391 DC    F'-261'
@CF00392 DC    F'-260'
@CF00394 DC    F'-256'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSB16 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
MAX      EQU   @03
J        EQU   @02
I        EQU   @02
R4       EQU   @04
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
PCHBF    EQU   READER+99
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
PRINTER  EQU   COMTAB+464
MESSAGES EQU   COMTAB+810
SPECLMSG EQU   MESSAGES+18
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
COMPTR2  EQU   GENIO+16
BUILDPTR EQU   GENIO+20
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
CPUASSOC EQU   COMTAB+3026
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
NEWCREAT EQU   @NM00017
UPDCREAT EQU   @NM00017
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
BUILDTAB EQU   0
COMB06   EQU   BUILDTAB
B06DCBPT EQU   COMB06
B06BUFPT EQU   COMB06+4
B06ADDR  EQU   COMB06+9
COMB05   EQU   BUILDTAB+12
B05ADDR  EQU   COMB05+9
BUILDGEN EQU   BUILDTAB+24
UT2VCHR  EQU   BUILDGEN+8
OUTADDR  EQU   UT2VCHR+1
UT2VCYL  EQU   OUTADDR
UT2VHEAD EQU   OUTADDR+1
UT1VCHR  EQU   BUILDGEN+12
INADDR   EQU   UT1VCHR+1
UT1STUFF EQU   BUILDTAB+40
UT1FLAG  EQU   UT1STUFF+96
UT2STUFF EQU   BUILDTAB+664
UT2DCB   EQU   UT2STUFF
UT2FLAG  EQU   UT2STUFF+96
UT3STUFF EQU   BUILDTAB+1288
UT3FLAG  EQU   UT3STUFF+96
UT2BUFER EQU   BUILDTAB+13532
OUTBUFFR EQU   0
OUTBLOCK EQU   OUTBUFFR
OBLKPRFX EQU   OUTBLOCK+8
OUTABLID EQU   OBLKPRFX
OUTCYL   EQU   OBLKPRFX+1
OUTHEAD  EQU   OBLKPRFX+2
OUTREC   EQU   OBLKPRFX+3
OUTFLR   EQU   OBLKPRFX+4
OBLOCK   EQU   OUTBLOCK+16
SCANBUF  EQU   0
SCANDATA EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00024 EQU   OUTBLOCK
TEMPEND  EQU   BUILDTAB+22396
LTRTRANI EQU   BUILDTAB+22316
LTRTRANO EQU   BUILDTAB+22236
UT1BUFER EQU   BUILDTAB+5084
NVERIFY  EQU   BUILDTAB+3500
CVERIFY  EQU   BUILDTAB+1916
@NM00023 EQU   UT3STUFF+624
UT3DDN   EQU   UT3STUFF+616
UT3CCWS  EQU   UT3STUFF+320
UT3IOB   EQU   UT3STUFF+280
UT3ECB   EQU   UT3STUFF+276
UT3JFCB  EQU   UT3STUFF+100
@NM00022 EQU   UT3FLAG
UT3VWERR EQU   UT3FLAG
UT3VOERR EQU   UT3FLAG
UT3VUPDT EQU   UT3FLAG
UT3DCB   EQU   UT3STUFF
UT2DDN   EQU   UT2STUFF+616
UT2CCWS  EQU   UT2STUFF+320
UT2IOB   EQU   UT2STUFF+280
UT2ECB   EQU   UT2STUFF+276
UT2JFCB  EQU   UT2STUFF+100
@NM00021 EQU   UT2FLAG
UT2VCERR EQU   UT2FLAG
UT2VWERR EQU   UT2FLAG
UT2VOERR EQU   UT2FLAG
UT2VUPDT EQU   UT2FLAG
UT1DDN   EQU   UT1STUFF+616
UT1CCWS  EQU   UT1STUFF+320
UT1IOB   EQU   UT1STUFF+280
UT1ECB   EQU   UT1STUFF+276
UT1JFCB  EQU   UT1STUFF+100
@NM00020 EQU   UT1FLAG
UT1VWERR EQU   UT1FLAG
UT1VOERR EQU   UT1FLAG
UT1VUPDT EQU   UT1FLAG
UT1DCB   EQU   UT1STUFF
UT1VREC  EQU   INADDR+2
UT1VHEAD EQU   INADDR+1
UT1VCYL  EQU   INADDR
UT1TABID EQU   UT1VCHR
UT2VREC  EQU   OUTADDR+2
UT2TABID EQU   UT2VCHR
ADDRBUF2 EQU   BUILDGEN+4
ADDRBUF1 EQU   BUILDGEN
B05REC   EQU   B05ADDR+2
B05HEAD  EQU   B05ADDR+1
B05CYL   EQU   B05ADDR
B05TBLID EQU   COMB05+8
B05BUFPT EQU   COMB05+4
B05DCBPT EQU   COMB05
B06REC   EQU   B06ADDR+2
B06HEAD  EQU   B06ADDR+1
B06CYL   EQU   B06ADDR
B06TBLID EQU   COMB06+8
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
CPUREFNO EQU   RSGUCB+6
RSGCPUID EQU   RSGUCB+1
@NM00019 EQU   RSGFLAGS
CISPEC   EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00018 EQU   @NM00017
PRNTONLY EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
CPUSPEC  EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00013 EQU   CPUFLAG1
TOMPCPU  EQU   CPU+5
CPUID    EQU   CPU
CPUNUM   EQU   CPUASSOC
SPNRSGNO EQU   PHYSTYPE+1
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSICEB EQU   MERLICEB
PHYSMERL EQU   MERLICEB
PHYSDS2  EQU   DSPAIRS
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
TODS2    EQU   RSGTODS+1
TODS1    EQU   RSGTODS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
SAVE14   EQU   GENIO+12
EXLST    EQU   GENIO+8
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00006 EQU   MESSAGES+19
PRNTBUF2 EQU   SPECLMSG
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00005 EQU   SPECLMSG
PRNTCARD EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
TERMINAT EQU   MESSAGES+6
WARNING  EQU   MESSAGES+4
MSGNO    EQU   MESSAGES+2
RETCODE  EQU   MESSAGES
OUTBUF2  EQU   PRINTER+225
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00003 EQU   READER+206
SCANLEN  EQU   READER+204
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
INBUF    EQU   READER+100
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
LASTPARM EQU   READFLAG
ENDSCAN  EQU   READFLAG
PARMBIT  EQU   READFLAG
KEYBIT   EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00023 EQU   @EL00001
@ENDDATA EQU   *
         END   ICGDSB16,(C'PLS1700',0603,76337)
