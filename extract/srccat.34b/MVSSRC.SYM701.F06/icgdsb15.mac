         TITLE 'ICGDSB15 MSC TABLE CREATE, DIAG/EC/OVERLAY TABLE       *
                        '
ICGDSB15 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSB15  76.337'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                            @Y30LB14*/
*                                                                  0015
*/********************************************************** @XD00153*/
*/*                                                          @XD00153*/
*/*      ICGDSB15 (MAINLINE)                                 @XD00153*/
*/*                                                          @XD00153*/
*/*      ESTABLISHES DATA ADDRESS FOR DASD (CCHHR), THE DCB  @XD00153*/
*/*      ADDRESSES, AND BUFFER POINTERS.  ENTERS THE BLOCK   @XD00153*/
*/*      NUMBER (1 THRU 32), THE TABLE ID ('11010000'B).     @XD00153*/
*/*      INITIALIZES THE STOPSCAN FLAG, THE MESSAGE AREA, AND        */
*/*      ZEROS THE REMAINDER OF THE BLOCK.                   @XD00153*/
*/*                                                          @XD00153*/
*/*      ROUTES CONTROL TO 'EMPTYLIB' IF A NEW TABLE IS TO   @XD00153*/
*/*      BE BUILT, AND TO 'COPYLIB' IF A CURRENT TABLE IS TO @XD00153*/
*/*      BE UPDATED.  RETURNS TO BUILD MODULE.               @XD00153*/
*/*                                                          @XD00153*/
*/********************************************************** @XD00153*/
*                                                                  0015
*   OUTCYL(1)=UT2VCYL;              /* STARTING SYLINDER NUMBER    0015
*                                                            @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0015
         LH    @05,@CH00425                                        0015
         ALR   @05,@10                                             0015
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0015
*   OUTHEAD(1)=UT2VHEAD;            /* STARTING HEAD NUMBER  @Y30LB14*/
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0016
*   B05DCBPT=ADDR(UT1DCB);          /*                       @Y30LB14*/
         LA    @15,UT1DCB(,@10)                                    0017
         ST    @15,B05DCBPT(,@10)                                  0017
*   B06DCBPT=ADDR(UT2DCB);          /*                       @Y30LB14*/
         LA    @15,UT2DCB(,@10)                                    0018
         ST    @15,B06DCBPT(,@10)                                  0018
*   B06BUFPT=ADDR(UT2BUFER);        /* ADDRESS OF WRITE      @Y30LB14
*                                      BUFFER                @Y30LB14*/
         LR    @01,@10                                             0019
         AL    @01,@CF00425                                        0019
         ST    @01,B06BUFPT(,@10)                                  0019
*   B05BUFPT=ADDR(UT1BUFER);        /* ADDRESS OF READ       @Y30LB14
*                                      BUFFER                @Y30LB14*/
         LR    @01,@10                                             0020
         AL    @01,@CF00427                                        0020
         ST    @01,B05BUFPT(,@10)                                  0020
*   STOPSCAN='0'B;                  /*                       @Y30LB14*/
         NI    STOPSCAN,B'01111111'                                0021
*   IF OUTCYL='1B'X                 /*                       @OZ08844*/
*       &OUTHEAD='06'X              /*                       @OZ08844*/
*     THEN                          /*                       @OZ08844*/
         CLI   OUTCYL(@05),27                                      0022
         BNE   @RF00022                                            0022
         CLI   OUTHEAD(@05),6                                      0022
         BNE   @RF00022                                            0022
*     MAX=5;                        /*                       @OZ08844*/
         LA    MAX,5                                               0023
*   ELSE                            /*                       @OZ08844*/
*     MAX=68;                       /* SET FOR 68 TRACKS     @OZ08844*/
         B     @RC00022                                            0024
@RF00022 LA    MAX,68                                              0024
*   MSG410I=' ICG410I NON-MATCH ON INPUT TABLE ID FOR ICGDSB15';/* 0025
*                                                            @Y30LB14*/
*                                                                  0025
@RC00022 MVC   MSG410I(49),@CC00391                                0025
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /* IF A COMPLETELY NEW TABLE IS TO BE BUILT              @Y30LB14*/
*   /* FROM SCRATCH, THEN 'EMPTYLIB' IS CALLED.              @Y30LB14*/
*   /* IF A TABLE IS BEING UPDATED THEN THE CON-             @Y30LB14*/
*   /* TENTS OF THE OLD TABLE IS COPIED INTO THE             @Y30LB14*/
*   /* NEW TABLE.                                            @Y30LB14*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0026
*   IF NEWCREAT='1'B                /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
         TM    NEWCREAT(R4),B'01000000'                            0026
         BNO   @RF00026                                            0026
*     DO;                           /*                       @Y30LB14*/
*       DO J=1 TO 32;               /* FOR ALL 32 BLOCKS     @Y30LB14*/
         LA    J,1                                                 0028
@DL00028 DS    0H                                                  0029
*         OUTREC(J)=J;              /* PUT IN BLOCK NUM      @Y30LB14*/
         LR    @10,J                                               0029
         MH    @10,@CH00426                                        0029
         LH    @05,@CH00425                                        0029
         AL    @05,BUILDPTR(,R4)                                   0029
         LA    @01,0(@10,@05)                                      0029
         AL    @01,@CF00430                                        0029
         STC   J,OUTREC-11(,@01)                                   0029
*         OUTABLID(J)='11010000'B;  /* TABLE ID              @Y30LB14*/
         ST    @10,@TF00001                                        0030
         ALR   @10,@05                                             0030
         AL    @10,@CF00431                                        0030
         MVI   OUTABLID-8(@10),B'11010000'                         0030
*         OUTFLR(J)=''B;            /* SET FILLER TO ZERO    @Y30LB14*/
         LR    @10,@05                                             0031
         AL    @10,@TF00001                                        0031
         AL    @10,@CF00432                                        0031
         XC    OUTFLR-12(4,@10),OUTFLR-12(@10)                     0031
*         OBLOCK(J)=''B;            /* 256 BYTES IN BLK=0    @Y30LB14*/
         AL    @05,@TF00001                                        0032
         AL    @05,@CF00433                                        0032
         XC    OBLOCK-16(256,@05),OBLOCK-16(@05)                   0032
*       END;                        /*                       @Y30LB14*/
         AH    J,@CH00042                                          0033
         CH    J,@CH00309                                          0033
         BNH   @DL00028                                            0033
*       CALL EMPTYLIB;              /* BUILD COMPLETELY NEW TABLE  0034
*                                                            @Y30LB14*/
         BAL   @14,EMPTYLIB                                        0034
*     END;                          /*                       @Y30LB14*/
*   IF UPDCREAT='1'B                /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
@RF00026 TM    UPDCREAT(R4),B'00100000'                            0036
         BNO   @RF00036                                            0036
*     CALL COPYLIB;                 /* COPY THE CURRENT TABLE      0037
*                                                            @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0037
         BAL   @14,COPYLIB                                         0037
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @XD00153*/
*   /* RETURN TO THE BUILD MODULE - ICGDSBLD                 @Y30LB14*/
*   /* ***********************************************       @XD00153*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0038
*   RETURN;                         /* RETURN TO BUILD       @Y30LB14*/
@EL00001 L     @13,4(,@13)                                         0038
@EF00001 L     @00,@SIZDATD                                        0038
         LR    @01,@11                                             0038
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0038
         BR    @14                                                 0038
*                                                                  0039
*/********************************************************** @XD00153*/
*/*                                                          @XD00153*/
*/* PROCEDURE NAME - COPYLIB                                 @XD00153*/
*/*                                                          @XD00153*/
*/* FUNCTION - THIS ROUTINE LINKS TO ICGDSB05 TO READ A      @XD00153*/
*/*            TRACK FROM THE OLD TABLE.  CALL 'IDCHECK'     @XD00153*/
*/*            TO ASSURE TRACK IS A DIAG/EC/OVERLAY TRACK.   @XD00153*/
*/*            IF IT IS, COPY THE TABLE FROM THE OLD PACK TO @XD00153*/
*/*            THE NEW PACK.  THE POINTER TO THE NEXT TRACK  @XD00153*/
*/*            IN THE CONTROL IS UPDATED AS WELL AS THE      @XD00153*/
*/*            POINTER IN THE PREFIX.                        @XD00153*/
*/*            A TOTAL OF 68 TRACKS ARE COPIED.              @ZD00181*/
*/*                                                          @XD00153*/
*/********************************************************** @XD00153*/
*                                                                  0039
*COPYLIB:                                                          0039
*   PROCEDURE;                      /*                       @Y30LB14
*                                                            @Y30LB14*/
COPYLIB  STM   @14,@12,@SA00002                                    0039
*   DO I=1 TO MAX;                  /*                       @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0040
         LA    I,1                                                 0040
         B     @DE00040                                            0040
@DL00040 DS    0H                                                  0041
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @XD00153*/
*     /* READ IN A COMPLETE TRACK FROM THE OLD               @Y30LB14*/
*     /* TABLE AND CHECK IF IT IS A DIAG/EC/OVERLAY          @Y30LB14*/
*     /* TRACK.                                              @Y30LB14*/
*     /* *********************************************       @XD00153*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0041
*     B05ADDR=INADDR;               /* SET READ ADDRESS      @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0041
         MVC   B05ADDR(3,@10),INADDR(@10)                          0041
*     GEN(LINK EP=ICGDSB05);        /* READ IN A TRACK       @Y30LB14*/
         LINK EP=ICGDSB05
*     CALL IDCHECK;                 /* CHECK TRACK ID        @Y30LB14*/
         BAL   @14,IDCHECK                                         0043
*     IF STOPSCAN='1'B              /*                       @Y30LB14*/
*       THEN                        /*                       @Y30LB14*/
         TM    STOPSCAN,B'10000000'                                0044
         BO    @RT00044                                            0044
*       RETURN;                     /* RETURN TO CALLER      @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0045
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @XD00153*/
*     /* SET UP ADDRESS FOR NEXT TRACK TO READ IN            @Y30LB14*/
*     /* *********************************************       @XD00153*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0046
*     UT1VHEAD=UT1VHEAD+1;          /* INCREMENT TRACK + 1   @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0046
         LA    @02,1                                               0046
         SLR   @15,@15                                             0046
         IC    @15,UT1VHEAD(,@10)                                  0046
         ALR   @15,@02                                             0046
         STC   @15,UT1VHEAD(,@10)                                  0046
*     IF UT1VHEAD>18                /*                       @Y30LB14*/
*       THEN                        /*                       @Y30LB14*/
         CLI   UT1VHEAD(@10),18                                    0047
         BNH   @RF00047                                            0047
*       DO;                         /*                       @Y30LB14*/
*         UT1VHEAD=0;               /* SET TRACK TO ZERO     @Y30LB14*/
         MVI   UT1VHEAD(@10),X'00'                                 0049
*         UT1VCYL=UT1VCYL+1;        /* INCR TO NEXT CYL      @Y30LB14*/
         MVC   @ZT00003+3(1),UT1VCYL(@10)                          0050
         AL    @02,@ZT00003                                        0050
         STC   @02,UT1VCYL(,@10)                                   0050
*       END;                        /*                       @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0051
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @XD00153*/
*     /* COPY INFORMATION FROM INPUT BUFFER TO OUTPUT        @Y30LB14*/
*     /* BUFFER                                              @Y30LB14*/
*     /* *********************************************       @XD00153*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0052
*     DO J=1 TO 32;                 /*                       @Y30LB14*/
@RF00047 LA    J,1                                                 0052
@DL00052 DS    0H                                                  0053
*       OBLKPRFX(J)=INBLKPFX(J);    /* MOVE INPUT TRK        @Y30LB14*/
         LR    @10,J                                               0053
         MH    @10,@CH00426                                        0053
         L     @15,BUILDPTR(,R4)                                   0053
         LH    @14,@CH00425                                        0053
         ALR   @14,@15                                             0053
         ST    @10,@TF00001                                        0053
         ALR   @10,@14                                             0053
         AL    @10,@CF00431                                        0053
         LR    @09,J                                               0053
         MH    @09,@CH00428                                        0053
         AH    @15,@CH00427                                        0053
         ST    @09,@TF00002                                        0053
         ALR   @09,@15                                             0053
         AL    @09,@CF00431                                        0053
         MVC   OBLKPRFX-8(8,@10),INBLKPFX(@09)                     0053
*       OUTABLID(J)='D0'X;          /* ESTABLISH PREFIX      @XM02520*/
         LR    @10,@14                                             0054
         AL    @10,@TF00001                                        0054
         AL    @10,@CF00431                                        0054
         MVI   OUTABLID-8(@10),X'D0'                               0054
*       OBLOCK(J)=INBLK(J);         /*                       @Y30LB14*/
         AL    @14,@TF00001                                        0055
         AL    @14,@CF00433                                        0055
         AL    @15,@TF00002                                        0055
         AL    @15,@CF00433                                        0055
         MVC   OBLOCK-16(256,@14),INBLK-8(@15)                     0055
*     END;                          /*                       @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0056
         AH    J,@CH00042                                          0056
         CH    J,@CH00309                                          0056
         BNH   @DL00052                                            0056
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @XD00153*/
*     /* PUT IN THE TRACK AND CYLINDER ADDRESS IN THE        @Y30LB14*/
*     /* PREFIX OF THE BLOCK IN ALL 32 BLOCKS OF THE         @Y30LB14*/
*     /* TRACK.                                              @Y30LB14*/
*     /* *********************************************       @XD00153*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0057
*     DO J=1 TO 32;                 /* SET ADDR FOR ACTUAL   @Y30LB14*/
         LA    J,1                                                 0057
@DL00057 DS    0H                                                  0058
*       OUTREC(J)=J;                /* VCHR FOR EACH BLOCK   @Y30LB14*/
         LR    @10,J                                               0058
         MH    @10,@CH00426                                        0058
         L     @15,BUILDPTR(,R4)                                   0058
         LH    @14,@CH00425                                        0058
         ALR   @14,@15                                             0058
         LA    @01,0(@10,@14)                                      0058
         AL    @01,@CF00430                                        0058
         STC   J,OUTREC-11(,@01)                                   0058
*       OUTHEAD(J)=UT2VHEAD;        /* IN THIS TRK           @Y30LB14*/
         SLR   @09,@09                                             0059
         IC    @09,UT2VHEAD(,@15)                                  0059
         LA    @08,0(@10,@14)                                      0059
         AL    @08,@CF00434                                        0059
         STC   @09,OUTHEAD-10(,@08)                                0059
*       OUTCYL(J)=UT2VCYL;          /*                       @Y30LB14*/
         SLR   @09,@09                                             0060
         IC    @09,UT2VCYL(,@15)                                   0060
         AL    @14,@CF00435                                        0060
         STC   @09,OUTCYL-9(@10,@14)                               0060
*     END;                          /*                       @Y30LB14
*                                                            @Y30LB14*/
*                                                                  0061
         AH    J,@CH00042                                          0061
         CH    J,@CH00309                                          0061
         BNH   @DL00057                                            0061
*     /***************************************************************/
*     /*                                                             */
*     /* *********************************************       @XD00153*/
*     /* WRITE OUT THE TRACK AND UPDATE THE TRACK AND        @Y30LB14*/
*     /* CYLINDER TO THE NEXT AVAILABLE.                     @Y30LB14*/
*     /* *********************************************       @XD00153*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0062
*     CALL WRITE;                   /* WRITE OUT THE TRACK   @Y30LB14
*                                                            @Y30LB14*/
         BAL   @14,WRITE                                           0062
*   END;                            /* END DO I LOOP         @Y30LB14*/
         AH    I,@CH00042                                          0063
@DE00040 CR    I,MAX                                               0063
         BNH   @DL00040                                            0063
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/
@EL00002 DS    0H                                                  0064
@EF00002 DS    0H                                                  0064
@ER00002 LM    @14,@12,@SA00002                                    0064
         BR    @14                                                 0064
*   END COPYLIB;                    /*                       @Y30LB14
*                                                            @Y30LB14*/
         B     @EL00002                                            0065
*                                                                  0066
*/********************************************************** @XD00153*/
*/*                                                          @XD00153*/
*/* PROCEDURE NAME - EMPTYLIB                                @XD00153*/
*/*                                                          @XD00153*/
*/* FUNCTION - BUILD NEW TABLE (68 TRACKS OF 32 BLOCKS EACH) @ZD00181*/
*/*            CALL WRITETRK TO PUT PREFIX INFO INTO THE     @XD00153*/
*/*            TRACK AND GET TRACK WRITTEN TO PACK.          @XD00153*/
*/*                                                          @XD00153*/
*/********************************************************** @XD00153*/
*                                                                  0066
*EMPTYLIB:                                                         0066
*   PROCEDURE;                      /*                       @Y30LB14*/
EMPTYLIB STM   @14,@12,@SA00003                                    0066
*   DO I=1 TO MAX;                  /*                       @Y30LB14*/
         LA    I,1                                                 0067
         B     @DE00067                                            0067
@DL00067 DS    0H                                                  0068
*     CALL WRITETRK;                /* PUT PREFIX INFO IN THE TRACK
*                                                            @Y30LB14*/
         BAL   @14,WRITETRK                                        0068
*   END;                            /*                       @Y30LB14*/
         AH    I,@CH00042                                          0069
@DE00067 CR    I,MAX                                               0069
         BNH   @DL00067                                            0069
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/
@EL00003 DS    0H                                                  0070
@EF00003 DS    0H                                                  0070
@ER00003 LM    @14,@12,@SA00003                                    0070
         BR    @14                                                 0070
*   END EMPTYLIB;                   /*                       @Y30LB14*/
*                                                                  0072
*/********************************************************** @XD00153*/
*/*                                                          @XD00153*/
*/* PROCEDURE NAME - IDCHECK                                 @XD00153*/
*/*                                                          @XD00153*/
*/* FUNCTION - CHECK TRACK TO ASSURE IT IS A TRACK FROM THE  @XD00153*/
*/*            DIAG/EC/OVERLAY TABLE.  IF IT IS NOT, SET     @XD00153*/
*/*            CONDITION CODE OF 12 AND ISSUE MESSAGE        @XD00153*/
*/*            ICG410I VIA 'PUTIT1'.                         @XD00153*/
*/*                                                          @XD00153*/
*/********************************************************** @XD00153*/
*                                                                  0072
*IDCHECK:                                                          0072
*   PROCEDURE;                      /*                       @Y30LB14*/
IDCHECK  STM   @14,@12,@SA00004                                    0072
*   IF UT1TABID^='11010000'B        /*                       @OZ08844*/
*     THEN                          /*                       @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0073
         CLI   UT1TABID(@10),208                                   0073
         BE    @RF00073                                            0073
*     DO;                           /*                       @Y30LB14*/
*       OUTBUF2(1:49)=MSG410I;      /*                       @Y30LB14*/
         MVC   OUTBUF2(49,R4),MSG410I                              0075
*       RETCODE=12;                 /*                       @Y30LB14*/
         MVC   RETCODE(2,R4),@CH00128                              0076
*       CALL PUTIT1;                /* PUT OUT MESSAGE       @Y30LB14*/
         BAL   @14,PUTIT1                                          0077
*     END;                          /*                       @Y30LB14*/
*   RETURN;                         /*                       @Y30LB14*/
@EL00004 DS    0H                                                  0079
@EF00004 DS    0H                                                  0079
@ER00004 LM    @14,@12,@SA00004                                    0079
         BR    @14                                                 0079
*   END IDCHECK;                    /*                       @Y30LB14*/
         B     @EL00004                                            0080
*                                                                  0081
*/********************************************************** @XD00153*/
*/*                                                          @XD00153*/
*/* PROCEDURE NAME - WRITETRK                                @XD00153*/
*/*                                                          @XD00153*/
*/* FUNCTION - ENTER DATA ADDRESS FOR DASD (CCHHR), FOR 1    @XD00153*/
*/*            TRACK (CONTAINS 32 BLOCKS) AND CALL 'WRITE'   @XD00153*/
*/*            TO WRITE THE TRACK.                           @XD00153*/
*/*                                                          @XD00153*/
*/***********************************************************@XD00153*/
*                                                                  0081
*WRITETRK:                                                         0081
*   PROCEDURE;                      /*                       @Y30LB14*/
WRITETRK STM   @14,@12,@SA00005                                    0081
*   DO J=2 TO 32;                   /*                       @Y30LB14*/
         LA    J,2                                                 0082
@DL00082 DS    0H                                                  0083
*     OUTHEAD(J)=OUTHEAD(1);        /* SET THE HEAD NUMBER   @Y30LB14*/
         LR    @10,J                                               0083
         MH    @10,@CH00426                                        0083
         LH    @05,@CH00425                                        0083
         AL    @05,BUILDPTR(,R4)                                   0083
         SLR   @03,@03                                             0083
         IC    @03,OUTHEAD(,@05)                                   0083
         LA    @01,0(@10,@05)                                      0083
         AL    @01,@CF00434                                        0083
         STC   @03,OUTHEAD-10(,@01)                                0083
*     OUTCYL(J)=OUTCYL(1);          /* SET THE CYL NUMBER    @Y30LB14*/
         SLR   @03,@03                                             0084
         IC    @03,OUTCYL(,@05)                                    0084
         AL    @05,@CF00435                                        0084
         STC   @03,OUTCYL-9(@10,@05)                               0084
*   END;                            /*                       @Y30LB14*/
         AH    J,@CH00042                                          0085
         CH    J,@CH00309                                          0085
         BNH   @DL00082                                            0085
*   CALL WRITE;                     /* WRITE OUT THE TRACK   @Y30LB14
*                                                            @Y30LB14*/
         BAL   @14,WRITE                                           0086
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14
*                                                            @Y30LB14*/
@EL00005 DS    0H                                                  0087
@EF00005 DS    0H                                                  0087
@ER00005 LM    @14,@12,@SA00005                                    0087
         BR    @14                                                 0087
*   END WRITETRK;                   /*                       @Y30LB14*/
*                                                                  0089
*/********************************************************** @XD00153*/
*/*                                                          @XD00153*/
*/* PROCEDURE NAME - WRITE                                   @XD00153*/
*/*                                                          @XD00153*/
*/* FUNCTION - THIS ROUTINE LINKS TO ICGDSB06 TO WRITE OUT   @XD00153*/
*/*            THE TRACK OF DATA (32 BLOCKS) JUST SET UP.    @XD00153*/
*/*            ON RETURN, UPDATES THE DATA ADDRESS (CCHHR)   @XD00153*/
*/*            FOR DASD AND RETURNS TO CALLING ROUTINE.      @XD00153*/
*/*                                                          @XD00153*/
*/********************************************************** @XD00153*/
*                                                                  0089
*WRITE:                                                            0089
*   PROCEDURE;                      /*                       @Y30LB14*/
WRITE    STM   @14,@12,@SA00006                                    0089
*   B06ADDR=OUTADDR;                /* OUTPUT ADDR FOR B06   @XD00153*/
         L     @10,BUILDPTR(,R4)                                   0090
         MVC   B06ADDR(3,@10),OUTADDR(@10)                         0090
*   GEN(LINK EP=ICGDSB06);          /* WRITE OUT TRACK       @Y30LB14*/
         LINK EP=ICGDSB06
*   UT2VHEAD=UT2VHEAD+1;            /* INCR TO NEXT TRACK    @Y30LB14*/
         L     @10,BUILDPTR(,R4)                                   0092
         LA    @05,1                                               0092
         SLR   @15,@15                                             0092
         IC    @15,UT2VHEAD(,@10)                                  0092
         ALR   @15,@05                                             0092
         STC   @15,UT2VHEAD(,@10)                                  0092
*   IF UT2VHEAD>18                  /*                       @Y30LB14*/
*     THEN                          /*                       @Y30LB14*/
         CLI   UT2VHEAD(@10),18                                    0093
         BNH   @RF00093                                            0093
*     DO;                           /*                       @Y30LB14*/
*       UT2VHEAD=0;                 /* SET TRACK TO ZERO     @Y30LB14*/
         MVI   UT2VHEAD(@10),X'00'                                 0095
*       UT2VCYL=UT2VCYL+1;          /* INCR TO NEXT CYL      @Y30LB14*/
         MVC   @ZT00003+3(1),UT2VCYL(@10)                          0096
         AL    @05,@ZT00003                                        0096
         STC   @05,UT2VCYL(,@10)                                   0096
*     END;                          /*                       @Y30LB14*/
*   OUTCYL(1)=UT2VCYL;              /* SET FOR NEXT AVAIL CYL      0098
*                                                            @Y30LB14*/
@RF00093 L     @10,BUILDPTR(,R4)                                   0098
         LH    @05,@CH00425                                        0098
         ALR   @05,@10                                             0098
         MVC   OUTCYL(1,@05),UT2VCYL(@10)                          0098
*   OUTHEAD(1)=UT2VHEAD;            /* SET FOR NEXT AVAIL HEAD     0099
*                                                            @Y30LB14*/
         MVC   OUTHEAD(1,@05),UT2VHEAD(@10)                        0099
*   RETURN;                         /* RETURN TO CALLER      @Y30LB14*/
@EL00006 DS    0H                                                  0100
@EF00006 DS    0H                                                  0100
@ER00006 LM    @14,@12,@SA00006                                    0100
         BR    @14                                                 0100
*   END WRITE;                      /*                       @Y30LB14*/
*                                                                  0102
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0102
*PUTIT1:                                                           0102
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT1   STM   @14,@12,@SA00007                                    0102
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'10000000'                                0103
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0104
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @10,1                                               0105
         AH    @10,TERMINAT(,R4)                                   0105
         STH   @10,TERMINAT(,R4)                                   0105
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0107
*   END PUTIT1;                     /*                       @Y30LB12*/
@EL00007 DS    0H                                                  0108
@EF00007 DS    0H                                                  0108
@ER00007 LM    @14,@12,@SA00007                                    0108
         BR    @14                                                 0108
*                                                                  0109
*/*********************************************************  @XD00153*/
*/*                P A T C H   A R E A                       @XD00153*/
*/*********************************************************  @XD00153*/
*                                                                  0109
*   GENERATE;                                                      0109
*                                                         /*@XD00153*/
PATCHB15 DC    32C'PATCHB15'                              /*@XD00153*/
*   END ICGDSB15                    /*                       @Y30LB14*/
*                                                                  0110
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA5)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */
*                                                                  0110
*       ;                                                          0110
         B     @EL00001                                            0110
@DATA    DS    0H
@CH00042 DC    H'1'
@CH00128 DC    H'12'
@CH00309 DC    H'32'
@CH00428 DC    H'264'
@CH00426 DC    H'272'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00003 DS    15F
@SA00002 DS    15F
@SA00004 DS    15F
@SA00006 DS    15F
@SA00005 DS    15F
@SA00007 DS    15F
@TF00001 DS    F
@TF00002 DS    F
@ZTEMPS  DS    0F
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSB15 CSECT
         DS    0F
@CF00427 DC    F'5084'
@CH00427 EQU   @CF00427+2
@CF00425 DC    F'13532'
@CH00425 EQU   @CF00425+2
@CF00431 DC    F'-264'
@CF00435 DC    F'-263'
@CF00434 DC    F'-262'
@CF00430 DC    F'-261'
@CF00432 DC    F'-260'
@CF00433 DC    F'-256'
@DATD    DSECT
         DS    0D
STOPSCAN DS    BL1
MSG410I  DS    CL49
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSB15 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00391 DC    C' ICG410I NON-MATCH ON INPUT TABLE ID FOR ICGDSB15'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
MAX      EQU   @03
J        EQU   @02
I        EQU   @05
R4       EQU   @04
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
PCHBF    EQU   READER+99
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
PRINTER  EQU   COMTAB+464
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
RETCODE  EQU   MESSAGES
TERMINAT EQU   MESSAGES+6
SPECLMSG EQU   MESSAGES+18
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
COMPTR2  EQU   GENIO+16
BUILDPTR EQU   GENIO+20
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
CPUASSOC EQU   COMTAB+3026
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
NEWCREAT EQU   @NM00017
UPDCREAT EQU   @NM00017
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
ALTPATH1 EQU   CONFGDEV+2
ALTPATH2 EQU   CONFGDEV+5
ALTPATH3 EQU   CONFGDEV+8
BUILDTAB EQU   0
COMB06   EQU   BUILDTAB
B06DCBPT EQU   COMB06
B06BUFPT EQU   COMB06+4
B06ADDR  EQU   COMB06+9
COMB05   EQU   BUILDTAB+12
B05DCBPT EQU   COMB05
B05BUFPT EQU   COMB05+4
B05ADDR  EQU   COMB05+9
BUILDGEN EQU   BUILDTAB+24
UT2VCHR  EQU   BUILDGEN+8
OUTADDR  EQU   UT2VCHR+1
UT2VCYL  EQU   OUTADDR
UT2VHEAD EQU   OUTADDR+1
UT1VCHR  EQU   BUILDGEN+12
UT1TABID EQU   UT1VCHR
INADDR   EQU   UT1VCHR+1
UT1VCYL  EQU   INADDR
UT1VHEAD EQU   INADDR+1
UT1STUFF EQU   BUILDTAB+40
UT1DCB   EQU   UT1STUFF
UT1FLAG  EQU   UT1STUFF+96
UT2STUFF EQU   BUILDTAB+664
UT2DCB   EQU   UT2STUFF
UT2FLAG  EQU   UT2STUFF+96
UT3STUFF EQU   BUILDTAB+1288
UT3FLAG  EQU   UT3STUFF+96
UT1BUFER EQU   BUILDTAB+5084
UT2BUFER EQU   BUILDTAB+13532
INBUFFER EQU   0
INBLOCK  EQU   INBUFFER
INBLKPFX EQU   INBLOCK
INBLK    EQU   INBLOCK+8
OUTBUFFR EQU   0
OUTBLOCK EQU   OUTBUFFR
OBLKPRFX EQU   OUTBLOCK+8
OUTABLID EQU   OBLKPRFX
OUTCYL   EQU   OBLKPRFX+1
OUTHEAD  EQU   OBLKPRFX+2
OUTREC   EQU   OBLKPRFX+3
OUTFLR   EQU   OBLKPRFX+4
OBLOCK   EQU   OUTBLOCK+16
SCANBUF  EQU   0
SCANDATA EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00024 EQU   OUTBLOCK
INFLR    EQU   INBLKPFX+4
INREC    EQU   INBLKPFX+3
INHEAD   EQU   INBLKPFX+2
INCYL    EQU   INBLKPFX+1
INTABLID EQU   INBLKPFX
TEMPEND  EQU   BUILDTAB+22396
LTRTRANI EQU   BUILDTAB+22316
LTRTRANO EQU   BUILDTAB+22236
NVERIFY  EQU   BUILDTAB+3500
CVERIFY  EQU   BUILDTAB+1916
@NM00023 EQU   UT3STUFF+624
UT3DDN   EQU   UT3STUFF+616
UT3CCWS  EQU   UT3STUFF+320
UT3IOB   EQU   UT3STUFF+280
UT3ECB   EQU   UT3STUFF+276
UT3JFCB  EQU   UT3STUFF+100
@NM00022 EQU   UT3FLAG
UT3VWERR EQU   UT3FLAG
UT3VOERR EQU   UT3FLAG
UT3VUPDT EQU   UT3FLAG
UT3DCB   EQU   UT3STUFF
UT2DDN   EQU   UT2STUFF+616
UT2CCWS  EQU   UT2STUFF+320
UT2IOB   EQU   UT2STUFF+280
UT2ECB   EQU   UT2STUFF+276
UT2JFCB  EQU   UT2STUFF+100
@NM00021 EQU   UT2FLAG
UT2VCERR EQU   UT2FLAG
UT2VWERR EQU   UT2FLAG
UT2VOERR EQU   UT2FLAG
UT2VUPDT EQU   UT2FLAG
UT1DDN   EQU   UT1STUFF+616
UT1CCWS  EQU   UT1STUFF+320
UT1IOB   EQU   UT1STUFF+280
UT1ECB   EQU   UT1STUFF+276
UT1JFCB  EQU   UT1STUFF+100
@NM00020 EQU   UT1FLAG
UT1VWERR EQU   UT1FLAG
UT1VOERR EQU   UT1FLAG
UT1VUPDT EQU   UT1FLAG
UT1VREC  EQU   INADDR+2
UT2VREC  EQU   OUTADDR+2
UT2TABID EQU   UT2VCHR
ADDRBUF2 EQU   BUILDGEN+4
ADDRBUF1 EQU   BUILDGEN
B05REC   EQU   B05ADDR+2
B05HEAD  EQU   B05ADDR+1
B05CYL   EQU   B05ADDR
B05TBLID EQU   COMB05+8
B06REC   EQU   B06ADDR+2
B06HEAD  EQU   B06ADDR+1
B06CYL   EQU   B06ADDR
B06TBLID EQU   COMB06+8
ALTCH3   EQU   ALTPATH3+2
ALTCI3   EQU   ALTPATH3+1
ALTDS3   EQU   ALTPATH3
ALTCH2   EQU   ALTPATH2+2
ALTCI2   EQU   ALTPATH2+1
ALTDS2   EQU   ALTPATH2
ALTCH1   EQU   ALTPATH1+2
ALTCI1   EQU   ALTPATH1+1
ALTDS1   EQU   ALTPATH1
INDEXRSG EQU   CONFGDEV+1
ICEBERG  EQU   USEFLAGS
ITISALTP EQU   USEFLAGS
USECONVR EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
USESPEC  EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
CPUREFNO EQU   RSGUCB+6
RSGCPUID EQU   RSGUCB+1
@NM00019 EQU   RSGFLAGS
CISPEC   EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
@NM00018 EQU   @NM00017
PRNTONLY EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
CPUSPEC  EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00013 EQU   CPUFLAG1
TOMPCPU  EQU   CPU+5
CPUID    EQU   CPU
CPUNUM   EQU   CPUASSOC
SPNRSGNO EQU   PHYSTYPE+1
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSICEB EQU   MERLICEB
PHYSMERL EQU   MERLICEB
PHYSDS2  EQU   DSPAIRS
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
TODS2    EQU   RSGTODS+1
TODS1    EQU   RSGTODS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
SAVE14   EQU   GENIO+12
EXLST    EQU   GENIO+8
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00006 EQU   MESSAGES+19
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00005 EQU   SPECLMSG
PRNTCARD EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
WARNING  EQU   MESSAGES+4
MSGNO    EQU   MESSAGES+2
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00003 EQU   READER+206
SCANLEN  EQU   READER+204
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
INBUF    EQU   READER+100
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
LASTPARM EQU   READFLAG
ENDSCAN  EQU   READFLAG
PARMBIT  EQU   READFLAG
KEYBIT   EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00036 EQU   @EL00001
@RT00044 EQU   @EL00002
@RF00073 EQU   @EL00004
@ENDDATA EQU   *
         END   ICGDSB15,(C'PLS1331',0603,76337)
