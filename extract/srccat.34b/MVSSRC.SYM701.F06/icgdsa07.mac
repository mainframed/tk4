         TITLE 'ICGDSA07 MSC TABLE CREATE, CHECK REAL INTERFACES       *
                        '
ICGDSA07 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICGDSA07  77.354'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0029
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - ICGDSA07 (MAINLINE)                     @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - EXAMINE EACH DEVICE ADDRESS SPECIFIED IN      @Y30LB12*/
*/*            AN UPPERCON CONTROL STATEMENT TO DETERMINE    @Y30LB12*/
*/*            IF THE ADDRESS WAS SPECIFIED AS 'REAL',       @Y30LB12*/
*/*            OR 'CONVREAL' AND CALL THE                    @Y30LB12*/
*/*            PROPER ROUTINE TO HANDLE EACH OF THESE        @Y30LB12*/
*/*            CASES.                                        @Y30LB12*/
*/*                                                          @Y30LB12*/
*/*            THE TABLE CONFGCON IS STRUCTURED BY DEVICE    @Y30LB12*/
*/*            (64) WITHIN DATA STAGER/CHANNEL INTERFACE     @Y30LB12*/
*/*            (16X3=48).  ONLY THE FIRST 32 ADDRESSES       @Y30LB12*/
*/*            ON EACH INTERFACE CAN BE REAL - THEREFORE     @Y30LB12*/
*/*            THE ADDRESSES 20-3F ARE NOT CHECKED.          @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0029
*   A07FLAGS='00'X;                                                0029
         MVI   A07FLAGS,X'00'                                      0029
*   DO DSINDEX=1 TO MAXSACI;        /* 48 INTERFACES         @YD00113*/
         LA    @10,1                                               0030
         ST    @10,DSINDEX                                         0030
@DL00030 DS    0H                                                  0031
*     DO DEVINDEX=1 TO MAXDEV;      /* 32 REAL DEVICES       @YD00113*/
*                                                                  0031
         LA    @10,1                                               0031
         ST    @10,DEVINDEX                                        0031
@DL00031 DS    0H                                                  0032
*       /*************************************************************/
*       /*                                                           */
*       /* ***********************************************   @YD00113*/
*       /* IF ADDRESS USED FOR ANY PURPOSE (VISRTAL,         @YD00113*/
*       /* SHARED VIRTUAL, REAL, CONVERTIBLE, OR             @YD00113*/
*       /* ALTERNATE PATH), THE FLAG USESPEC IS SET ON.      @YD00113*/
*       /* ***********************************************   @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0032
*       IF USESPEC(DSINDEX,DEVINDEX)='1'B/* ADDR USED        @Y30LB12*/
*         THEN                      /*                       @Y30LB12*/
         L     @05,DSINDEX                                         0032
         LR    @15,@05                                             0032
         SLA   @15,6                                               0032
         ALR   @15,@10                                             0032
         MH    @15,@CH00255                                        0032
         L     @14,COMPTR2(,R4)                                    0032
         ST    @15,@TF00001                                        0032
         ALR   @15,@14                                             0032
         AL    @15,@CF00540                                        0032
         TM    USESPEC-464(@15),B'10000000'                        0032
         BNO   @RF00032                                            0032
*         DO;                       /*                       @Y30LB12*/
*                                                                  0033
*           /*********************************************************/
*           /*                                                       */
*           /* *****************************************     @YD00113*/
*           /* IF THE USE OF THE ADDRESS IS SPECIFIED        @YD00113*/
*           /* AS 'REAL', CHECK THAT THE PHYSICAL            @YD00113*/
*           /* DEVICE IS PRESENT IN THE CONFIGURATION,       @YD00113*/
*           /* AND, IF THE DEVICE IS PHYSICALLY              @YD00113*/
*           /* PRESENT, FURTHER CHECK THAT THE DEVICE        @YD00113*/
*           /* IS SPECIFIED AS REAL ON THE DASD CONTROL      @YD00113*/
*           /* STATEMENT.                                    @YD00113*/
*           /* *****************************************     @YD00113*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0034
*           IF USEREAL(DSINDEX,DEVINDEX)='1'B&/* REAL        @Y30LB12*/
*               (BINTIND='0'B×(DSINDEX>6×(DEVINDEX^=1&DEVINDEX^=2&/*
*                                                            @OZ28368*/
*               DEVINDEX^=9&DEVINDEX^=10)))/* CHECK FOR TABPTH     0034
*                                                            @OZ28368*/
*             THEN                  /*                       @Y30LB12*/
         AL    @14,@TF00001                                        0034
         AL    @14,@CF00540                                        0034
         TM    USEREAL-464(@14),B'00010000'                        0034
         BNO   @RF00034                                            0034
         TM    BINTIND(R4),B'00000100'                             0034
         BZ    @RT00034                                            0034
         CH    @05,@CH00227                                        0034
         BH    @RT00034                                            0034
         CH    @10,@CH00042                                        0034
         BE    @RF00034                                            0034
         CH    @10,@CH00050                                        0034
         BE    @RF00034                                            0034
         CH    @10,@CH00112                                        0034
         BE    @RF00034                                            0034
         CH    @10,@CH00480                                        0034
         BE    @RF00034                                            0034
@RT00034 DS    0H                                                  0035
*             DO;                   /*                       @Y30LB12*/
*               CALL CHKTHERE;      /* PHYSICAL SPINDLE      @Y30LB12*/
         BAL   @14,CHKTHERE                                        0036
*               IF ERROR1='0'B      /*                       @YD00113*/
*                 THEN              /*                       @YD00113*/
         TM    ERROR1,B'01000000'                                  0037
         BNZ   @RF00037                                            0037
*                 DO;               /*                       @OZ09548*/
*                   CALL CHKREAL;   /* DEFINED AS REAL       @YD00113*/
         BAL   @14,CHKREAL                                         0039
*                   CALL CHECKUSE;  /* MULTIPLE USAGES       @OZ09548*/
         BAL   @14,CHECKUSE                                        0040
*                 END;              /*                       @OZ09548*/
*               ELSE                                               0042
*                 ;                 /*                       @YD00113*/
@RF00037 DS    0H                                                  0043
*             END;                  /*                       @YD00113*/
*           ELSE                                                   0044
*             ;                     /*                       @YD00113*/
*                                                                  0044
@RF00034 DS    0H                                                  0045
*           /*********************************************************/
*           /*                                                       */
*           /* *****************************************     @YD00113*/
*           /* IF THE USE OF THE ADDRESS IS SPECIFIED        @YD00113*/
*           /* AS CONVERTIBLE, CHECK THAT THE PHYSICAL       @YD00113*/
*           /* DEVICE IS PRESENT IN THE CONFIGURATION,       @YD00113*/
*           /* AND, IF THE DEVICE IS PHYSICALLY              @YD00113*/
*           /* PRESENT, FURTHER CHECK THAT THE DEVICE        @YD00113*/
*           /* IS SPECIFIED WITH SSID ON THE DASD            @YD00113*/
*           /* CONTROL STATEMENT.                            @YD00113*/
*           /* *****************************************     @YD00113*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0045
*           IF USECONVR(DSINDEX,DEVINDEX)='1'B/*             @YD00113*/
*             THEN                  /*                       @YD00113*/
         L     @10,DSINDEX                                         0045
         SLA   @10,6                                               0045
         AL    @10,DEVINDEX                                        0045
         MH    @10,@CH00255                                        0045
         L     @05,COMPTR2(,R4)                                    0045
         ALR   @05,@10                                             0045
         AL    @05,@CF00540                                        0045
         TM    USECONVR-464(@05),B'00000100'                       0045
         BNO   @RF00045                                            0045
*             DO;                   /*                       @YD00113*/
*               CALL CHKTHERE;      /* PHYSICAL SPINDLE      @YD00113*/
         BAL   @14,CHKTHERE                                        0047
*               IF ERROR1='0'B      /*                       @YD00113*/
*                 THEN              /*                       @YD00113*/
         TM    ERROR1,B'01000000'                                  0048
         BNZ   @RF00048                                            0048
*                 DO;               /*                       @OZ09548*/
*                   CALL CHKSSID;   /* DEFINED BY SSID       @YD00113*/
         BAL   @14,CHKSSID                                         0050
*                   CALL CHECKUSE;  /* MULTIPLE USAGES       @OZ09548*/
         BAL   @14,CHECKUSE                                        0051
*                 END;              /*                       @OZ09548*/
*               ELSE                                               0053
*                 ;                 /*                       @YD00113*/
@RF00048 DS    0H                                                  0054
*             END;                  /*                       @YD00113*/
*           ELSE                                                   0055
*             ;                     /*                       @YD00113*/
@RF00045 DS    0H                                                  0056
*         END;                      /*                       @YD00113*/
*       ELSE                                                       0057
*         ;                         /*                       @YD00113*/
@RF00032 DS    0H                                                  0058
*     END;                          /* DO DEVINDEX           @YD00113*/
         LA    @10,1                                               0058
         AL    @10,DEVINDEX                                        0058
         ST    @10,DEVINDEX                                        0058
         CH    @10,@CH00254                                        0058
         BNH   @DL00031                                            0058
*   END;                            /* DO DSINDEX            @YD00113*/
         LA    @10,1                                               0059
         AL    @10,DSINDEX                                         0059
         ST    @10,DSINDEX                                         0059
         CH    @10,@CH00244                                        0059
         BNH   @DL00030                                            0059
*   RETURN;                         /* RET. TO ICGDSANL      @YD00113*/
@EL00001 L     @13,4(,@13)                                         0060
@EF00001 L     @00,@SIZDATD                                        0060
         LR    @01,@11                                             0060
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0060
         BR    @14                                                 0060
*                                                                  0061
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CHKTHERE                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - DEVELOP THE INDICES NECESSARY TO LOCATE THE   @Y30LB12*/
*/*            CORRESPONDING SPINDLE IN THE TABLE PHYSTYPE.  @Y30LB12*/
*/*            IF THE SPINDLE IS A 3330 MODEL 11, SET THE    @Y30LB12*/
*/*            BIT 'ICEBERG' IN CONFGUCB.  IF THE SPINDLE IS @Y30LB12*/
*/*            NOT SPECIFIED IN A SPINDLES STATEMENT, WRITE  @Y30LB12*/
*/*            MESSAGE ICG316I.                              @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0061
*CHKTHERE:                                                         0061
*   PROCEDURE;                      /*                       @Y30LB12*/
CHKTHERE STM   @14,@12,@SA00002                                    0061
*   ERROR1='0'B;                    /* CONTROL FLAG          @Y30LB12*/
         NI    ERROR1,B'10111111'                                  0062
*   I1=DSINDEX+2;                   /* DSINDEX 1 TO 48       @Y30LB12*/
         L     @10,DSINDEX                                         0063
         LA    @05,2                                               0063
         ALR   @05,@10                                             0063
         ST    @05,I1                                              0063
*   I1=I1/3;                        /* I IS 1 TO 16          @Y30LB12*/
         LR    @00,@05                                             0064
         SRDA  @00,32                                              0064
         D     @00,@CF00048                                        0064
         ST    @01,I1                                              0064
*   WORKI2I3=I2I3(DEVINDEX);        /* DEVINDEX 1 TO 32      @Y30LB12*/
         L     @05,DEVINDEX                                        0065
         ALR   @05,@05                                             0065
         LA    @15,I2I3-2(@05)                                     0065
         MVC   WORKI2I3(2),0(@15)                                  0065
*   I2=WORKI2I3(1);                 /* DASD CTL 1 TO 4       @Y30LB12*/
         SLR   @00,@00                                             0066
         IC    @00,WORKI2I3                                        0066
         ST    @00,I2                                              0066
*   I3=WORKI2I3(2);                 /* DEVICE IS 1 TO 8      @Y30LB12*/
         SLR   @15,@15                                             0067
         IC    @15,WORKI2I3+1                                      0067
         ST    @15,I3                                              0067
*   IF MERLICEB(I1,I2,I3)='00'B     /* NO PHYS DEVICE        @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         SLA   @01,2                                               0068
         ALR   @01,@00                                             0068
         SLA   @01,3                                               0068
         ALR   @01,@15                                             0068
         ALR   @01,@01                                             0068
         ALR   @01,R4                                              0068
         TM    MERLICEB-82(@01),B'11000000'                        0068
         BNZ   @RF00068                                            0068
*     DO;                           /*                       @Y30LB12*/
*                                                                  0069
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00113*/
*       /* ICG316I FOR SA X INT X DEV XX, DEVICE             @Y30LB12*/
*       /* IS NOT PRESENT IN CONFIGURATION                   @Y30LB12*/
*       /* *****************************************         @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0070
*       OUTBUF2(1:67)=ICGDS316;     /*                       @YM32156*/
         MVC   OUTBUF2(67,R4),ICGDS316                             0070
*       WORKDSCI=DSLOKUP(DSINDEX);  /*                       @Y30LB12*/
         ALR   @10,@10                                             0071
         LA    @01,DSLOKUP-2(@10)                                  0071
         MVC   WORKDSCI(2),0(@01)                                  0071
*       OUTBUF2(17)=WORKDSCI(1);    /*                       @Y30LB12*/
         MVC   OUTBUF2+16(1,R4),WORKDSCI                           0072
*       OUTBUF2(23)=WORKDSCI(2);    /*                       @Y30LB12*/
         MVC   OUTBUF2+22(1,R4),WORKDSCI+1                         0073
*       OUTBUF2(29:30)=DEVLOKUP(DEVINDEX);/*                 @Y30LB12*/
         LA    @10,DEVLOKUP-2(@05)                                 0074
         MVC   OUTBUF2+28(2,R4),0(@10)                             0074
*       CALL PUTIT1;                /*                       @Y30LB12*/
         BAL   @14,PUTIT1                                          0075
*       ERROR1='1'B;                /* SET ERROR FLAG        @Y30LB12*/
         OI    ERROR1,B'01000000'                                  0076
*     END;                          /*                       @Y30LB12*/
*   ELSE                            /*                       @Y30LB12*/
*     IF MERLICEB(I1,I2,I3)=PHYSFICE/* IF 3330-11            @X50RSPC*/
*       THEN                        /*                       @Y30LB12*/
         B     @RC00068                                            0078
@RF00068 L     @10,I1                                              0078
         SLA   @10,2                                               0078
         AL    @10,I2                                              0078
         SLA   @10,3                                               0078
         AL    @10,I3                                              0078
         ALR   @10,@10                                             0078
         ALR   @10,R4                                              0078
         TM    MERLICEB-82(@10),B'01000000'                        0078
         BNO   @RF00078                                            0078
         TM    MERLICEB-82(@10),B'10000000'                        0078
         BNZ   @RF00078                                            0078
*       ICEBERG(DSINDEX,DEVINDEX)='1'B;/*                    @Y30LB12*/
         L     @10,DSINDEX                                         0079
         SLA   @10,6                                               0079
         AL    @10,DEVINDEX                                        0079
         MH    @10,@CH00255                                        0079
         L     @05,COMPTR2(,R4)                                    0079
         ALR   @05,@10                                             0079
         AL    @05,@CF00540                                        0079
         OI    ICEBERG-464(@05),B'00000001'                        0079
*     ELSE                                                         0080
*       ;                           /*                       @Y30LB12*/
@RF00078 DS    0H                                                  0081
*   END CHKTHERE;                   /* RET. TO MAINLINE      @Y30LB12*/
@EL00002 DS    0H                                                  0081
@EF00002 DS    0H                                                  0081
@ER00002 LM    @14,@12,@SA00002                                    0081
         BR    @14                                                 0081
*                                                                  0082
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CHKREAL                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CHECK TO BE SURE THAT THE SPINDLE IN THE      @Y30LB12*/
*/*            SPINDLES STATEMENT WAS DESCRIBED AS REAL      @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0082
*CHKREAL:                                                          0082
*   PROCEDURE;                      /*                       @YD00113*/
CHKREAL  STM   @14,@12,@SA00003                                    0082
*   IF PHYSREAL(I1,I2,I3)^='1'B     /*                       @YD00113*/
*     THEN                          /*                       @YD00113*/
         L     @10,I1                                              0083
         SLA   @10,2                                               0083
         AL    @10,I2                                              0083
         SLA   @10,3                                               0083
         AL    @10,I3                                              0083
         ALR   @10,@10                                             0083
         ALR   @10,R4                                              0083
         TM    PHYSREAL-82(@10),B'00100000'                        0083
         BO    @RF00083                                            0083
*     DO;                           /*                       @YD00113*/
*                                                                  0084
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00113*/
*       /* ICG317I FOR SA X INT X DEV XX, DEVICE             @Y30LB12*/
*       /* NOT DEFINED AS REAL                               @Y30LB12*/
*       /* *****************************************         @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0085
*       OUTBUF2(1:58)=ICGDS317;     /*                       @YM32156*/
         MVC   OUTBUF2(58,R4),ICGDS317                             0085
*       WORKDSCI=DSLOKUP(DSINDEX);  /*                       @YD00113*/
         L     @10,DSINDEX                                         0086
         ALR   @10,@10                                             0086
         LA    @05,DSLOKUP-2(@10)                                  0086
         MVC   WORKDSCI(2),0(@05)                                  0086
*       OUTBUF2(17)=WORKDSCI(1);    /*                       @YD00113*/
         MVC   OUTBUF2+16(1,R4),WORKDSCI                           0087
*       OUTBUF2(23)=WORKDSCI(2);    /*                       @YD00113*/
         MVC   OUTBUF2+22(1,R4),WORKDSCI+1                         0088
*       OUTBUF2(29:30)=DEVLOKUP(DEVINDEX);/*                 @YD00113*/
         L     @10,DEVINDEX                                        0089
         ALR   @10,@10                                             0089
         LA    @05,DEVLOKUP-2(@10)                                 0089
         MVC   OUTBUF2+28(2,R4),0(@05)                             0089
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @YD00113*/
         BAL   @14,PUTIT1                                          0090
*     END;                          /*                       @YD00113*/
*   ELSE                                                           0092
*     ;                             /*                       @YD00113*/
@RF00083 DS    0H                                                  0093
*   END CHKREAL;                    /* RET. TO MAINLINE      @YD00113*/
@EL00003 DS    0H                                                  0093
@EF00003 DS    0H                                                  0093
@ER00003 LM    @14,@12,@SA00003                                    0093
         BR    @14                                                 0093
*                                                                  0094
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - CHKSSID                                 @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CHECK TO BE SURE THAT THE SPINDLE IN THE      @Y30LB12*/
*/*            SPINDLES STATEMENT WAS DESCRIBED AS HAVING    @Y30LB12*/
*/*            A SUB-SYSTEM IDENTIFICATION (SSID), AND       @Y30LB12*/
*/*            WRITE ERROR MESSAGE IF NO SSID.  OTHERWISE    @Y30LB12*/
*/*            CALL UPDATPAB.                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0094
*CHKSSID:                                                          0094
*   PROCEDURE;                      /*                       @Y30LB12*/
CHKSSID  STM   @14,@12,@SA00004                                    0094
*   IF PHYSSSID(I1,I2,I3)^='1'B     /*                       @Y30LB12*/
*     THEN                          /*                       @Y30LB12*/
         L     @10,I1                                              0095
         SLA   @10,2                                               0095
         AL    @10,I2                                              0095
         SLA   @10,3                                               0095
         AL    @10,I3                                              0095
         ALR   @10,@10                                             0095
         ALR   @10,R4                                              0095
         TM    PHYSSSID-82(@10),B'00010000'                        0095
         BO    @RF00095                                            0095
*     DO;                           /*                       @Y30LB12*/
*                                                                  0096
*       /*************************************************************/
*       /*                                                           */
*       /* *****************************************         @YD00113*/
*       /* ICG318I FOR SA X INT X DEV XX, DEVICE             @Y30LB12*/
*       /* NOT DEFINED WITH SSID                             @Y30LB12*/
*       /* *****************************************         @YD00113*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0097
*       OUTBUF2(1:60)=ICGDS318;     /*                       @YM32156*/
         MVC   OUTBUF2(60,R4),ICGDS318                             0097
*       WORKDSCI=DSLOKUP(DSINDEX);  /*                       @YD00113*/
         L     @10,DSINDEX                                         0098
         ALR   @10,@10                                             0098
         LA    @05,DSLOKUP-2(@10)                                  0098
         MVC   WORKDSCI(2),0(@05)                                  0098
*       OUTBUF2(17)=WORKDSCI(1);    /*                       @YD00113*/
         MVC   OUTBUF2+16(1,R4),WORKDSCI                           0099
*       OUTBUF2(23)=WORKDSCI(2);    /*                       @YD00113*/
         MVC   OUTBUF2+22(1,R4),WORKDSCI+1                         0100
*       OUTBUF2(29:30)=DEVLOKUP(DEVINDEX);/*                 @Y30LB12*/
         L     @10,DEVINDEX                                        0101
         ALR   @10,@10                                             0101
         LA    @05,DEVLOKUP-2(@10)                                 0101
         MVC   OUTBUF2+28(2,R4),0(@05)                             0101
*       CALL PUTIT1;                /* TO MESSAGE WRITER     @YD00113*/
         BAL   @14,PUTIT1                                          0102
*     END;                          /*                       @YD00113*/
*   ELSE                            /*                       @YD00113*/
*     CALL UPDATPAB;                /* UPDATE SDG PAB        @YD00113*/
         B     @RC00095                                            0104
@RF00095 BAL   @14,UPDATPAB                                        0104
*   END CHKSSID;                    /* RET. TO MAINLINE      @YD00113*/
@EL00004 DS    0H                                                  0105
@EF00004 DS    0H                                                  0105
@ER00004 LM    @14,@12,@SA00004                                    0105
         BR    @14                                                 0105
*                                                                  0106
*/********************************************************** @OZ09548*/
*/*                                                          @OZ09548*/
*/* PROCEDURE NAME - CHECKUSE                                @OZ09548*/
*/*                                                          @OZ09548*/
*/* FUNCTION - DETERMINE IF A REAL OR CONVERTIBLE DRIVE HAS  @OZ09548*/
*/*            MORE THAN ONE ADDRESS (THAT IS NOT AN         @OZ09548*/
*/*            ALTERNATE PATH) TO A SINGLE CPU.  IF TWO      @OZ09548*/
*/*            PATHS TO THE SAME CPU EXIST, WRITE WARNING    @OZ09548*/
*/*            MESSAGE ICG350I.                              @OZ09548*/
*/*                                                          @OZ09548*/
*/********************************************************** @OZ09548*/
*                                                                  0106
*CHECKUSE:                                                         0106
*   PROCEDURE;                      /*                       @OZ09548*/
CHECKUSE STM   @14,@12,@SA00005                                    0106
*   OWE350I='0'B;                   /*                       @OZ09548*/
*                                                                  0107
         NI    OWE350I,B'11011111'                                 0107
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @OZ09548*/
*   /* SET UP WORKING INDEX 'USEI' EQUVALENT TO THE          @OZ09548*/
*   /* STAGING ADAPTER THROUGH WHICH THE CURRENT             @OZ09548*/
*   /* CHANNEL INTERFACE IS SPECIFIED.                       @OZ09548*/
*   /* ***********************************************       @OZ09548*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0108
*   USEI=(DSINDEX-1)/3;             /*                       @OZ09548*/
*                                                                  0108
         L     @00,DSINDEX                                         0108
         BCTR  @00,0                                               0108
         SRDA  @00,32                                              0108
         D     @00,@CF00048                                        0108
         LR    USEI,@01                                            0108
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @OZ09548*/
*   /* CHECK THE OTHER TWO CHANNEL INTERFACES FOR            @OZ09548*/
*   /* THIS STAGING ADAPTER (BUT NOT THE ONE                 @OZ09548*/
*   /* CURRENTLY BEING PROCESSED) FOR A REAL OR              @OZ09548*/
*   /* CONVERTIBLE DEVICE.                                   @OZ09548*/
*   /* ***********************************************       @OZ09548*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0109
*   DO I=1 TO 3;                    /*                       @OZ09548*/
         LA    I,1                                                 0109
@DL00109 DS    0H                                                  0110
*     IF((USEI*3)+I)^=DSINDEX       /*                       @OZ09548*/
*       THEN                        /*                       @OZ09548*/
         L     @10,DSINDEX                                         0110
         LR    @05,USEI                                            0110
         MH    @05,@CH00048                                        0110
         ALR   @05,I                                               0110
         CR    @05,@10                                             0110
         BE    @RF00110                                            0110
*       DO;                         /*                       @OZ09548*/
*         IF USEREAL((USEI*3)+I,DEVINDEX)='1'B/*             @OZ09548*/
*             ×USECONVR((USEI*3)+I,DEVINDEX)='1'B/*          @OZ09548*/
*           THEN                    /*                       @OZ09548*/
*                                                                  0112
         LR    @15,@05                                             0112
         SLA   @15,6                                               0112
         AL    @15,DEVINDEX                                        0112
         MH    @15,@CH00255                                        0112
         L     @14,COMPTR2(,R4)                                    0112
         ALR   @15,@14                                             0112
         AL    @15,@CF00540                                        0112
         TM    USEREAL-464(@15),B'00010100'                        0112
         BZ    @RF00112                                            0112
*           /*********************************************************/
*           /*                                                       */
*           /* *****************************************     @OZ09548*/
*           /* IF THE REAL OR CONVERTIBLE DEVICE ON          @OZ09548*/
*           /* THE OTHER INTERFACE USES THE SAME CPU AS      @OZ09548*/
*           /* THE CPU ON THE CURRENT INTERFACE, WRITE       @OZ09548*/
*           /* WARNING MESSAGE ICG350I.                      @OZ09548*/
*           /* *****************************************     @OZ09548*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0113
*           IF CPUREFNO((USEI*3)+I)=CPUREFNO(DSINDEX)/*      @OZ09548*/
*             THEN                  /*                       @OZ09548*/
         LA    @15,9                                               0113
         LR    @01,@05                                             0113
         MR    @00,@15                                             0113
         LR    @07,@10                                             0113
         MR    @06,@15                                             0113
         ALR   @01,@14                                             0113
         ALR   @14,@07                                             0113
         CLC   CPUREFNO-9(1,@01),CPUREFNO-9(@14)                   0113
         BNE   @RF00113                                            0113
*             OWE350I='1'B;         /*                       @OZ09548*/
         OI    OWE350I,B'00100000'                                 0114
*           ELSE                                                   0115
*             ;                     /*                       @OZ09548*/
@RF00113 DS    0H                                                  0116
*       END;                        /*                       @OZ09548*/
@RF00112 DS    0H                                                  0117
*   END;                            /*                       @OZ09548*/
*                                                                  0117
@RF00110 AH    I,@CH00042                                          0117
         CH    I,@CH00048                                          0117
         BNH   @DL00109                                            0117
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @OZ09548*/
*   /* IF TWO STAGING ADAPTERS HAVE A PATH TO THE            @OZ09548*/
*   /* SAME REAL OR CONVERTIBLE DEVICE, DETERMINE            @OZ09548*/
*   /* THE IDENTITY OF THE SECOND STAGING ADAPTER.           @OZ09548*/
*   /* THE SECOND STAGING ADAPTER IS THE STAGING             @OZ09548*/
*   /* ADAPTER FOR THIS SPECIFIC 3333 CONTROL UNIT,          @OZ09548*/
*   /* AND MAY CHANGE FROM CONTROL UNIT TO CONTROL           @OZ09548*/
*   /* UNIT.                                                 @OZ09548*/
*   /* ***********************************************       @OZ09548*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0118
*   IF PHYSDS2(I1,I2)^='FF'X        /*                       @OZ09548*/
*     THEN                          /*                       @OZ09548*/
         L     @10,I1                                              0118
         SLA   @10,2                                               0118
         AL    @10,I2                                              0118
         ST    @10,@TF00001                                        0118
         ALR   @10,R4                                              0118
         CLI   PHYSDS2-5(@10),X'FF'                                0118
         BE    @RF00118                                            0118
*     DO;                           /*                       @OZ09548*/
*       USEI=PHYSDS2(I1,I2);        /*                       @OZ09548*/
         L     @10,@TF00001                                        0120
         SLR   USEI,USEI                                           0120
         IC    USEI,PHYSDS2-5(@10,R4)                              0120
*       DO I=1 TO 3;                /*                       @OZ09548*/
         LA    I,1                                                 0121
@DL00121 DS    0H                                                  0122
*         IF USEREAL((USEI*3)+I,DEVINDEX)='1'B/*             @OZ09548*/
*             ×USECONVR((USEI*3)+I,DEVINDEX)='1'B/*          @OZ09548*/
*           THEN                    /*                       @OZ09548*/
*                                                                  0122
         LR    @10,USEI                                            0122
         MH    @10,@CH00048                                        0122
         ALR   @10,I                                               0122
         LR    @05,@10                                             0122
         SLA   @05,6                                               0122
         AL    @05,DEVINDEX                                        0122
         MH    @05,@CH00255                                        0122
         L     @15,COMPTR2(,R4)                                    0122
         ALR   @05,@15                                             0122
         AL    @05,@CF00540                                        0122
         TM    USEREAL-464(@05),B'00010100'                        0122
         BZ    @RF00122                                            0122
*           /*********************************************************/
*           /*                                                       */
*           /* *****************************************     @OZ09548*/
*           /* IF THE REAL OR CONVERTIBLE DEVICE ON          @OZ09548*/
*           /* THE OTHER INTERFACE USES THE SAME CPU AS      @OZ09548*/
*           /* THE CPU ON THE CURRENT INTERFACE, WRITE       @OZ09548*/
*           /* WARNING MESSAGE ICG350I.                      @OZ09548*/
*           /* *****************************************     @OZ09548*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0123
*           IF CPUREFNO((USEI*3)+I)=CPUREFNO(DSINDEX)/*      @OZ09548*/
*             THEN                  /*                       @OZ09548*/
         LA    @05,9                                               0123
         LR    @01,@10                                             0123
         MR    @00,@05                                             0123
         LR    @07,@05                                             0123
         M     @06,DSINDEX                                         0123
         ALR   @01,@15                                             0123
         ALR   @15,@07                                             0123
         CLC   CPUREFNO-9(1,@01),CPUREFNO-9(@15)                   0123
         BNE   @RF00123                                            0123
*             OWE350I='1'B;         /*                       @OZ09548*/
         OI    OWE350I,B'00100000'                                 0124
*           ELSE                                                   0125
*             ;                     /*                       @OZ09548*/
@RF00123 DS    0H                                                  0126
*       END;                        /*                       @OZ09548*/
@RF00122 AH    I,@CH00042                                          0126
         CH    I,@CH00048                                          0126
         BNH   @DL00121                                            0126
*     END;                          /*                       @OZ09548*/
*   IF OWE350I='1'B                 /*                       @OZ09548*/
*     THEN                          /*                       @OZ09548*/
@RF00118 TM    OWE350I,B'00100000'                                 0128
         BNO   @RF00128                                            0128
*     CALL MSG350I;                 /*                       @OZ09548*/
         BAL   @14,MSG350I                                         0129
*   END CHECKUSE;                   /*                       @OZ09548*/
@EL00005 DS    0H                                                  0130
@EF00005 DS    0H                                                  0130
@ER00005 LM    @14,@12,@SA00005                                    0130
         BR    @14                                                 0130
*                                                                  0131
*/********************************************************** @OZ09548*/
*/*                                                          @OZ09548*/
*/* PROCEDURE NAME - MSG350I                                 @OZ09548*/
*/*                                                          @OZ09548*/
*/* FUNCTION - TRANSLATE IDENTIFYING FIELDS TO PRINTABLE     @OZ09548*/
*/*            AND PRINT MESSAGE ICG350I FOR SA X INT X      @OZ09548*/
*/*            DEV XX, MORE THAN ONE REAL PATH FROM CPU      @OZ09548*/
*/*            XXXXXXXXXX.                                   @OZ09548*/
*/*                                                          @OZ09548*/
*/********************************************************** @OZ09548*/
*                                                                  0131
*MSG350I:                                                          0131
*   PROCEDURE;                      /*                       @OZ09548*/
MSG350I  STM   @14,@12,@SA00006                                    0131
*   OUTBUF2(1:76)=ICGDS350;         /*                       @OZ09548*/
         MVI   OUTBUF2+75(R4),C' '                                 0132
         MVC   OUTBUF2(75,R4),ICGDS350                             0132
*   WORKDSCI=DSLOKUP(DSINDEX);      /*                       @OZ09548*/
         L     @10,DSINDEX                                         0133
         LR    @05,@10                                             0133
         ALR   @05,@05                                             0133
         LA    @01,DSLOKUP-2(@05)                                  0133
         MVC   WORKDSCI(2),0(@01)                                  0133
*   OUTBUF2(17)=WORKDSCI(1);        /*                       @OZ09548*/
         MVC   OUTBUF2+16(1,R4),WORKDSCI                           0134
*   OUTBUF2(23)=WORKDSCI(2);        /*                       @OZ09548*/
         MVC   OUTBUF2+22(1,R4),WORKDSCI+1                         0135
*   OUTBUF2(29:30)=DEVLOKUP(DEVINDEX);/*                     @OZ09548*/
         L     @05,DEVINDEX                                        0136
         ALR   @05,@05                                             0136
         LA    @01,DEVLOKUP-2(@05)                                 0136
         MVC   OUTBUF2+28(2,R4),0(@01)                             0136
*   PACKED(1:5)=RSGCPUID(DSINDEX);  /*                       @OZ09548*/
         MH    @10,@CH00112                                        0137
         L     @05,COMPTR2(,R4)                                    0137
         ALR   @05,@10                                             0137
         MVC   PACKED(5),RSGCPUID-9(@05)                           0137
*   PACKED(6)='0F'X;                /*                       @OZ09548*/
         MVI   PACKED+5,X'0F'                                      0138
*   GEN(UNPK  UNPACKED(11),PACKED(6));/*                     @OZ09548*/
         UNPK  UNPACKED(11),PACKED(6)
*   OUTBUF2(66:75)=UNPACKED(1:10);  /*                       @OZ09548*/
         MVC   OUTBUF2+65(10,R4),UNPACKED                          0140
*   CALL PUTIT3;                    /*                       @OZ09548*/
         BAL   @14,PUTIT3                                          0141
*   END MSG350I;                                                   0142
@EL00006 DS    0H                                                  0142
@EF00006 DS    0H                                                  0142
@ER00006 LM    @14,@12,@SA00006                                    0142
         BR    @14                                                 0142
*                                                                  0143
*/********************************************************** @YD00113*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - UPDATPAB                                @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - UPDATE THE DEVICE SEGMENT OF THE PAGE         @Y30LB12*/
*/*            AVAILABILITY BLOCK OF THE REAL SPINDLE GROUP  @Y30LB12*/
*/*            TABLE WITH THE INFORMATION NECESSARY TO       @Y30LB12*/
*/*            THE 'PABREAL' BYTE.  THE LOWER-NUMBERED DATA  @Y30LB12*/
*/*            STAGER IS ARBITRARILY CALLED DS1 AND THE      @Y30LB12*/
*/*            HIGHER DATA STAGER IS DS2. THE BIT THAT       @Y30LB12*/
*/*            INDICATES THE PROPER INTERFACE IS SET IN      @Y30LB12*/
*/*            PABREAL.                                      @YD00113*/
*/*                                                          @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0143
*UPDATPAB:                                                         0143
*   PROCEDURE;                      /*                       @Y30LB12*/
*                                                                  0143
UPDATPAB STM   @14,@12,@SA00007                                    0143
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* DEVELOP THE FIRST (SDG) INDEX INTO PABTABLE           @YD00113*/
*   /* BY EXTRACTING FROM THE STRUCTURE PHYSTYPE             @YD00113*/
*   /* THE SDG NUMBER SPECIFIED IN THE DASD CONTROL          @YD00113*/
*   /* STATEMENT. ADD 1 TO OBTAIN INDEX VALUE.               @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0144
*   I4=SPNRSGNO(I1,I2,I3);          /* INDEX TO PABTABLE     @Y30LB12*/
         L     @10,I1                                              0144
         SLA   @10,2                                               0144
         AL    @10,I2                                              0144
         SLA   @10,3                                               0144
         AL    @10,I3                                              0144
         ALR   @10,@10                                             0144
         SLR   @05,@05                                             0144
         IC    @05,SPNRSGNO-82(@10,R4)                             0144
         ST    @05,I4                                              0144
*   I4=I4+1;                        /* INDEX TO PABTABLE     @Y30LB12*/
*                                                                  0145
         LA    @15,1                                               0145
         ALR   @05,@15                                             0145
         ST    @05,I4                                              0145
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* DEVELOP SECOND (LOGICAL DEVICE) INDEX INTO            @YD00113*/
*   /* PABTABLE BY EXTRACTING FROM THE STRUCTURE             @YD00113*/
*   /* PHYSTYPE THE LOGICAL DEVICE SPECIFIED IN THE          @YD00113*/
*   /* DASD CONTROL STATEMENT. LOGICAL DEVICE IS IN          @YD00113*/
*   /* THE THREE LOW-ORDER BITS OF THE BYTE                  @YD00113*/
*   /* EXTRACTED. EXTRACT THESE THREE BITS AND ADD           @YD00113*/
*   /* 1 TO DEVELOP INDEX VALUE.                             @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0146
*   WKLOGDEV=PHYSFLGS(I1,I2,I3);    /* SECOND INDEX          @Y30LB12*/
         ALR   @10,R4                                              0146
         MVC   WKLOGDEV(1),PHYSFLGS-82(@10)                        0146
*   ZEROBITS='00000'B;              /* ZERO HIGH-ORDER       @Y30LB12*/
         NI    ZEROBITS,B'00000111'                                0147
*   I5=WKLOGDEV;                    /* SECOND INDEX - 1      @Y30LB12*/
         SLR   @10,@10                                             0148
         IC    @10,WKLOGDEV                                        0148
         ST    @10,I5                                              0148
*   I5=I5+1;                        /* SECOND INDEX          @Y30LB12*/
*                                                                  0149
         ALR   @10,@15                                             0149
         ST    @10,I5                                              0149
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* EXTRACT AND SAVE IN THE WORK BYTE 'WORKREAL'          @YD00113*/
*   /* THE CURRENT SETTING OF THE REAL INTERFACE             @YD00113*/
*   /* BYTE.                                                 @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0150
*   WORKREAL=PABREAL(I4,I5);        /* GET REAL INT BYTE     @Y30LB12*/
*                                                                  0150
         SLA   @05,3                                               0150
         ALR   @05,@10                                             0150
         MH    @05,@CH00048                                        0150
         ALR   @05,R4                                              0150
         MVC   WORKREAL(1),PABREAL-27(@05)                         0150
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* TRANSLATE THE INDEX VALUE OF STAGING                  @YD00113*/
*   /* ADAPTER/CHANNEL INTERFACE INTO THE CHARACTER          @YD00113*/
*   /* REPRESENTATION OF ITS PRINTABLE COMPONENT             @YD00113*/
*   /* PARTS.                                                @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0151
*   WORKDSCI=DSLOKUP(DSINDEX);      /*                       @YD00113*/
*                                                                  0151
         L     @10,DSINDEX                                         0151
         ALR   @10,@10                                             0151
         LA    @05,DSLOKUP-2(@10)                                  0151
         MVC   WORKDSCI(2),0(@05)                                  0151
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* EXTRACT THE STAGING ADAPTER PORTION AND               @YD00113*/
*   /* RETRANSLATE TO BINARY.                                @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0152
*   WORKDS=WORKDSCI(1);             /*                       @YD00113*/
         MVC   WORKDS(1),WORKDSCI                                  0152
*   DO J=1 TO 16;                   /*                       @YD00113*/
         LR    J,@15                                               0153
@DL00153 DS    0H                                                  0154
*     IF WORKDS=LOKUPI6(J)          /*                       @YD00113*/
*       THEN                        /*                       @YD00113*/
         LA    @10,LOKUPI6-1(J)                                    0154
         CLC   WORKDS(1),0(@10)                                    0154
         BNE   @RF00154                                            0154
*       I6=J-1;                     /*                       @YD00113*/
         LR    @10,J                                               0155
         BCTR  @10,0                                               0155
         ST    @10,I6                                              0155
*     ELSE                                                         0156
*       ;                           /*                       @YD00113*/
@RF00154 DS    0H                                                  0157
*   END;                            /*                       @YD00113*/
*                                                                  0157
         AH    J,@CH00042                                          0157
         CH    J,@CH00162                                          0157
         BNH   @DL00153                                            0157
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* IF THE STAGING ADAPTER OF THE CURRENT ENTRY           @YD00113*/
*   /* MATCHES THE FIRST STAGING ADAPTER IN THE              @YD00113*/
*   /* STRUCTURE BUILDRSG (BUILT FROM INFORMATION            @YD00113*/
*   /* SUPPLIED IN THE DASD STATEMENT), DETERMINE            @YD00113*/
*   /* WHICH CHANNEL INTERFACE (B, C, OR D) IS               @YD00113*/
*   /* CURRENTLY BEING EXAMINED AND SET THE                  @YD00113*/
*   /* APPROPRIATE BIT IN THE WORK BYTE 'WORKREAL'           @YD00113*/
*   /* TO INDICATE THAT INTERFACE.                           @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0158
*   IF I6=TODS1(I4)                 /*                       @YM31083*/
*     THEN                          /*                       @YD00113*/
         L     @10,I4                                              0158
         MH    @10,@CH00112                                        0158
         L     @05,I6                                              0158
         ALR   @10,R4                                              0158
         MVC   @ZT00003+3(1),TODS1-9(@10)                          0158
         C     @05,@ZT00003                                        0158
         BNE   @RF00158                                            0158
*     DO;                           /*                       @YD00113*/
*       IF WORKDSCI(2)='B'          /*                       @YD00113*/
*         THEN                      /*                       @YD00113*/
         CLI   WORKDSCI+1,C'B'                                     0160
         BNE   @RF00160                                            0160
*         INTB1ST='1'B;             /*                       @YD00113*/
         OI    INTB1ST,B'01000000'                                 0161
*       ELSE                                                       0162
*         ;                         /*                       @YD00113*/
@RF00160 DS    0H                                                  0163
*       IF WORKDSCI(2)='C'          /*                       @YD00113*/
*         THEN                      /*                       @YD00113*/
         CLI   WORKDSCI+1,C'C'                                     0163
         BNE   @RF00163                                            0163
*         INTC1ST='1'B;             /*                       @YD00113*/
         OI    INTC1ST,B'00100000'                                 0164
*       ELSE                                                       0165
*         ;                         /*                       @YD00113*/
@RF00163 DS    0H                                                  0166
*       IF WORKDSCI(2)='D'          /*                       @YD00113*/
*         THEN                      /*                       @YD00113*/
         CLI   WORKDSCI+1,C'D'                                     0166
         BNE   @RF00166                                            0166
*         INTD1ST='1'B;             /*                       @YD00113*/
         OI    INTD1ST,B'00010000'                                 0167
*       ELSE                                                       0168
*         ;                         /*                       @YD00113*/
@RF00166 DS    0H                                                  0169
*     END;                          /*                       @YD00113*/
*   ELSE                                                           0170
*     ;                             /*                       @YD00113*/
*                                                                  0170
@RF00158 DS    0H                                                  0171
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* IF THE STAGING ADAPTER OF THE CURRENT ENTRY           @YD00113*/
*   /* MATCHES THE SECOND STAGING ADAPTER IN THE             @YD00113*/
*   /* STRUCTURE BUILDRSG (BUILT FROM INFORMATION            @YD00113*/
*   /* SUPPLIED IN THE DASD STATEMENT), DETERMINE            @YD00113*/
*   /* WHICH CHANNEL INTERFACE (B, C, OR D) IS               @YD00113*/
*   /* CURRENTLY BEING EXAMINED AND SET THE                  @YD00113*/
*   /* APPROPRIATE BIT IN THE WORK BYTE 'WORKREAL'           @YD00113*/
*   /* TO INDICATE THAT INTERFACE.                           @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0171
*   IF I6=TODS2(I4)                 /*                       @YM31083*/
*     THEN                          /*                       @YD00113*/
         L     @10,I4                                              0171
         MH    @10,@CH00112                                        0171
         L     @05,I6                                              0171
         ALR   @10,R4                                              0171
         MVC   @ZT00003+3(1),TODS2-9(@10)                          0171
         C     @05,@ZT00003                                        0171
         BNE   @RF00171                                            0171
*     DO;                           /*                       @YD00113*/
*       IF WORKDSCI(2)='B'          /*                       @YD00113*/
*         THEN                      /*                       @YD00113*/
         CLI   WORKDSCI+1,C'B'                                     0173
         BNE   @RF00173                                            0173
*         INTB2ND='1'B;             /*                       @YD00113*/
         OI    INTB2ND,B'00000100'                                 0174
*       ELSE                                                       0175
*         ;                         /*                       @YD00113*/
@RF00173 DS    0H                                                  0176
*       IF WORKDSCI(2)='C'          /*                       @YD00113*/
*         THEN                      /*                       @YD00113*/
         CLI   WORKDSCI+1,C'C'                                     0176
         BNE   @RF00176                                            0176
*         INTC2ND='1'B;             /*                       @YD00113*/
         OI    INTC2ND,B'00000010'                                 0177
*       ELSE                                                       0178
*         ;                         /*                       @YD00113*/
@RF00176 DS    0H                                                  0179
*       IF WORKDSCI(2)='D'          /*                       @YD00113*/
*         THEN                      /*                       @YD00113*/
         CLI   WORKDSCI+1,C'D'                                     0179
         BNE   @RF00179                                            0179
*         INTD2ND='1'B;             /*                       @YD00113*/
         OI    INTD2ND,B'00000001'                                 0180
*       ELSE                                                       0181
*         ;                         /*                       @YD00113*/
@RF00179 DS    0H                                                  0182
*     END;                          /*                       @YD00113*/
*   ELSE                                                           0183
*     ;                             /*                       @YD00113*/
@RF00171 DS    0H                                                  0184
*   CALL ALTPATH;                   /* ALTERNATE PATHS       @OZ09548*/
*                                                                  0184
         BAL   @14,ALTPATH                                         0184
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @YD00113*/
*   /* RESTORE WORKBYTE WITH UPDATED BIT TO ITS              @YD00113*/
*   /* UPDATED BIT TO ITS PROPER LOCATION IN THE             @YD00113*/
*   /* STRUCTURE PABBYTES.                                   @YD00113*/
*   /* ***********************************************       @YD00113*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0185
*   PABREAL(I4,I5)=WORKREAL;        /*                       @YD00113*/
         L     @10,I4                                              0185
         SLA   @10,3                                               0185
         AL    @10,I5                                              0185
         MH    @10,@CH00048                                        0185
         ALR   @10,R4                                              0185
         MVC   PABREAL-27(1,@10),WORKREAL                          0185
*   END UPDATPAB;                   /* RETURN TO CHKSSID     @YD00113*/
@EL00007 DS    0H                                                  0186
@EF00007 DS    0H                                                  0186
@ER00007 LM    @14,@12,@SA00007                                    0186
         BR    @14                                                 0186
*                                                                  0187
*/********************************************************** @OZ09548*/
*/*                                                          @OZ09548*/
*/* PROCEDURE NAME - ALTPATH                                 @OZ09548*/
*/*                                                          @OZ09548*/
*/* FUNCTION - FOR CONVERTIBLE DEVICES THAT HAVE ALTERNATE   @OZ09548*/
*/*            PATH SPECIFIED, SET THE APPROPRIATE BITS FOR  @OZ09548*/
*/*            THE PROPER INTERFACES IN THE DEVICE SEGMENT   @OZ09548*/
*/*            OF THE PAGE AVAILABILITY BLOCK OF THE STAGING @OZ09548*/
*/*            DRIVE GROUP TABLE.                            @OZ09548*/
*/*                                                          @OZ09548*/
*/********************************************************** @OZ09548*/
*                                                                  0187
*ALTPATH:                                                          0187
*   PROCEDURE;                      /*                       @OZ09548*/
*                                                                  0187
ALTPATH  STM   @14,@12,@SA00008                                    0187
*   /*****************************************************************/
*   /*                                                               */
*   /* ***********************************************       @OZ09548*/
*   /* CHECK FIRST FOR ALTERNATE PATH SPECIFICATION.         @OZ09548*/
*   /* IF NO ALTERNATE PATH SPECIFIED, RETURN.               @OZ09548*/
*   /* ***********************************************       @OZ09548*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0188
*   IF ALTCI1(DSINDEX,DEVINDEX)='00'X/*                      @OZ09548*/
*     THEN                          /*                       @OZ09548*/
         L     @10,DSINDEX                                         0188
         SLA   @10,6                                               0188
         AL    @10,DEVINDEX                                        0188
         MH    @10,@CH00255                                        0188
         L     @05,COMPTR2(,R4)                                    0188
         ST    @10,@TF00001                                        0188
         ALR   @10,@05                                             0188
         AL    @10,@CF00550                                        0188
         CLI   ALTCI1-467(@10),X'00'                               0188
         BE    @RT00188                                            0188
*     RETURN;                       /* NO PATH SPECIFIED     @OZ09548*/
*   ELSE                            /*                       @OZ09548*/
*     DO;                           /*                       @OZ09548*/
*       ALTCI=ALTCI1(DSINDEX,DEVINDEX);/*                    @OZ09548*/
         L     @10,@TF00001                                        0191
         AL    @10,@CF00550                                        0191
         SLR   ALTCI,ALTCI                                         0191
         IC    ALTCI,ALTCI1-467(@10,@05)                           0191
*       ALTSA=ALTDS1(DSINDEX,DEVINDEX);/*                    @OZ09548*/
         L     @10,@TF00001                                        0192
         AL    @05,@CF00551                                        0192
         SLR   ALTSA,ALTSA                                         0192
         IC    ALTSA,ALTDS1-466(@10,@05)                           0192
*       CALL MARKPATH;              /*                       @OZ09548*/
         BAL   @14,MARKPATH                                        0193
*     END;                          /*                       @OZ09548*/
*   IF ALTCI2(DSINDEX,DEVINDEX)='00'X/*                      @OZ09548*/
*     THEN                          /*                       @OZ09548*/
         L     @10,DSINDEX                                         0195
         SLA   @10,6                                               0195
         AL    @10,DEVINDEX                                        0195
         MH    @10,@CH00255                                        0195
         L     @05,COMPTR2(,R4)                                    0195
         ST    @10,@TF00001                                        0195
         ALR   @10,@05                                             0195
         AL    @10,@CF00552                                        0195
         CLI   ALTCI2-470(@10),X'00'                               0195
         BE    @RT00195                                            0195
*     RETURN;                       /* NO PATH SPECIFIED     @OZ09548*/
*   ELSE                            /*                       @OZ09548*/
*     DO;                           /*                       @OZ09548*/
*       ALTCI=ALTCI2(DSINDEX,DEVINDEX);/*                    @OZ09548*/
         L     @10,@TF00001                                        0198
         AL    @10,@CF00552                                        0198
         SLR   ALTCI,ALTCI                                         0198
         IC    ALTCI,ALTCI2-470(@10,@05)                           0198
*       ALTSA=ALTDS2(DSINDEX,DEVINDEX);/*                    @OZ09548*/
         L     @10,@TF00001                                        0199
         AL    @05,@CF00553                                        0199
         SLR   ALTSA,ALTSA                                         0199
         IC    ALTSA,ALTDS2-469(@10,@05)                           0199
*       CALL MARKPATH;              /*                       @OZ09548*/
         BAL   @14,MARKPATH                                        0200
*     END;                          /*                       @OZ09548*/
*   IF ALTCI3(DSINDEX,DEVINDEX)='00'X/*                      @OZ09548*/
*     THEN                          /*                       @OZ09548*/
         L     @10,DSINDEX                                         0202
         SLA   @10,6                                               0202
         AL    @10,DEVINDEX                                        0202
         MH    @10,@CH00255                                        0202
         L     @05,COMPTR2(,R4)                                    0202
         ST    @10,@TF00001                                        0202
         ALR   @10,@05                                             0202
         AL    @10,@CF00554                                        0202
         CLI   ALTCI3-473(@10),X'00'                               0202
         BE    @RT00202                                            0202
*     RETURN;                       /* NO PATH SPECIFIED     @OZ09548*/
*   ELSE                            /*                       @OZ09548*/
*     DO;                           /*                       @OZ09548*/
*       ALTCI=ALTCI3(DSINDEX,DEVINDEX);/*                    @OZ09548*/
         L     @10,@TF00001                                        0205
         AL    @10,@CF00554                                        0205
         SLR   ALTCI,ALTCI                                         0205
         IC    ALTCI,ALTCI3-473(@10,@05)                           0205
*       ALTSA=ALTDS3(DSINDEX,DEVINDEX);/*                    @OZ09548*/
         L     @10,@TF00001                                        0206
         AL    @05,@CF00555                                        0206
         SLR   ALTSA,ALTSA                                         0206
         IC    ALTSA,ALTDS3-472(@10,@05)                           0206
*       CALL MARKPATH;              /*                       @OZ09548*/
         BAL   @14,MARKPATH                                        0207
*     END;                          /*                       @OZ09548*/
*   END ALTPATH;                                                   0209
@EL00008 DS    0H                                                  0209
@EF00008 DS    0H                                                  0209
@ER00008 LM    @14,@12,@SA00008                                    0209
         BR    @14                                                 0209
*                                                                  0210
*/********************************************************** @OZ09548*/
*/*                                                          @OZ09548*/
*/* PROCEDURE NAME - MARKPATH                                @OZ09548*/
*/*                                                          @OZ09548*/
*/* FUNCTION - SET THE PROPER BIT IT THE INTERFACE BYTE FOR  @OZ09548*/
*/*            THE ALTERNATE PATH FOR A CONVERTIBLE DEVICE.  @OZ09548*/
*/*                                                          @OZ09548*/
*/********************************************************** @OZ09548*/
*                                                                  0210
*MARKPATH:                                                         0210
*   PROCEDURE;                      /*                       @OZ09548*/
MARKPATH STM   @14,@12,12(@13)                                     0210
*   IF ALTSA=TODS1(I4)              /*                       @OZ09548*/
*     THEN                          /*                       @OZ09548*/
         L     @10,I4                                              0211
         MH    @10,@CH00112                                        0211
         ALR   @10,R4                                              0211
         MVC   @ZT00003+3(1),TODS1-9(@10)                          0211
         C     ALTSA,@ZT00003                                      0211
         BNE   @RF00211                                            0211
*     DO;                           /*                       @OZ09548*/
*       IF ALTCI='01'X              /*                       @OZ09548*/
*         THEN                      /*                       @OZ09548*/
         CH    ALTCI,@CH00523                                      0213
         BNE   @RF00213                                            0213
*         INTB1ST='1'B;             /*                       @OZ09548*/
         OI    INTB1ST,B'01000000'                                 0214
*       IF ALTCI='02'X              /*                       @OZ09548*/
*         THEN                      /*                       @OZ09548*/
@RF00213 CH    ALTCI,@CH00524                                      0215
         BNE   @RF00215                                            0215
*         INTC1ST='1'B;             /*                       @OZ09548*/
         OI    INTC1ST,B'00100000'                                 0216
*       IF ALTCI='03'X              /*                       @OZ09548*/
*         THEN                      /*                       @OZ09548*/
@RF00215 CH    ALTCI,@CH00525                                      0217
         BNE   @RF00217                                            0217
*         INTD1ST='1'B;             /*                       @OZ09548*/
         OI    INTD1ST,B'00010000'                                 0218
*     END;                          /*                       @OZ09548*/
@RF00217 DS    0H                                                  0220
*   IF ALTSA=TODS2(I4)              /*                       @OZ09548*/
*     THEN                          /*                       @OZ09548*/
@RF00211 L     @10,I4                                              0220
         MH    @10,@CH00112                                        0220
         ALR   @10,R4                                              0220
         MVC   @ZT00003+3(1),TODS2-9(@10)                          0220
         C     ALTSA,@ZT00003                                      0220
         BNE   @RF00220                                            0220
*     DO;                           /*                       @OZ09548*/
*       IF ALTCI='01'X              /*                       @OZ09548*/
*         THEN                      /*                       @OZ09548*/
         CH    ALTCI,@CH00523                                      0222
         BNE   @RF00222                                            0222
*         INTB2ND='1'B;             /*                       @OZ09548*/
         OI    INTB2ND,B'00000100'                                 0223
*       IF ALTCI='02'X              /*                       @OZ09548*/
*         THEN                      /*                       @OZ09548*/
@RF00222 CH    ALTCI,@CH00524                                      0224
         BNE   @RF00224                                            0224
*         INTC2ND='1'B;             /*                       @OZ09548*/
         OI    INTC2ND,B'00000010'                                 0225
*       IF ALTCI='03'X              /*                       @OZ09548*/
*         THEN                      /*                       @OZ09548*/
@RF00224 CH    ALTCI,@CH00525                                      0226
         BNE   @RF00226                                            0226
*         INTD2ND='1'B;             /*                       @OZ09548*/
         OI    INTD2ND,B'00000001'                                 0227
*     END;                          /*                       @OZ09548*/
*   END MARKPATH;                   /*                       @OZ09548*/
@EL00009 DS    0H                                                  0229
@EF00009 DS    0H                                                  0229
@ER00009 LM    @14,@12,12(@13)                                     0229
         BR    @14                                                 0229
*                                                                  0230
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/
*/*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0230
*PUTIT1:                                                           0230
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT1   STM   @14,@12,@SA00010                                    0230
*   STOPSCAN='1'B;                  /*                       @Y30LB12*/
         OI    STOPSCAN,B'10000000'                                0231
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0232
*   TERMINAT=TERMINAT+1;            /*                       @Y30LB12*/
         LA    @10,1                                               0233
         AH    @10,TERMINAT(,R4)                                   0233
         STH   @10,TERMINAT(,R4)                                   0233
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0235
*   END PUTIT1;                     /*                       @Y30LB12*/
@EL00010 DS    0H                                                  0236
@EF00010 DS    0H                                                  0236
@ER00010 LM    @14,@12,@SA00010                                    0236
         BR    @14                                                 0236
*                                                                  0237
*/***********************************************************@Y30LB12*/
*/*                                                          @Y30LB12*/
*/* PROCEDURE NAME - PUTIT3                                  @Y30LB12*/
*/*                                                          @Y30LB12*/
*/* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/
*/*            PUT WARNING MESSAGE FOR WHICH MESSAGE TEXT    @Y30LB12*/
*/*            IS NOT IN ICGDSMSG, BUT WHICH IS BUILT AND    @Y30LB12*/
*/*            PASSED IN 'OUTBUF2'.                          @Y30LB12*/
*/*                                                          @Y30LB12*/
*/***********************************************************@Y30LB12*/
*                                                                  0237
*PUTIT3:                                                           0237
*   PROCEDURE;                      /*                       @Y30LB12*/
PUTIT3   STM   @14,@12,@SA00011                                    0237
*   PRNTBUF2='1'B;                  /*                       @Y30LB12*/
         OI    PRNTBUF2(R4),B'00000001'                            0238
*   WARNING=WARNING+1;              /*                       @Y30LB12*/
         LA    @10,1                                               0239
         AH    @10,WARNING(,R4)                                    0239
         STH   @10,WARNING(,R4)                                    0239
*   GEN(LINK  EP=ICGDSMSG);         /*                       @Y30LB12*/
         LINK  EP=ICGDSMSG
*   PRNTBUF2='0'B;                  /*                       @Y30LB12*/
         NI    PRNTBUF2(R4),B'11111110'                            0241
*   END PUTIT3;                     /*                       @Y30LB12*/
@EL00011 DS    0H                                                  0242
@EF00011 DS    0H                                                  0242
@ER00011 LM    @14,@12,@SA00011                                    0242
         BR    @14                                                 0242
*                                                                  0243
*/********************************************************** @YD00113*/
*/*                    P A T C H   A R E A                   @Y30LB12*/
*/********************************************************** @YD00113*/
*                                                                  0243
*   GENERATE;                                                      0243
PATCHA07 DC    32C'PATCHA07'                              /*@Y30LB12*/
*   END ICGDSA07                    /*                       @Y30LB12*/
*/*                                                          @YD00113*/
*                                                                  0244
*                                                                  0244
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICGDSMAC)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA2)                                       */
*/*%INCLUDE SYSLIB  (ICGDSMA4)                                       */
*                                                                  0244
*       ;                                                          0244
         B     @EL00001                                            0244
@DATA    DS    0H
@CH00042 DC    H'1'
@CH00050 DC    H'2'
@CH00227 DC    H'6'
@CH00112 DC    H'9'
@CH00480 DC    H'10'
@CH00255 DC    H'11'
@CH00162 DC    H'16'
@CH00244 DC    H'48'
@CH00254 DC    H'64'
@CH00523 DC    XL2'01'
@CH00524 DC    XL2'02'
@CH00525 DC    XL2'03'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@SA00003 DS    15F
@SA00005 DS    15F
@SA00004 DS    15F
@SA00010 DS    15F
@SA00007 DS    15F
@SA00006 DS    15F
@SA00011 DS    15F
@SA00008 DS    15F
@TF00001 DS    F
@ZTEMPS  DS    0F
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICGDSA07 CSECT
         DS    0F
@CF00048 DC    F'3'
@CH00048 EQU   @CF00048+2
@CF00540 DC    F'-251'
@CF00551 DC    F'-249'
@CF00550 DC    F'-248'
@CF00553 DC    F'-246'
@CF00552 DC    F'-245'
@CF00555 DC    F'-243'
@CF00554 DC    F'-242'
@DATD    DSECT
         DS    0D
A07WORKA DS    CL40
         ORG   A07WORKA
DSINDEX  DS    FL4
DEVINDEX DS    FL4
I1       DS    FL4
I2       DS    FL4
I3       DS    FL4
I4       DS    FL4
I5       DS    FL4
I6       DS    FL4
WORKDSCI DS    CL2
WORKI2I3 DS    CL2
WORKREAL DS    CL1
         ORG   WORKREAL
@NM00019 DS    BL1
INTB1ST  EQU   WORKREAL+0
INTC1ST  EQU   WORKREAL+0
INTD1ST  EQU   WORKREAL+0
@NM00020 EQU   WORKREAL+0
INTB2ND  EQU   WORKREAL+0
INTC2ND  EQU   WORKREAL+0
INTD2ND  EQU   WORKREAL+0
         ORG   A07WORKA+37
WORKDS   DS    CL1
WKLOGDEV DS    CL1
         ORG   WKLOGDEV
ZEROBITS DS    BL1
WKLGBITS EQU   WKLOGDEV+0
         ORG   A07WORKA+39
A07FLAGS DS    BL1
         ORG   A07FLAGS
STOPSCAN DS    BL1
ERROR1   EQU   A07FLAGS+0
OWE350I  EQU   A07FLAGS+0
@NM00021 EQU   A07FLAGS+0
         ORG   A07WORKA+40
PACKED   DS    CL6
UNPACKED DS    CL11
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICGDSA07 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ICGDS316 DC    CL67' ICG316I FOR SA X INT X DEV XX, DEVICE NOT PRESENT C
               IN CONFIGURATION'
ICGDS317 DC    CL58' ICG317I FOR SA X INT X DEV XX, DEVICE NOT DEFINED C
               AS REAL'
ICGDS318 DC    CL60' ICG318I FOR SA X INT X DEV XX, DEVICE NOT DEFINED C
               WITH SSID'
ICGDS350 DC    CL75' ICG350I FOR SA X INT X DEV XX, MORE THAN ONE REAL C
               PATH FROM CPU XXXXXXXXXX'
DSLOKUP  DC    CL2'0B'
         DC    CL2'0C'
         DC    CL2'0D'
         DC    CL2'1B'
         DC    CL2'1C'
         DC    CL2'1D'
         DC    CL2'2B'
         DC    CL2'2C'
         DC    CL2'2D'
         DC    CL2'3B'
         DC    CL2'3C'
         DC    CL2'3D'
         DC    CL2'4B'
         DC    CL2'4C'
         DC    CL2'4D'
         DC    CL2'5B'
         DC    CL2'5C'
         DC    CL2'5D'
         DC    CL2'6B'
         DC    CL2'6C'
         DC    CL2'6D'
         DC    CL2'7B'
         DC    CL2'7C'
         DC    CL2'7D'
         DC    CL2'8B'
         DC    CL2'8C'
         DC    CL2'8D'
         DC    CL2'9B'
         DC    CL2'9C'
         DC    CL2'9D'
         DC    CL2'AB'
         DC    CL2'AC'
         DC    CL2'AD'
         DC    CL2'BB'
         DC    CL2'BC'
         DC    CL2'BD'
         DC    CL2'CB'
         DC    CL2'CC'
         DC    CL2'CD'
         DC    CL2'DB'
         DC    CL2'DC'
         DC    CL2'DD'
         DC    CL2'EB'
         DC    CL2'EC'
         DC    CL2'ED'
         DC    CL2'FB'
         DC    CL2'FC'
         DC    CL2'FD'
I2I3     DC    X'0101'
         DC    X'0102'
         DC    X'0103'
         DC    X'0104'
         DC    X'0105'
         DC    X'0106'
         DC    X'0107'
         DC    X'0108'
         DC    X'0201'
         DC    X'0202'
         DC    X'0203'
         DC    X'0204'
         DC    X'0205'
         DC    X'0206'
         DC    X'0207'
         DC    X'0208'
         DC    X'0301'
         DC    X'0302'
         DC    X'0303'
         DC    X'0304'
         DC    X'0305'
         DC    X'0306'
         DC    X'0307'
         DC    X'0308'
         DC    X'0401'
         DC    X'0402'
         DC    X'0403'
         DC    X'0404'
         DC    X'0405'
         DC    X'0406'
         DC    X'0407'
         DC    X'0408'
DEVLOKUP DC    CL2'00'
         DC    CL2'01'
         DC    CL2'02'
         DC    CL2'03'
         DC    CL2'04'
         DC    CL2'05'
         DC    CL2'06'
         DC    CL2'07'
         DC    CL2'08'
         DC    CL2'09'
         DC    CL2'0A'
         DC    CL2'0B'
         DC    CL2'0C'
         DC    CL2'0D'
         DC    CL2'0E'
         DC    CL2'0F'
         DC    CL2'10'
         DC    CL2'11'
         DC    CL2'12'
         DC    CL2'13'
         DC    CL2'14'
         DC    CL2'15'
         DC    CL2'16'
         DC    CL2'17'
         DC    CL2'18'
         DC    CL2'19'
         DC    CL2'1A'
         DC    CL2'1B'
         DC    CL2'1C'
         DC    CL2'1D'
         DC    CL2'1E'
         DC    CL2'1F'
LOKUPI6  DC    CL1'0'
         DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
         DC    CL1'6'
         DC    CL1'7'
         DC    CL1'8'
         DC    CL1'9'
         DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ALTCI    EQU   @02
ALTSA    EQU   @03
USEI     EQU   @03
I        EQU   @02
J        EQU   @02
R4       EQU   @04
COMTAB   EQU   0
READER   EQU   COMTAB+256
READFLAG EQU   READER+96
PCHBF    EQU   READER+99
STARTCOL EQU   READER+180
NEXTCOL  EQU   READER+184
PRINTER  EQU   COMTAB+464
OUTBUF2  EQU   PRINTER+225
MESSAGES EQU   COMTAB+810
WARNING  EQU   MESSAGES+4
TERMINAT EQU   MESSAGES+6
SPECLMSG EQU   MESSAGES+18
PRNTBUF2 EQU   SPECLMSG
GENIO    EQU   COMTAB+832
DCBPTR   EQU   GENIO+4
COMPTR2  EQU   GENIO+16
INVOKED  EQU   COMTAB+856
SAVEDDS  EQU   INVOKED+4
BUILDRSG EQU   COMTAB+900
RSGS     EQU   BUILDRSG
RSG      EQU   RSGS
RSGABOX  EQU   RSG
RSGTODS  EQU   RSG+7
TODS1    EQU   RSGTODS
TODS2    EQU   RSGTODS+1
LIBRARY  EQU   COMTAB+1170
LIBS     EQU   LIBRARY
LIB      EQU   LIBS
LIBBITS  EQU   LIB
PABTABLE EQU   COMTAB+1218
PABDEV   EQU   PABTABLE
PABFLAGS EQU   PABDEV
PABREAL  EQU   PABDEV+1
PABAADDD EQU   PABDEV+2
DSPAIRS  EQU   COMTAB+1938
PHYSDS2  EQU   DSPAIRS
PHYSTYPE EQU   COMTAB+2002
PHYSFLGS EQU   PHYSTYPE
MERLICEB EQU   PHYSFLGS
PHYSREAL EQU   PHYSFLGS
PHYSSSID EQU   PHYSFLGS
SPNRSGNO EQU   PHYSTYPE+1
CPUASSOC EQU   COMTAB+3026
CPUS     EQU   CPUASSOC+2
CPU      EQU   CPUS
CPUFLAG1 EQU   CPU+6
OPSYSTYP EQU   CPUFLAG1
CPUFLAG2 EQU   CPU+7
LOWERCON EQU   COMTAB+3156
LOWDSS   EQU   LOWERCON
LOWFLGS  EQU   LOWDSS
LIBCTL   EQU   COMTAB+3284
LIBCTLS  EQU   LIBCTL
CREATE   EQU   COMTAB+3288
@NM00017 EQU   CREATE
BINTIND  EQU   @NM00017
COMTAB2  EQU   0
DSTORSG  EQU   COMTAB2
DSENTRY  EQU   DSTORSG
CONFGCON EQU   COMTAB2+32
RSGUCB   EQU   CONFGCON
RSGFLAGS EQU   RSGUCB
RSGCPUID EQU   RSGUCB+1
CPUREFNO EQU   RSGUCB+6
CONFGUCB EQU   COMTAB2+464
CONFGDEV EQU   CONFGUCB
USEFLAGS EQU   CONFGDEV
USESPEC  EQU   USEFLAGS
USEREAL  EQU   USEFLAGS
USECONVR EQU   USEFLAGS
ICEBERG  EQU   USEFLAGS
ALTPATH1 EQU   CONFGDEV+2
ALTDS1   EQU   ALTPATH1
ALTCI1   EQU   ALTPATH1+1
ALTPATH2 EQU   CONFGDEV+5
ALTDS2   EQU   ALTPATH2
ALTCI2   EQU   ALTPATH2+1
ALTPATH3 EQU   CONFGDEV+8
ALTDS3   EQU   ALTPATH3
ALTCI3   EQU   ALTPATH3+1
SCANBUF  EQU   0
SCANDATA EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ALTCH3   EQU   ALTPATH3+2
ALTCH2   EQU   ALTPATH2+2
ALTCH1   EQU   ALTPATH1+2
INDEXRSG EQU   CONFGDEV+1
ITISALTP EQU   USEFLAGS
SUPPUNCH EQU   USEFLAGS
USEVS    EQU   USEFLAGS
USEV     EQU   USEFLAGS
RSGCUA   EQU   RSGUCB+8
RSGCHAN  EQU   RSGUCB+7
@NM00018 EQU   RSGFLAGS
CISPEC   EQU   RSGFLAGS
TORSG2   EQU   DSENTRY+1
TORSG1   EQU   DSENTRY
COM2BASE EQU   COMTAB+3304
LRUCLOCK EQU   CREATE+11
VOLSER   EQU   CREATE+5
VPAGES   EQU   CREATE+1
DINTIND  EQU   @NM00017
CINTIND  EQU   @NM00017
CYLFAULT EQU   @NM00017
PRNTONLY EQU   @NM00017
UPDCREAT EQU   @NM00017
NEWCREAT EQU   @NM00017
CMDCREAT EQU   @NM00017
RW67RGHT EQU   LIBCTLS
RW67LEFT EQU   LIBCTLS
RW45RGHT EQU   LIBCTLS
RW45LEFT EQU   LIBCTLS
RW23RGHT EQU   LIBCTLS
RW23LEFT EQU   LIBCTLS
RW01RGHT EQU   LIBCTLS
RW01LEFT EQU   LIBCTLS
LOWLIB   EQU   LOWDSS+1
@NM00016 EQU   LOWFLGS
LOWRGHT  EQU   LOWFLGS
LOWLEFT  EQU   LOWFLGS
LOWRW67  EQU   LOWFLGS
LOWRW45  EQU   LOWFLGS
LOWRW23  EQU   LOWFLGS
LOWRW01  EQU   LOWFLGS
LOWSPEC  EQU   LOWFLGS
ALTMSCIN EQU   CPUFLAG2
@NM00015 EQU   CPUFLAG2
ALTMSGBF EQU   CPUFLAG2
@NM00014 EQU   CPUFLAG2
CPUSPEC  EQU   CPUFLAG2
CPUMSCIN EQU   CPUFLAG1
OPJES3   EQU   OPSYSTYP
OPVS2    EQU   OPSYSTYP
OPVS1    EQU   OPSYSTYP
CPUALTFL EQU   CPUFLAG1
CPUTIGHT EQU   CPUFLAG1
@NM00013 EQU   CPUFLAG1
TOMPCPU  EQU   CPU+5
CPUID    EQU   CPU
CPUNUM   EQU   CPUASSOC
LGDEVICE EQU   PHYSFLGS
LOGABOX1 EQU   PHYSFLGS
PABDDD   EQU   PABAADDD
PABAA    EQU   PABAADDD
PABZEROS EQU   PABAADDD
PAB2D    EQU   PABREAL
PAB2C    EQU   PABREAL
PAB2B    EQU   PABREAL
@NM00012 EQU   PABREAL
PAB1D    EQU   PABREAL
PAB1C    EQU   PABREAL
PAB1B    EQU   PABREAL
PABIMPLR EQU   PABREAL
PABBERG2 EQU   PABFLAGS
@NM00011 EQU   PABFLAGS
PABDSMTL EQU   PABFLAGS
PABIBERG EQU   PABFLAGS
@NM00010 EQU   PABFLAGS
PABVOVIR EQU   PABFLAGS
PABEXIST EQU   PABFLAGS
MAPEXIT  EQU   LIB+4
LIBMAP   EQU   LIB+3
LIBDSMID EQU   LIB+2
LIBSIZE  EQU   LIB+1
@NM00009 EQU   LIBBITS
LIBSPEC  EQU   LIBBITS
RSGSLICE EQU   RSG+3
RSGUDEL  EQU   RSG+2
RSGLDEL  EQU   RSG+1
@NM00008 EQU   RSG
RSGABOX1 EQU   RSGABOX
RSGABOX0 EQU   RSGABOX
RSGSPEC  EQU   RSG
SVSYSUT3 EQU   SAVEDDS+32
SVSYSUT2 EQU   SAVEDDS+24
SVSYSUT1 EQU   SAVEDDS+16
SVSYSPCH EQU   SAVEDDS+8
SVSYSIN  EQU   SAVEDDS
PARMPTR  EQU   INVOKED
BUILDPTR EQU   GENIO+20
SAVE14   EQU   GENIO+12
EXLST    EQU   GENIO+8
@NM00007 EQU   DCBPTR+1
DCBFLAG  EQU   DCBPTR
OPENLIST EQU   GENIO
@NM00006 EQU   MESSAGES+19
NEEDEOJ  EQU   SPECLMSG
ENDPHASE EQU   SPECLMSG
@NM00005 EQU   SPECLMSG
PRNTCARD EQU   SPECLMSG
@NM00004 EQU   SPECLMSG
NEED102  EQU   SPECLMSG
NEED101  EQU   SPECLMSG
PRINTRC  EQU   MESSAGES+16
TERM     EQU   MESSAGES+12
WARN     EQU   MESSAGES+8
MSGNO    EQU   MESSAGES+2
RETCODE  EQU   MESSAGES
OUTBUF   EQU   PRINTER+104
LINECT   EQU   PRINTER+102
LINECTR  EQU   PRINTER+100
PAGENO   EQU   PRINTER+96
DCBPRINT EQU   PRINTER
@NM00003 EQU   READER+206
SCANLEN  EQU   READER+204
SVEODAD  EQU   READER+200
SVSYNAD2 EQU   READER+196
SAVENCOL EQU   READER+192
SAVESCOL EQU   READER+188
INBUF    EQU   READER+100
SSELECT  EQU   PCHBF
@NM00002 EQU   READER+97
@NM00001 EQU   READFLAG
LASTPARM EQU   READFLAG
ENDSCAN  EQU   READFLAG
PARMBIT  EQU   READFLAG
KEYBIT   EQU   READFLAG
READTERM EQU   READFLAG
READDCB  EQU   READER
PATCH    EQU   COMTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00068 EQU   @EL00002
@RC00095 EQU   @EL00004
@RF00128 EQU   @EL00005
@RT00188 EQU   @EL00008
@RT00195 EQU   @EL00008
@RT00202 EQU   @EL00008
@RF00220 EQU   @EL00009
@RF00226 EQU   @EL00009
@ENDDATA EQU   *
         END   ICGDSA07
