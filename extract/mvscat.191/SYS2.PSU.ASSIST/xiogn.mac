         MACRO
&XLABEL  XIOGN  &LRECL=80,&BLKSIZE=80,&XOP=OUTPUT,&RECFM=,&DDNAME=,    #
               &BUFNO=1
.*--> MACRO: XIOGN      I/O SUPPORT MODULE GENERATION . . . . . . . . .
.*                                 JOHN R. MASHEY - FEB 1970 - V.5.0  *
.*       MACRO USED TO GENERATE THE I/O CSECTS USED BY THE XIOPAK     *
.*       MACROS XREAD,XPRNT,XPNCH.  THE CSECTS ARE CALLED EACH TIME   *
.*       ONE OF THE MACROS IS CALLED, AND DOES REQUIRED OPN'S, GET'S, *
.*       PUT'S, ETC .                                                 *
.*       **ARGUMENTS**                                                *
.*       BLKSIZE,BUFNO,LRECL,RECFM=    ARGUMENTS FOR CREATED DCB.     *
.*             DEFAULTS: BLKSIZE=80,BUFNO=1,LRECL=80.                 *
.*             IF MODULE DESIRED FOR USE WITH VARIABLE JCL VALUES,    *
.*             CODE BLKSIZE=0,BUFNO=0,LRECL=0.                        *
.*       XOP= EITHER INPUT OR OUTPUT, DENOTING DIRECTION OF I/O.      *
.*             DEFAULT: OUTPUT.                                       *
.*       DDNAME=   LIST OF DDNAMES WHICH MODULE CAN USE FOR I/O.      *
.*             WILL ATTEMPT OPEN OF EACH ONE, IN ORDER GIVEN, UNTIL   *
.*             ONE SUCCEEDS OR LIST IS EXHAUSTED.                     *
.*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         GBLB  &XIOGNST            =0 ==> HAVEN'T GEND XIOBLOCK
         LCLA  &XDD                COUNTER FOR # DDNAMES
         LCLB  &XIO                OUTPUT=1,INPUT=0
         LCLC  &X                  PREFIX OF ALL LABELS
&XDD     SETA  N'&DDNAME           GET # OF DDNAMES TO BE TRIED
&XIO     SETB  ('&XOP' EQ 'OUTPUT')          SET FOR INPUT OR OUTPUT
&X       SETC  '&XLABEL'(3,4)      GET LABEL START
        TITLE  ' *** &XLABEL *** I/O ROUTINE'
&XLABEL  CSECT
         ENTRY &X.DCB
         USING XIOBLOCK,R14 .      NOTE POINTER TO CONTROL BLOCK
         USING *,R15 .             NOTE TEMPORARY ADDRESSIBILITY
         STM   R13,R5,&X.SAV1   .  SAVE REGS WHICH WILL BE USED
         CNOP  0,4 .               MAKE SURE ALIGNED ON FULLWORD
         BAL   R13,*+76 .          SET UP FAKE SAVE AREA PTR,BASE
         USING *,R13 .             NOTE NEW USING/SAVE AREA POINTER
         DS    18F .               FAKE SAVE AREA,FOR GET/PUT ETC
         DROP  R15 .               KILL OLD ADDRESSING
         SPACE 2
.XASA1   AIF   (&XIO).XOUT         SKIP IF OUTPUT
&X.EOFT  NOP   &X.ABD2  .          *** WILL BECOME A B AFTER EOF EXIT
.XOUT    ANOP
&X.TES1  NOP   &X.GO   .           *** WILL BE A BRANCH AFTER OPEN GOES
         LR    R5,R14              SAVE R14 AROUND CALL TO XXXXOPEN
         LA    1,&X.OPBK .         GET ADDRESS OF CONTROL TABLE
         L     15,&X.OPAD .        GET BRANCH ADDRESS
         BALR  14,15 .             CALL XXXXOPEN ROUTINE
         LR    R14,R5              RESTORE R14
&X.OPOK  MVI   &X.TES1+1,X'F0'  .  CHANGE NOP TO B-DONT OPEN AGAIN
&X.GO    LH    R4,&X.DCB+82 .      GET DCB LRECL FOR COMPARISON
         LH    R5,XIOLENG .        GET LENGTH FROM CONTROL BLOCK
         BCTR  R5,0 .              DECREMENT TO LENGTH-1
         CLR   R4,R5 .             COMPARE WITH LIMIT
         BH    *+8 .               SKIP IF WITHIN RANGE
         LR    R5,R4 .             MOVE DEFAULT VALUE OVER
         BCTR  R5,0 .              DECREMENT DEFAULT TO LENGTH-1
.XASB    SPACE 2
         L     R2,&X.SAV1+12 .     GET ADDRESS OF I/O AREA (FROM R0)
.*
*        THE FOLLOWING CODE IS USED TO CHECK FOR ADDRESS ILLEGAL      *
*        THIS CODE WILL NOT WORK IF MACHINE HAS FETCH PROTECT**********
         L     R1,16 .             GET CVT POINTER FROM LOC 16
         LA    R0,1(R2,R5) .       GET ENDING ADDRESS OF I/O AREA
         C     R0,164(R1) .        COMPARE TO CVTMZ00-HGIHEST ADDRESS
         BNL   &X.ABD3   .         GO ABEND IF HIGHER
.*
         AIF   (&XIO).XOUT1        SKIP IF OUTPUT MODE
         GET   &X.DCB              OBTAIN @ BUFFER
         EX    R5,&X.MOV  .        MOVE REQUESTED NUMBER OF BYTES
         SR    R0,R0 .             SET CONDITION CODE=0, SHOW USER OK
         B     &X.RET  .           GO TO RETURN TO CALLER
&X.ABD2  WTO   ' &XLABEL ABEND 300 - ATTEMPT TO READ PAST END-OF-FILE',X
               ROUTCDE=11
         B     &X.ABD1  .          GO ABEND
&X.EOF   CLOSE &X.DCB
         LA    1,&X.DCB            POINT 1 TO DCB TO FREE BUFFER
         FREEPOOL (1)              FREE THE BUFFERS
         OI    *+1,1  .            SET CONDITON CODE TO 1
         MVI   &X.EOFT+1,X'F0'  .  CHANGE NOP TO B-NO MORE READS
         AGO   .XRET               HAVE RETURN CODE GENRATED
.*
.XOUT1   EX    R5,&X.MOV  .        MOVE NUMBER OF BYTES TO OUTPUT LINE
         PUT   &X.DCB,&X.BUF
         EX    R5,&X.MOV1  .       REBLANK OUTPUT LINE
.*
.XRET    ANOP
         SPACE 2
&X.RET   LM    R13,R5,&X.SAV1  .   RESTORE THE REGS WE CHANGED
         AIF   (NOT &XIO).XOUT2    SKIP SPM IF THIS WAS AN INPUT
         SPM   R14 .               RESTORE THE CONDITION CODE
.XOUT2   B     XIORETRN .          RETURN TO CALLING XIOBLOCK
&X.ABD3  WTO   ' &XLABEL ABEND 300-ILLEGAL ADDRESS-SEE REG 2',         X
               ROUTCDE=11
&X.ABD1  ABEND 300,DUMP
.*
         SPACE 2
&X.SAV1  DS    9F .                AREA TO PRESERVE REGS IN
&X.OPAD  DC    V(XXXXOPEN) .       ADDRESS OF SUPEROPEN ROUTINE
&X.OPBK  XOPENBLK &X.DCB,&XLABEL,&DDNAME,RECFM=&RECFM,LRECL=&LRECL,    #
               BLKSIZE=&BLKSIZE,BUFNO=&BUFNO,XOP=&XOP
.XNODD   AIF   (&XIO).XOUT3        SKIP IF OUTPUT
.*
&X.MOV   MVC   0(0,R2),0(R1) .     R1==> BUFFER, EXECUTE SUPPLIES LENGT
&X.DCB   DCB   DSORG=PS,MACRF=GL,EODAD=&X.EOF
         AGO   .XEXIT
.*
.XOUT3   ANOP
&X.BUF   DC    CL(&LRECL)' ' .     OUTPUT I/O BUFFER AREA
&X.BLNK  DC    CL(&LRECL)' ' .     FOR REBLANKING OUTPUT BUFFER
&X.MOV   MVC   &X.BUF(0),0(R2)  .  MOVE RIGHT NUMBER OF CHARS TO BUFFER
&X.MOV1  MVC   &X.BUF(0),&X.BLNK   EXECUTED MOVE TO REBLANK BUFFER
&X.DCB   DCB   DSORG=PS,MACRF=PM
.XEXIT   DROP  R13,R14 .           KILL LEFTOVER ADDRESSING
.*
         AIF   (&XIOGNST).XXEXIT   SKIP IF ALREADY GEND XIOBLOCK
&XIOGNST SETB  (1)                 SHOW WE'VE GENERATE XIOBLOCK
         EJECT
* * * * * XIOBLOCK - CONTROL BLOCK SET UP BY XREAD/XPRNT/XPNCH  * * * *
XIOBLOCK DSECT
         DS    V .                 @ I/O ROUTINE
         DS    3F                  AREA FOR REGS 15-0 TO BE SAVED
XIOLENG  DS    AL2 .               LENGTH OF RECORD, (CODES-FUTURE USEQ
XIORETRN LM    14,0,4(14)          RETURN CODE FOR RESTORING REGISTERS
.XXEXIT  MEND
