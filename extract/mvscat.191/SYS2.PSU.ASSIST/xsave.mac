         MACRO
&LABEL   XSAVE &RGS=(14-12),&BR=12,&SA=*,&ID=*,&TR=*,&REEN=,&OPT=,&AD=
.** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*--> MACRO: XSAVE      EXTENDED SAVE MACRO - OS LINKAGE.             *
.*                                 JOHN R. MASHEY - FEB 1970 - V.4.0  *
.*       EXTENDED SAVE MACRO - SEE PSU CC WRITEUP - XSAVE/XRETURN     *
.*       FOR DESCRIPTION OF ARGUMENTS FOR THIS MACRO                  *
.*       USES MACROS: GETMAIN,XCHAR,XIDENT,XLOOK,XMUSE,XSRNT,XSRTR    *
.** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         GBLA  &XXLOOK             RETURN VARIABLE FROM XLOOK MACRO
         GBLB  &XSAVEST            =0 TRACE GEN OK, =1 NO TRACE DONE
         GBLC  &XSAVE,&XCSECT,&XXCHAR  STD NAME,CSECT NAME,XCHAR VAR
         LCLA  &I                  LOCAL COUNTER
         LCLB &XNSECT              FLAG FOR NEW CSECT
         LCLC  &B1,&BT             1ST BASE,LAST 2 CHARS OF 1ST BASE
&B1      SETC  '&BR(1)'            GET FIRST OR ONLY BASE IN EASIER NAM
         XCHAR &B1,2               GET LAST 2 CHARS OF BASE REG
&BT      SETC  '&XXCHAR'           GET LAST 2 CHARACTERS
&XNSECT  SETB  ('&SYSECT' NE '&XCSECT')      NOTE IF NEW CSECT NEEDED
&XCSECT  SETC  '&SYSECT'           SET TO SYSECT, FOR NORMAL USE
.*                                                                    *
.*       CHECK OPT FIELD - GENERATE TITLE AND/OR ENTRY OR CSECT       *
.*       STATEMENTS, DEPENDING ON CONTENTS OF OPT FIELD, IF USED.     *
.*                                                                    *
         AIF   (T'&OPT EQ 'O').XNOPS         SKIP IF OPT UNUSED
         XLOOK TITLE,&OPT           WAS TITLE OPTION USED
         AIF   (&XXLOOK EQ 0).XNTITL         SKIP IF TITLE NOT USED
         AIF   (N'&OPT EQ 1).XNOPS SKIP IF TITLE ONLY
        TITLE  '*** &LABEL ***'
.XNTITL  XLOOK ENTRY,&OPT           WAS ENTRY USED
         AIF   (&XXLOOK EQ 0).XTRCS         SKIP IF NOT USED
         AIF   ('&LABEL' EQ '').XENTE        SKIP TO ERR IF NO LABEL
         ENTRY &LABEL  .            NOTE XSAVE ENTRY OPTION
         AGO   .XNOPS
.XENTE   MNOTE 4,'**XSAVE- OPT=ENTRY USED WITHOUT LABEL-OPTION IGNORED'
         AGO   .XNOPS
.XTRCS   XLOOK CSECT,&OPT           CHECK FOR CSECT OPTION
         AIF   (&XXLOOK EQ 0).XTRCS1        SKIP IF OPTION NOT THERE
&LABEL   CSECT
&XCSECT  SETC  '&LABEL'            SET THIS TO SHOW NEW CSECT
&XNSECT  SETB  (1)                  NOTE THAT NEW CSECT IS NEEDED
         AGO   .XENT1               SKIP OVER &LABEL DEFN
.XTRCS1  MNOTE 0,'**XSAVE- UNKNOWN OPT=&OPT- IGNORED'
.*                                                                    *
.*       CREATE STATMENT LABEL IF ANY. IF IDENTIFIER REQUESTED,USE    *
.*       SPECIFIED IDENTIFIER,STATEMENT LABEL,OR CSECT NAME IN XIDENT *
.*       TO GENERATE CORRECT IDENTIFIER WITH BRANCH AROUND IT.        *
.*                                                                    *
.XNOPS   SPACE 2
&LABEL   DS    0H .                DEFINE LABEL,MAKE SUREE ALIGNED
.XENT1   USING *,15 .              FOR TEMPORARY ADDRESSIBILITY
         AIF   ('&SA' EQ '*' OR '&SA' EQ 'NO').XCHKS1 SKIP IF NO CHANGE
&XSAVE   SETC  '&SA'                EXPLICIT NEW SAVE AREA NAME
         AGO   .XSAOK
.XCHKS1  AIF   ('&XSAVE' NE '').XCHKS2       SKIP IF NOT NULL
&XSAVE   SETC  '$PR#&SYSNDX'        SET UP DEFAULT SAVE AREA NAME
         AGO   .XSAOK
.XCHKS2  AIF   (NOT &XNSECT).XSAOK SKIP IF NEW SAVE NOT NEEDED
&XSAVE   SETC  '&XCSECT'(1,3).'#&SYSNDX'     DEFAULT SAVE AREA NAME
.*                                                                    *
.XSAOK   AIF   ('&ID' EQ 'NO').XID3 SKIP IF NO ID WANTED
         XIDENT &ID,&LABEL,&XCSECT,$PRIVATE CALL TO SET UP IDENT
.*                                                                    *
.*       IF TR OPTION IN EFFECT, CALL XSRTR TO GENERATE RIGHT CODE,   *
.*       THEN HAVE XSRNR GENERATE CODE TO SAVE RANGES OF REGISTERS    *
.*                                                                    *
.XID3    AIF   (&XSAVEST OR '&TR' EQ 'NO').XNOTR       SKIP IF NO TRACE
         XSRTR &TR,&LABEL,ENTERED  GET TRACE GENERATED
.XNOTR   AIF   ('&RGS' NE '(14-12)').XSRCAL SKIP IF NOT STANDARD
         STM   14,12,12(13) .      SAVE STANDARD REGISTER SET
         AGO   .XCHK13
.XSRCAL  AIF   ('&RGS' EQ 'NO').XCHK13       SKIP IF NO REGS SAVED
&I       SETA  1                   INITIALIZE COUNTER
.XSETUP  XSRNR ST,&RGS(&I)         CALL XSRNR WITH EACH REG SET
&I       SETA  &I+1                INCREMENT TO NEXT REGS SET
         AIF   (&I LE N'&RGS).XSETUP         CONTINUE PROCESSING RGS
.XCHK13  AIF   ('&BT' NE '13').XNORM1       NOT REG 13,DO NORMALLY
.*                                                                    *
.*       REGISTER 13 DOUBLE USAGE - THIS SECTION GENERATES CODE TO    *
.*       USE REGISTER 13 BOTH AS A BASE AND AS THE SAVE AREA POINTER. *
.*                                                                    *
         AIF   (T'&AD EQ 'O').XU2  SKIP TO NORMAL IF &AD OMITTED
         LR    14,13 .             SAVE @ OLD SAVE AREA BEFORE SETTING
         XMUSE &BR,&AD             HAVE ADCON SET UP
         ST    13,8(14) .          SAVE NEW POINTER INTO OLD SAVEAREA
         ST    14,4(13) .          SAVE OLD POINTER INTO NEW AREA
         AGO   .XEND1              GO FINISH UP
.XU2     CNOP  0,4
         ST    13,&XSAVE+4 .       SAVE OLD SA POINTER INTO NEW AREA
         BAL   13,&XSAVE+72 .      SET UP 13, BRANCH AROUND SA
         XMUSE &BR                 SET UP WHATEVER USING REQUIRED
&XSAVE   DC    18F'0'  .           SAVE AÞEA
.XU3     L     15,&XSAVE+4 .       GET OLD SA POINTER BACK TO SET LINKS
         ST    13,8(15) .          STORE NEW POINTER IN OLD AREA
         AGO   .XEND1              CHECK NUMBER OF BR'S,GET LA'S SET UP
.*                                                                    *
.XNORM1  AIF   (T'&REEN EQ 'O').XNORM2       SKIP OVER REENTRANT
.*                                                                    *
.*       REENTRANT ENTRY CODE GENERATION - THIS GENERATES CODE TO     *
.*       ACQUIRE SPACE FOR SAVEAREA(72 BYTES) + AS MUCH MORE SPACE    *
.*       AS IS SPECIFIED IN REEN PARAMATER, IF USED.                  *
.*                                                                    *
         AIF   ('&TR' EQ 'NO' OR &XSAVEST).XGOK        MAKE SURE REENT
         MNOTE 0,'**XSAVE- USE OF TR OPTION IMPLIES NON-REENTRANT CODE'
.XGOK    ANOP
*        GETMAIN R,LV=8*((&REEN+79)/8)       GET SPACE ROUNDED TO D
         GETMAIN R,LV=8*((&REEN+79)/8) .GET CORE ROUNDED TO DBLWRD
         ST    13,4(1) .           STORE OLD POINTER IN NEW AREA
         ST    1,8(13) .           STORE (EW POINTER IN OLD AREA
         LR    &B1,1 .             SAVE VALUE OF NEW SAVE POINTER
         LM    0,1,20(13) .        RESTORE PREVIOUS VALUES OF REGS
         LR    13,&B1 .            POINT 13 TO NEW SAVE AREA
         AGO   .XNEWBS             GO GENERATE NEW BALR,USING
.*                                                                    *
.*       NORMAL,NON-REENTRANT ENTRY CODE SECTION.                     *
.*                                                                    *
.XNORM2  AIF   ('&SA' EQ 'NO').XNEWBS        SKIP IF NO SAVE AREA
         ST    13,&XSAVE+4 .       SAVE OLD POINTER IN NEW AREA
         AIF   ('&BT' NE '15').XSN15         SKIP IF NOT 15
         LA    13,&XSAVE .         GET ADDRESS OF NEW SAVE AREA
         L     &B1,&XSAVE+4 .      GET OLD SAVE POINTER BACK
         AGO   .XSOLD              GO SAVE NEW POINTER
.XSN15   LR    &B1,13 .            MOVE OLD POINTER OVER
         LA    13,&XSAVE    .      ADDRES> OF NEW SAVE AREA
.XSOLD   ST    13,8(&B1) .         SAVE NEW POINTER IN OLD AREA
.*             SET UP BALR, LA'S IF REQUIRED, AND USING STATEMENT.    *
.XNEWBS  AIF   ('&BT' NE '15' OR N'&BR GT 1).XSET2  SKIP IF 15
         AIF   ('&REEN' EQ '' AND '&SA' EQ 'NO' AND '&AD' EQ '').XEND2
.XSET2   AIF   (T'&AD NE 'O').XSET3          SKIP BALR IF ADCON USED
         BALR  &B1,0 .             SET UP NEW BASE REGISTER
.XSET3   XMUSE &BR,&AD             SET UP USINGS, ADCON IF NEEDED
.XEND1   AIF   (N'&BR EQ 1).XEND2  IF ONLY 1 BASE,DON'T CALL XMUSE
&I       SETA  2                    INITIALIZE
.XA2A    LA    &BR(&I),4095 .       LOAD IN ADDRESS
         LA    &BR(&I),1(&BR(&I),&BR(&I-1))  .   SET USING VALUES
&I       SETA  &I+1                 INCREMENT TO NEXT BASE
         AIF   (&I LE N'&BR AND &I LE 4).XA2A         LOOP FOR # BASES
.XEND2   SPACE 1
         MEND
