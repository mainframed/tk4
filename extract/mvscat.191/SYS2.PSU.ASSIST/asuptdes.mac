>>>>>>>>>>>>>>>  UPDATES TO GO FROM 3.0/A TO 3.0/B
>>>>>>>>>>>>>>>
//*
//*      JOBA: RUN UPDATES SOURCE1 - 5 ACCROSS ASSIS5 TO ASSIS8
//*
//*
//*      ALSO COPY SOURCE 6 FROM ASSIS7
//*
//*
/*TAPE ASSIS5,READ
/*TAPE ASSIS7,WRITE
/*TAPE ASSIS8,WRITE
/*INCLUDE JRM04.$PUPDATE
/*INCLUDE JRM04.$PTAPEIN
//S1 EXEC $PUPDATE,DSN=SOURCE1,VOL1=ASSIS5,L1=11,VOL2=ASSIS8,L2=11
//SYSUT1 DD *
./     CHANGE
         TITLE 'ASSIST VERSION 3.0/B - MARCH 1974'
./ DELETE SEQ1=00035350,SEQ2=00035350
&LABEL   DC    B'&BYTE',HL1'&IL'                                      L
.OPB3B   AIF   ((&IL EQ 2) AND ('&INS' NE 'XOPC')).OPB3E  SKIP IF RR
         AIF   ('&D2B' EQ 'RR4').OPB3E     SKIP IF RR4                L
&LABEL   DC    B'10000000',XL3'0',A(&ROUTINE)                         L
&$BTCC(2) SETC '$JOB '             JOB BEGINNING INDICATOR            M
&$BTCC(3) SETC '$ENTRY '           BEGIN DATA CARD: SET = '' IF NONE  M
&$BTCC(4) SETC '$STOP '            TERMINATOR CARD: SET = '' IF NONE  M
&$CMPRS  SETB  0                   NOT ALLOW CMPRS OPTION             L
&$EXINT  SETB  1                   USE EXTENDED INTERPRETER           L
./ DELETE  SEQ1=02235510,SEQ2=02235510
&$FREE   SETA  30720               RETURN 30K TO OS/360               L
&$REPL   SETA  0                   NO REPLACEMENT ALLOWED             L
&$XREFDF(1) SETA  3                PSU TESTING                        L
         AIF   (NOT &$EXINT).ECOVER
ECEM360  EQU   B'00000100'         (ECPRFLG2)==>  MACHINE = 360
ECEM370  EQU   B'00001000'         (ECPRFLG2)==>  MACHINE = 370
ECSPISET EQU   B'10000000'         (ECPRFLG3)==> A PSEUDO SPIE IS SET
ECINHDST EQU   B'01000000'         (ECPRFLG3)==> INTERRUPT HANDLING ST
ECNOSPI  EQU   B'00000000'         (ECPRFLG3)==> NO SPIE INTERRUPT SET
ECLKADR  EQU   B'00000001'         (ECPRFLG4)==> CLOCK EXIT ADDR SET
ECPRTRAL DS    A                   BEGINNING (LOW) @ OF TRACE         M
ECPRTRAH DS    A                   ENDING (HIGH) @ OF TRACE           M
ECPRMODL DS    A                   BEGINNING (LOW) @ OF CHECK FACILITY
ECPRMODH DS    A                   ENDING (HIGH) @ OF CHECK FACILITY
ECPRICL  DS    A                   IECF LOW @ COMPARATOR (BEGINNING)  M
ECPRICH  DS    A                   IECF HIGH @ COMPARATOR (ENDING)    M
./ DELETE SEQ1=03710455,SEQ2=03710455
.ECOVER  ANOP
         DS    0D                  ROUND LENGTH TO DOUBLE WORD BOUNDARY
ECOPEX   DS    0C                  2ND BYTE OF EXTENDED OP CODE
./  DELETE  SEQ1=03748000,SEQ2=03748000
//S2 EXEC $PUPDATE,DSN=SOURCE2,VOL1=ASSIS5,L1=12,VOL2=ASSIS8,L2=12
//SYSUT1 DD *
./     CHANGE
         AIF   (&$FREEMN NE 0).ASZRRR SKIP IF THERE IS FREE LOWER LIMIT
         BNH   *+6                 SKIP IF OKAY, FREE <= GOTTEN       R
         SR    R0,R0               ZERO OUT TO FREE ZERO
         AGO   .ASZQQQ             JUMP AROUND FREE
.ASZRRR  ANOP
         BNH   *+14                SKIP IF OKAY, FREE <= GOTTEN
         CH    R15,=H'&$FREEMN'    COMPARE GOTTEN WITH MIN TO FREE
         BH    *+14                SKIP IF GOT MORE THAN THE MINIMUM
         BR    R14                 IF NOT, DON'T GIVE ANY BACK
         CH    R0,=H'&$FREEMN'     SEE IF FREE LENGTH > MINIMUM
         BNL   *+8                 IF FREE > MIN GIVE BACK FREE
         LH    R0,=H'&$FREEMN'     GIVE BACK THE MINIMUM
         AIF   (NOT &$EXINT).ASPL35    **********NEW INTERPRETER******
         AIF   (&$EXINT).EXYZ      SKIP IF USING EXTENDED INTERPRETER
XXDKUDCB DCB   DDNAME=&$IOUNIT(5),EODAD=XXDKEOF,RECFM=FB,              X
               EXLST=XXDKEXLS,SYNAD=XXDKSYND,DSORG=PS,NCP=&$BUFNO,     X
               MACRF=(RP,W)
./ DELETE SEQ1=07938150,SEQ2=07938300
         CLI   ECBSOP,0            WAS THIS ENTRY AN INSTRUCTION
         BAL   R8,XXSNBLNC         CLEAR XXLABEL OF GARBAGE
         LTORG
XXAS7HD  DC    CL121'-** TRACE OF LAST 10 BRANCH INSTRUCTIONS EXECUTED:X
                PSW BITS SHOWN ARE THOSE BEFORE CORRESPONDING INSTRUCTIX
               ON DECODED ***'
./ DELETE SEQ1=08560000,SEQ2=08560000
//S3 EXEC $PUPDATE,DSN=SOURCE3,VOL1=ASSIS5,L1=13,VOL2=ASSIS8,L2=13
//SYSUT1 DD *
./     CHANGE
         BZ    ESERIND             FLAG ERROR, IF SYMBOL TOO LONG
         CLI   ICYOP,X'01'         IS THIS AN XOPC INSTRUCTION        M
         BE    ICSI1               YES, USE IMMEDIATE FIELD PART OF SIM
         L     RC,AVMACLIB         GET BEGIN ADDRESS OF MACRO LIST    M
         USING MACLIB,RC           NOTE USING ON MACRO LIST DSECT     M
         SR    RB,RB               ZERO FOR SEARCH END LIST           M
         CL    RB,MCLIBNXT         IF LIST HEADER IS NULL             M
         BE    MOCLBOUT            THEN NO OPEN - JUST QUIT           M
         DROP  RC                  CLEAR USING                        M
         XCALL XXXXLBOP            CALL TO OPEN LIBRARY DCB           M
         OPG   XOPC,$RSO,1         EXTENDED USER DEBUG CONTROL INSTR
         LA    RW,SYRETB           SET UP FOR BRANCH LATER            L
         LA    RW,SYRET            SET UP FOR BRANCH LATER            L
         LM    RX,RB,SYREGS        GET WHOLE BLOCK OF REGS            L
         BCR   E,RW                BE->SYRETB(PASS1),SYRET(PASS2)     L
         SPACE 1                                                      L
*        ENTERS PASS 2 WHEN SYMBOL IS IN SMBL TABLE (RB=0)            L
SYRET    EQU   *                   ENTER WHEN SYMBOL PRESENT          L
         AIF   (NOT &$XREF).NOXRF17                                   L
         TM    AVXRFLAG,AVXRON     FLAG MAY HAVE BEEN DISARMED(XRCOLL)L
         BZ    SYRETB              RETURN IF NOT ON (=0)              L
         MVC   AVFWORK1(1),AVXRFLAG SET UP FOR REF COLLECT TESTING    L
         NC    AVFWORK1(1),SYFLAGS  AND WITH SD= BITS                 L
*  SEE IF MODIFY OR FETCH                                             L
         TM    AVXRTYPE,AVXRFTCH   FETCH REFERENCE                    L
         BZ    SYCKMOD             NO,MODIFY REF                      L
         TM    AVFWORK1,AVXRSRFT   FETCH REFS?                        L
         BZ    SYRETB              NO, RETURN                         L
         B     SYXRCALL            GO COLLECTBREFS                    L
SYCKMOD  TM    AVFWORK1,AVXRSRMD   COLLECT MOD REFS?                  L
         BZ    SYRETB              NO,RETURN                          L
SYXRCALL EQU   *                   CALLING XRCOLL TO COLLECT REFERENCEL
         $CALL XRCOLL              CALL COLLECTIMG ROUTINE            L
         SR    RB,RB               SET RETURN CODE                    L
.NOXRF17 ANOP                                                         F
         B     SYRETB              GO RETURN                          L
         LA    RY,8                WILL NEED 8 BYTES                  L
         LA    RC,SYMBOL-SYMSECT(RY)  GET LENGTH OF ENTRY             L
         STC   RY,*+5              MOVE LENGTH INTO MVC               L
         IC    RY,SYFLAGS          PREPARE TO OR FLAGS                L
         OR    RB,RY               SET PROPER BITS IN SYFLAGS         L
./ DELETE  SEQ1=19442000,SEQ2=19442950  RELOCATED ABOVE SYENTER       L
         AIF (NOT &$XREF).NOXRF18                                     F
         $RETURN RGS=(R14-R6),SA=*     RETURN IF XREF IS ON           F
         AGO   .NOXRF99                                               F
.NOXRF18 ANOP                                                         F
         $RETURN RGS=(R3-R6),SA=NO     RETURN IF XREF IS OFF          F
.NOXRF99 ANOP                                                         F
./ DELETE SEQ1=19468000,SEQ2=19468000                                 L
SYRY     DC    F'4'                FIRST GUESS FOR ROUNDED SYMBL LEN  L
         PRINT OFF
         MVI   AVXRFLAG,X'00'      DISARM FLAG NEVER TO RETURN        L
//S4 EXEC $PTAPEIN,DSN=SOURCE4,VOL1=ASSIS7,L1=4,VOL2=ASSIS8,L2=14
//S5 EXEC $PTAPEIN,DSN=SOURCE5,VOL1=ASSIS7,L1=5,VOL2=ASSIS8,L2=15
//S6 EXEC $PTAPEIN,DSN=SOURCE6,VOL1=ASSIS7,L1=6,VOL2=ASSIS8,L2=16
>>>>>>>>>>>>>>>  UPDATES TO GO FROM 3.0/B TO 4.0/A
>>>>>>>>>>>>>>>
//*  FILE AST01.FIXES
/*TAPE TXMAST,W
/*TAPE ASSIS8,R
/*LOG
//FIXES PROC LABOLD=100,LABNEW=100,DSN=NULLFILE,
//  TAPOLD=ASSIS8,TAPNEW=TXMAST
// EXEC PGM=IEBUPDTE
//SYSPRINT DD SYSOUT=A
//SYSUT1 DD UNIT=2400,VOL=SER=&TAPOLD,LABEL=&LABOLD,
// DSN=&DSN,DISP=(OLD,PASS)
//SYSUT2 DD UNIT=2400,VOL=SER=&TAPNEW,LABEL=&LABNEW,
// DSN=&DSN,DISP=(NEW,PASS),SEP=SYSUT1,
// DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
// PEND
// EXEC FIXES,LABOLD=06,LABNEW=06,DSN=XMSOURCE
//SYSIN DD *
./ CHANGE
XXOPSAVE DS    (RBASE+3)F         RESERVE SPACE FOR R14,R15,R0,R1-RBASE
./ ENDUP
// EXEC FIXES,LABOLD=11,LABNEW=11,DSN=SOURCE1
//SYSIN DD *
./ CHANGE
         TITLE 'ASSIST VERSION 4.0/A - MARCH 1975'
*                                                                     *
*        4.0/A     3/01/75         CLEANS UP 3.0/B                    *
*                                  EXTENDED INTERP., ETC              *
*           PREPARED BY THOMAS MINSKER                                *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
&$BTCC(2)  SETC  'JOB'            JOB BEGINNING INDICATOR       CPP
&$BTCC(4)  SETC  'STOP'           TERMINATOR INDICATOR          CPP
&$CMPRS  SETB  (1)                ALLOW 'CMPRS' OPTION          CPP
&$GENDAT SETC   '04/25/75'         CURRENT GENERATION DATE
./ DELETE SEQ1=02242000,SEQ2=02242000
&$REPL   SETA  2                  ALLOW FULL REPL. OPTIONS      CEH
&$VERSLV SETC  '4.0/A'             CURRENT ASSIST VERSION
&$BATCH  SETC  'BATCH'            DEFAULT OF DOS IS BATCH       CEH
&$BATCH  SETC  'NOBATCH'          DEFAULT FOR OS IS NOBATCH     CEH
./ DELETE SEQ1=02264060,SEQ2=02264060
./ ENDUP
// EXEC FIXES,LABOLD=12,LABNEW=12,DSN=SOURCE2
//SYSIN DD *
./ CHANGE
XXDKUDCB DCB  DDNAME=&$IOUNIT(5),EODAD=XXDKEOF,RECFM=FB,EXLST=XXDKEXLS,#
./ ENDUP
// EXEC FIXES,LABOLD=13,LABNEW=13,DSN=SOURCE3
//SYSIN DD *
./ CHANGE
./ DELETE SEQ1=19488199,SEQ2=19488199
./ ENDUP
// EXEC FIXES,LABOLD=14,LABNEW=14,DSN=SOURCE4
//SYSIN DD *
./ CHANGE
         AIF   (&$REPL LT 2).RGNERE2 SKIP IF REPL ENTRIES MAY NOT CALL
*                                     ASSIST SUBROUTINES
./ ENDUP
// EXEC FIXES,LABOLD=16,LABNEW=16,DSN=SOURCE6
//SYSIN DD *
./ CHANGE
./ DELETE SEQ1=83376000,SEQ2=83376000
EIOC6A   EQU   *                  NO NEED FOR SEPARATE CASES    CEH
         L     RIA,EIRIA          RELOAD ADDR. OF NEXT INSTR.   CEH
         ST    RIA,EIRIA          SAVE CURRENT INSTR. ADDR.     CEH
EIFINRR  EQU   EIFIN              RR NOW MERGES WITH OTHER      CEH
         ST    RIA,EIRIA          SAVE FOR RESTORING LATER      CEH
./ DELETE SEQ1=84018000,SEQ2=84020000
         MVC   EIWORK(1),EICTB3   STORE CONTROL BYTE IN WORK  CPP
./ DELETE SEQ1=84070000,SEQ2=84070000
         CLI   ECOP,X'90'         IS THIS A STM?                CPP
         BE    EI4JUMP            IF YES SKIP FAKING CODE       CPP
         CLI   ECOP,X'98'         IS THIS AN LM?                CPP
         BE    EI4JUMP            IF YES, SKIP FAKING CODE      CPP
         CLI   ECOP,X'44'         IS THIS AN EX?                CPP
         BE    EI4JUMP            IF YES, SKIP FAKING CODE      CPP
         B     EIFINRR            GET NEXT INSTR                PSU.
         B     EIFINRR            RETURN FOR NEXT INSTR.        CEH
./ ENDUP
//*>>>>>>>>>>>>  UPDATES TO GO FROM 4.0/A TO 4.0/A1
//*>>>>>>>>>>>>
&$GENDAT SETC  '08/29/75'          CURRENT GENERATION DATE
&$VERSLV SETC  '4.0/A1'            VERSION LEVEL (CEH&CPP&TXM 8/29/75)
         MVI   ECSYSMSK,X'FF'      SET CHANNEL MASKS TO INTERRUPT CEH
         MVI   ECKYAMWP,X'C5'      SET KEY=C, AMWP=0101         CEH
         MVI   AJORECNT+3,1        ALLOW ONE PRINT LINE FOR AM005 CEH
ASH1HD   DC    C'1*** ASSIST &$VERSLV-&$GENDAT'                 CPP
         DC    C'  &$MCHNE/&$MODEL:&$SYSTEM'                    CPP
         DC    C'  INS=S',(&$DECSA)C'D',(&$FLOTA)C'F',(&$PRIVOP)C'P'
         DC    (&$S370A)C'7'       SUPPORT DEC. FLOAT, PRIV, 370 CPP
         DC    C'/X=',(&$XIOS)C'B',(1-&$XXIOS)C'G',(&$HEXI*&$HEXO)C'H'
         DC    (&$EXINT)C'O'       SUPPORT BASIC,XGET,HEXS,XOPC CPP
         DC    ((1-(&$HEXI+&$HEXO+&$XIOS+&$EXINT+3)/4)*&$XXIOS)C'NONE'
         DC    C', CHECK/TRC/=&$TIMER&$RECORD&$COMNT'           CPP
         DC    C', OPTS=',(&$CMPRS)C'C',((&$DISKU+1)/2)C'D'     CPP
         DC    (&$KP26)C'K',(&$MACROS)C'M',(&$PAGE)C'P'         CPP
         DC    ((&$REPL+1)/2)C'R',(&$XREF)C'X'                  CPP
         DC    C'  PENN STATE UNIV ***'                         CPP
./ DELETE SEQ1=04456000,SEQ2=04456000
./ DELETE SEQ1=07151655,SEQ2=07151655
         TITLE 'XXXXHEXO - MODULE TO SUPPORT XHEXO PSEUDO-OP'   CPP
         PRINT NOGEN               TURN OFF AFTER XGPGEN'S      CPP
         USING ECSTACKD,R1         NOTE DSECT FOR EACH BSTACK ENTRY CEH
         L     R1,ECSTLINK         GET @ NEXT BRANCH ENTRY      CEH
         CLI   ECOP,0              WAS THIS ENTRY AN INSTR.     CEH
         NI    ECSTCCPM,X'3F'      ZERO OUT ILC(NOT ALREADY SAVED) CEH
XXASBIN1 OI    ECSTCCPM,$CHN       OR BUILT-UP ILC FROM LAST INSTR CEH
         UNPK  XXAS5I1(5),ECOP(3)  CONVERT OPCODE, REGS. & LEN  CEH
         CLI   ECOP,X'40'          WAS THIS AN RR INSTR.        CEH
         UNPK  XXAS5I2(5),ECBD(3)  UNPACK ONLY BASE-DISPL.      CEH
         UNPK  XXAS5CC(3),ECSTCCPM CONVERT GOOD ILC-CC PM OF PSW CEH
         UNPK  XXAS5AD(7),ECSTIADD+1(4)    CONVERT BR INST. ADDR. CEH
         L     R1,ECSTLINK         GET NEXT ENTRY IN TABLE      CEH
         XSNAP LABEL='ASSIST ABEND-SEND DECK TO SYSTEMS: 3-12,PSW,14-2,#
               AVTAB',STORAGE=(*0(R1),*28(R1),*AVADDLOW,*AVWXEND) CPP
*.  RD = LENGTH-1 OF CONSTANT (WAS IN RB ON ENTRY)              CPP
CC2PAD   LR    RD,RB               SAVE LENGTH-1 OF CONSTANT    CPP
         SR    RB,RE               RB=LENGTH-1 OF PAD, IF ANY   CPP
         LA    RE,AVCONBLD(RE)     RE=@ OF FIRST BYTE TO BLANK  CPP
         MVC   0($CHN,RE),AWBLANK  PAD--BLANK OUT ENOUGH        CPP
IDTITLE  EQU   *                   PROCESS TITLE STATEMENT      CPP
         LA    RA,1(RA)            RA=>1ST BYTE OF TITLE (AFTER ') CPP
         SR    RB,RB               CLEAR FOR INSERT             CPP
         IC    RB,RCMASK           GET LENGTH-1 OF TITLE        CPP
         $CALL CCCON2              EVALUATE OPD. (SAME AS C-TYPE DC) CP
*        COMMENT, PRINT, EJECT (BUT NOT TITLE-CPP 8/11/75)
./ DELETE SEQ1=16556780,SEQ2=16556990
         AIF   (&$XXIOS).OP4TSK1   SKIP IF NO XGETS ALLOWED     CPP
.OP4TSK1 AIF   (NOT &$EXINT).OP4TSK2  SKIP IF NO XOPC'S         CPP
.OP4TSK2 AIF   (&$XXIOS).OP4TSK    SKIP IF NO XPUTS ALLOWED     CPP
         OPG   TITLE,$ITITLE+$IB,IBNONAM,0 TITLE (-IBMOPRCT  CPP 8/11)
         AIF   (NOT &$XIOS).OPNOXIO  SKIP IF NO X-I/O PSEUDOS   CPP
OUCM$LT  EQU   (&$PRTSIZ-3)/2      TOTAL # BYTES SAVED PER STMT. CPP
* XRPMSG EQU   XRPRRET  *****      RETURN ON RECORDS EXCEEDED   CEH
XRPMSG   EQU   XRPRRET             RETURN ON RECORDS EXCEEDED   CEH
         PRINT NOGEN               TURN OFF GENERATION IN REST  CPP
MXSYERMS $MSG  229,' ASSIST CANNOT EXPAND--SIMPLIFY STMT OR USE .' CPP
./ DELETE SEQ1=83000000,SEQ2=83000000
         $GET  0(RAD1),(RAD2)      DO GET INPUT                 CEH
         $PUT  0(RAD1),(RAD2)      DO PUT OUTPUT                CEH
EIXGET   EQU   EIOC1               MAKE XGET AN ERROR           CPP
EIXPUT   EQU   EIOC1               MAKE XPUT AN ERROR           CPP
         EITAB  FPRS,360,4,4,NO,NM,CK,S,*,RR4,IX,FUL,E,O,EIFPRXST CEH
         EITAB XFPRS,360,4,8,NO,NM,CK,S,*,RR4,IX,DBL,E,O,EIFPRXST CEH
//*
//*>>>>>>>>>>> UPDATES TO GO FROM 4.0/A TO 4.0/A2
//**>>>>>>>>>>
&$GENDAT SETC  '12/02/75'          CURRENT GENERATION DATE
&$VERSLV SETC  '4.0/A2'            VERSION LEVEL (CEH,CPP,TXM 12/02/75)
./ DELETE SEQ1=03388000,SEQ2=03388000
         MVI   ECSYSMSK,X'FF'      SET CHANNEL MASKS TO INTERRUPT CEH
         MVI   ECKYAMWP,X'C5'      SET KEY-C, AMWP=0101           CEH
         MVI   AJORECNT+3,1        ALLOW ONE PRINT LINE FOR AM005 CEH
ASH1HD   DC    C'1*** ASSIST &$VERSLV-&$GENDAT'                 CPP
         DC    C'  &$MCHNE/&$MODEL:&$SYSTEM'                    CPP
         DC    C'  INS=S',(&$DECSA)C'D',(&$FLOTA)C'F',(&$PRIVOP)C'P'
         DC    (&$S370A)C'7'       SUPPORT DEC. FLOAT, PRIV, 370 CPP
         DC    C'/X=',(&$XIOS)C'B',(1-&$XXIOS)C'G',(&$HEXI*&$HEXO)C'H'
         DC    (&$EXINT)C'O'       SUPPORT BASIC,XGET,HEXS,XOPC CPP
         DC    ((1-(&$HEXI+&$HEXO+&$XIOS+&$EXINT+3)/4)*&$XXIOS)C'NONE'
         DC    C', CHECK/TRC/=&$TIMER&$RECORD&$COMNT'           CPP
         DC    C', OPTS=',(&$CMPRS)C'C',((&$DISKU+1)/2)C'D'     CPP
         DC    (&$KP26)C'K',(&$MACROS)C'M',(&$PAGE)C'P'         CPP
         DC    ((&$REPL+1)/2)C'R',(&$XREF)C'X'                  CPP
         DC    C'  PENN STATE UNIV ***'                         CPP
./ DELETE SEQ1=04456000,SEQ2=04456000
./ DELETE SEQ1=07151655,SEQ2=07151655
         TITLE 'XXXXHEXO - MODULE TO SUPPORT XHEXO PSEUDO-OP'   CPP
         PRINT NOGEN               TURN OFF AFTER
         DROP  R9                  DROP LEFTOVER USING          CPP
         USING ECSTACKD,R1         NOTE DSECT FOR EACH BSTACK ENTRY CEH
         L     R1,ECSTLINK         GET @ NEXT BRANCH ENTRY      CEH
         CLI   ECOP,0              WAS THIS ENTRY AN INSTR.     CEH
         NI    ECSTCCPM,X'3F'      ZERO OUT ILC(NOT ALREADY SAVED) CEH
XXASBIN1 OI    ECSTCCPM,$CHN       OR BUILT-UP ILC FROM LAST INSTR CEH
         UNPK  XXAS5I1(5),ECOP(3)  CONVERT OPCODE, REGS. & LEN  CEH
         CLI   ECOP,X'40'          WAS THIS AN RR INSTR.       CEH
         UNPK  XXAS5I2(5),ECBD(3)   UNPACK ONLY BASE-DISPL.      CEH
         UNPK  XXAS5CC(3),ECSTCCPM CONVERT GOOD ILC-CC PM OF PSW CEH
         UNPK  XXAS5AD(7),ECSTIADD+1(4)    CONVERT BR INST. ADDR. CEH
         L     R1,ECSTLINK         GET NEXT ENTRY IN TABLE      CEH
         DROP  R10,R13             DROP REGISTERS NO LONGER USED CPP
         XSNAP LABEL='ASSIST ABEND-SEND DECK TO SYSTEMS: 3-12; PSW,14-2#
               ; AVTAB',STORAGE=(*0(R1),*28(R1),*AVADDLOW,*AVWXEND) CPP
*.  RD = LENGTH-1 OF CONSTANT (WAS IN RB ON ENTRY)              CPP
CC2PAD   LR    RD,RB               SAVE LENGTH-1 OF CONSTANT    CPP
         SR    RB,RE               RE=LENGTH-1 OF PAD, IF ANY   CPP
         LA    RE,AVCONBLD(RE)     RE=@ OF FIRST BYTE TO BLANK  CPP
         MVC   0($CHN,RE),AWBLANK  PAD--BLANK OUT ENOUGH        CPP
IDTITLE  EQU   *                   PROCESS TITLE STATEMENT       CPP
         LA    RA,1(RA)            RA=>1ST BYTE OF TITLE (AFTER ') CPP
         SR    RB,RB               CLEAR FOR INSERT            CPP
         IC    RB,RCMASK           GET LENGTH-1 OF TITLE       CPP
         $CALL CCCON2              EVALUATE OPD. (SAME AS C-TYPE DC) CP
./ DELETE SEQ1=16556720,SEQ2=16556750
         SR    RB,RB               YES, WAS TITLE; CLEAR FOR INSERT CP
         IC    RB,RCMASK           GET LENGTH-1 OF TITLE        CPP
./ DELETE SEQ1=16556900,SEQ2=16556900
         $SCPT RA,RSBSCAN          GET SCAN POINTER BACK       CPP
         AR    RA,R5               (R5=1) RA=>1ST BYTE TITLE   CPP
         $CALL CCCON2              ASSEMBLE AS IF C-TYPE CONST. CPP
*              RETURNS: RC=> ASSEMBLED TITLE, RD=LEN-1 OF TITLE CPP
         LA    RE,4                SHOW THIS WAS A TITLE        CPP
         B     MOIBOUTL            BRANCH TO PRINT OR STORE TITLE CPP
         LA    RE,2                SHOW THIS WAS A PRINT STMT.  CPP
         BE    MOIBOUTL            WAS PRINT; ALL REGS SET, PRINT CPP
MOIBOUTL LA    RB,$OULIST          SHOW THIS WAS A LISTING CTRL CPP
         AIF   (&$XXIOS).OP4TSK1   SKIP IF NO XGETS ALLOWED     CPP
.OP4TSK1 AIF   (NOT &$EXINT).OP4TSK2  SKIP IF NO XOPC'S         CPP
.OP4TSK2 AIF   (&$XXIOS).OP4TSK    SKIP IF NO XPUTS ALLOWED     CPP
         AIF   (NOT &$XIOS).OPNOXIO  SKIP IF NO X-I/O PSEUDOS   CPP
OUCM$LT  EQU   (&$PRTSIZ-3)/2      TOTAL # BYTES SAVED PER CMPRS STMT
* XRPMSG EQU   XRPRRET  *****      RETURN ON RECORDS EXCEEDED  CEH
XRPMSG   EQU   XRPRRET             RETURN ON RECORDS EXCEEDED  CEH
         PRINT NOGEN               TURN OFF GENERATION IN REST  CPP
MXSYERMS $MSG  229,' ASSIST CANNOT EXPAND--SIMPLIFY STMT OR USE .' CPP
./ DELETE SEQ1=83000000,SEQ2=83000000
         $GET  0(RAD1),(RAD2)      DO GET INPUT                  CEH
         $PUT  0(RAD1),(RAD2)      DO PUT OUTPUT         CEH
EIXGET   EQU   EIOC1               MAKE XGET AN ERROR           CPP
EIXPUT   EQU   EIOC1               MAKE XPUT AN ERROR           CPP
         EITAB  FPRS,360,4,4,NO,NM,CK,S,*,RR4,IX,FUL,E,O,EIFPRXST CEH
         EITAB XFPRS,360,4,8,NO,NM,CK,S,*,RR4,IX,DBL,E,O,EIFPRXST CEH
