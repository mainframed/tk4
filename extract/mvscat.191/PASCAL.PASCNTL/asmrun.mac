//PASCMON JOB (0904,0012,TIME,200,,1928),GERHARD,CLASS=E,MSGCLASS=C
/*NOSETUP    IGP001
/*JOBPARM K=130
/*RERUN
/*FETCH
//       EXEC  PGM=IEBGENER
//SYSPRINT DD DUMMY
//SYSIN DD DUMMY
//SYSUT2 DD UNIT=VIO,SPACE=(TRK,(1,1)),DISP=(,PASS),DSN=&&UP2,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SYSUT1  DD   *
./       CHANGE NAME=RUNTIME
*                                                                86176
*        CORRECTIONS FOR 0CX ABENDS DURING DCBOPEN, TIMER AND    86176
*              SYNAD EXIT PROCESSING.                            86176
*        G. POSTPISCHIL, EXPERT SYSTEM PROGRAMMING, INC.         86176
&SYSTEM  SETB  ('&SYSPARM' EQ 'SHORT')  ALLOW EASIER ASSEMBLY    86176
         GBLC  &FORTRAN      NAME OF FORTRAN INITIALIZATION      86178
&FORTRAN SETC  'VSCOM#'      SET TO VSCOM# OR IBCOM#             86178
         LM    R14,R15,ALOSTORE  GET ADDRESS AND LENGTH          86176
         LR    R0,R14        SET ZERO TO ANYTHING                86176
         SLR   R1,R1         CLEAR SOURCE LENGTH                 86176
         MVCL  R14,R0        CLEAR GOTTEN STORAGE                86176
         LR    R2,R13        SAVE R13 (PER FORT/VS APPL GUIDE)   86178
         L     R13,4(,R13)   PASS THE DADDY'S SAVE AREA          86178
         L     R15,=V(&FORTRAN)  SEE IF FORTLIB INIT. REQUIRED   86178
         LR    R13,R2        RESTORE OUR SAVE AREA               86178
         CLI   SPIEFLAG,0    DEBUGGING THE EASY WAY ?            86180
         BE    NOFORT        NO; ISSUE SPIE                      86180
         SPIE  0             CANCEL (NO SAVE) FORTRAN'S SPIE     86180
         STAE  0             CANCEL OLD FORTRAN'S STAE           86180
         ESTAE 0             CANCEL NEW FORTRAN'S ESTAE          86180
IFYVERRM DS    0H            VS FORTRAN                          86178
         ENTRY IFYVERRM,IFYVERRE                                 86178
IFYVERRE DS    0H            VS FORTRAN                          86178
         PUSH  USING                                             86176
         USING XLSTRTIN,R11  **FIX 0C1 IN STIMER EXIT***         86176
XLSTRTIN LR    R11,R15       SET LOCAL BASE                      86176
         LR    AE,R1         SET THE DCB ADDRESS                 86176
         LA    R1,DEFAULTS   SET INPUT AND INOUT DEFAULTS        86176
         USING IHADCB,AE     NOT QUITE FILE BLOCK                86176
         USING XLSTRTOT,R15                                      86176
XLSTRTOT L     R11,=A(XLSTRTIN)  SET COMMON BASE                 86176
         DROP  R15                                               86176
         LA    AE,0(,R1)     SAVE AND CLEAN THE DCB ADDRESS      86176
         LA    R1,DEFAULTS   SET DEFAULTS                        86176
         C     AE,=A(FILOUT+FILDCB)  'OUTPUT' FILE ?             86176
         POP   USING         RESTORE MAPPINGS                    86176
         AIF   (&SYSTEM).SYSXIT6                                 86178
         L     R15,=V(&FORTRAN)  FORTLIB PRESENT ?               86178
.SYSXIT6 ANOP  ,                                                 86178
         SPACE 1                                                 86176
*        ALL EXITS ARE CREATED EQUAL, BUT SOME ARE MORE EQUAL... 86176
*        THIS EXIT MAY BE ENTERED FROM CLOSE PROCESSING, WITH    86176
*              REGISTERS POINTING ANY OLD PLACE.                 86176
         PUSH  USING         SAVE EXISTING DEFINITIONS           86176
         USING SYNADRT,R15                                       86176
SYNADRT  SYNADAF ACSMETH=QSAM  SAVE REGISTERS AND FORMAT MSG     86178
         BALR  R11,0         SET LOCAL BASE                      86178
         DROP  R15                                               86178
         USING *,R11                                             86178
         LM    R10,R11,=A($PASCSP,$PASCSP+4096) SET COMMON BASE  86176
         USING $PASCSP,R10,R11   BASES FOR ERRMSGRT              86176
         L     R12,=A(ALOSTORE)  GET THE STACK GETMAIN RESULT    86176
         L     R12,0(,R12)   LOAD THE START ADDRESS              86176
         LA    R12,STACK-DYNSTORE(,R12)  POINT TO STACK START    86176
*BUT**** LA    R3,OUTPUT                                             #
*IT***** CR    AD,R3          OBVIOUSLY, AN ERROR WITH "OUTPUT" FILE #
*CAN**** BER   R14            CANT BE PRINTED, SO CONTINUE ABENDING  #
*        SYNADAF MOVED TO SYNADRT - RETURN ADDRESS IN R1         86178
         LA    R15,FILOUT+FILDCB  POINT TO 'OUTPUT' DCB          86176
         C     R15,132(,R1)  IS THE ERROR ON THE OUTPUT FILE ?   86176
         LA    R14,SYNADOUT  SET RETURN POINT FROM MSG WRITE     86176
         BNE   ERRMSGRT      NO                                  86176
         ICM   R2,15,SYNMSG  SAVE ERROR CODE AND LENGTH          86176
         MVC   SYNMSG(4),=Y(78+1+4)  SET NEW LENGTH, ZERO FLAGS  86176
         WTO   MF=(E,SYNMSG)  USE A WTO INSTEAD                  86176
         STCM  R2,15,SYNMSG  RESTORE ERROR CODE AND LENGTH       86176
SYNADOUT SYNADRLS ,          FREE THE SAVE AREA, AND RESTORE R14 86176
         BR    R14           RETURN TO SYSTEM                    86176
         STM   R11,R14,SYNSAVE   SAVE SYNAD SAVE AND RETURN      86176
         BALR  R14,R15       CALL $CHKMSG0                       86176
         DROP  R11           CHANGED BY CHKMSG0                  86176
         USING *,R14         USE WHAT WE HAVE                    86176
         LM    R11,R14,SYNSAVE   RESTORE SYNAD SAVE AND RETURN   86176
         BR    R14           RETURN TO MAINLINE OR CLOSE         86176
SYNSAVE  DC    4F'0'         SYNAD SAVE AREA                     86176
         POP   USING         RESTORE OLD DEFINITIONS             86176
         DC    H'3156'  BLKSIZE FOR 3330/3330-1 (PREFERRED)      86176
         DC    H'3156'  BLKSIZE FOR 3330/3330-1 (PREFERRED)      86176
         WXTRN SNAPSHOT,&FORTRAN                                 86178
//       EXEC  SYXTUCL,LIB='SYS1.PASSRC',OLIB='SYS1.PASLIB',SPRM=,
//             DECK=,DUMMY=,LCT=125
//SYSIN  DD    DISP=(OLD,PASS),DSN=&&UP2
//ASM.ASMPUNCH DD DISP=OLD,DSN=SYS1.PASOBJ(PASMON),DCB=BLKSIZE=3120
//ASM.SYSIN DD *
%XEROX TRAY
%RELINK PASCMON: RUNTIME
//FIXUP  EXEC  PGM=IEFBR14
//ONE    DD    DISP=(OLD,DELETE),DSN=&&LOADSET
//TWO    DD    DISP=(OLD,DELETE),DSN=&&UPSET
//       EXEC  SYXTUCL,LIB='SYS1.PASSRC',OLIB='SYS1.PASLIB',
//             SPRM=SHORT,DECK=,COND=(9,LT),LCT=125
//SYSIN  DD    DISP=(OLD,PASS),DSN=&&UP2
//ASM.ASMPUNCH DD DISP=OLD,DSN=SYS1.PASOBJ(PASMON0),DCB=BLKSIZE=3120
//ASM.SYSIN DD *
%XEROX TRAY
CODE=8
LKEDCODE=9
%RELINK PASCMON0: RUNTIME
  INCLUDE LNKLMOD(PASCMON0)
%RELINK PASCAL:
  INCLUDE LNKLMOD(PASCMON0)
%RELINK ASMPCODE:
  INCLUDE LNKLMOD(PASCMON0)
%RELINK PASPROF:
